name: Visual Regression Testing

on:
  push:
    branches: [ master, staging, dev ]
  pull_request:
    branches: [ master, staging, dev ]

jobs:
  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for Chromatic
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Storybook
        run: npm run build-storybook
      
      - name: Run Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: false
          exitOnceUploaded: true
          onlyChanged: true
          externals: |
            - 'public/**'
            - 'assets/**'
      
      - name: Comment PR with Chromatic results
        if: github.event_name == 'pull_request'
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          comment: true

  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run performance tests
        run: npm run test:performance
        env:
          CI: true
      
      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: coverage/performance-results.json
      
      - name: Check performance thresholds
        run: |
          node -e "
          const results = require('./coverage/performance-results.json');
          const failed = results.benchmarks.filter(b => b.failed);
          if (failed.length > 0) {
            console.error('Performance benchmarks failed:', failed);
            process.exit(1);
          }
          console.log('All performance benchmarks passed!');
          "

  bundle-size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build production bundle
        run: npx expo export --platform web
      
      - name: Analyze bundle size
        run: |
          echo "Bundle Size Analysis"
          find dist -name "*.js" -exec du -h {} + | sort -rh | head -20
          
          TOTAL_SIZE=$(du -sb dist | awk '{print $1}')
          MAX_SIZE=5000000 # 5MB limit
          
          if [ $TOTAL_SIZE -gt $MAX_SIZE ]; then
            echo "Bundle size ($TOTAL_SIZE bytes) exceeds limit ($MAX_SIZE bytes)"
            exit 1
          fi
          
          echo "Bundle size ($TOTAL_SIZE bytes) is within limits"
      
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: dist/
