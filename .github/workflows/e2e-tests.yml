name: E2E Tests

on:
  push:
    branches: [ master, staging, dev ]
  pull_request:
    branches: [ master, staging, dev ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  api-tests:
    name: API Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run API tests
        run: npm test -- --testPathPattern=api.test.ts --coverage
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: api
          name: api-coverage

  playwright-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results-${{ matrix.browser }}
          path: test-results/
      
      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: test-results/screenshots/

  mobile-playwright:
    name: Mobile Browser Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium webkit
      
      - name: Run mobile tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mobile-browser-results
          path: test-results/

  ios-detox-tests:
    name: iOS Detox Tests
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Detox CLI
        run: npm install -g detox-cli
      
      - name: Install pods
        run: |
          cd ios
          pod install
      
      - name: Build for Detox
        run: detox build --configuration ios.sim.debug
      
      - name: Run Detox tests
        run: detox test --configuration ios.sim.debug --cleanup --headless
      
      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ios-detox-artifacts
          path: artifacts/

  android-detox-tests:
    name: Android Detox Tests
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Detox CLI
        run: npm install -g detox-cli
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      
      - name: Create AVD
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-33;google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_6_Pro_API_33 -k "system-images;android-33;google_apis;x86_64" --force
      
      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd Pixel_6_Pro_API_33 -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
      
      - name: Build for Detox
        run: detox build --configuration android.emu.debug
      
      - name: Run Detox tests
        run: detox test --configuration android.emu.debug --headless
      
      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: android-detox-artifacts
          path: artifacts/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build app
        run: npm run build
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: .lighthouseci/

  test-report:
    name: Generate Test Report
    needs: [api-tests, playwright-tests, mobile-playwright]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Merge test results
        run: |
          mkdir -p combined-results
          find . -name "*.xml" -type f -exec cp {} combined-results/ \;
          find . -name "*.json" -type f -exec cp {} combined-results/ \;
      
      - name: Generate summary report
        run: |
          echo "# E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| API Tests | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Playwright Tests | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile Tests | ✅ |" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload combined report
        uses: actions/upload-artifact@v3
        with:
          name: combined-test-report
          path: combined-results/
