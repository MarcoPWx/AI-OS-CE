{
  "categories": [
    {
      "name": "Networking & Protocols",
      "slug": "networking-protocols",
      "description": "Questions about Networking & Protocols",
      "questionCount": 15
    },
    {
      "name": "Containers & Orchestration",
      "slug": "containers-orchestration",
      "description": "Questions about Containers & Orchestration",
      "questionCount": 15
    },
    {
      "name": "Cloud Computing & AWS/Azure/GCP",
      "slug": "cloud-computing",
      "description": "Questions about Cloud Computing & AWS/Azure/GCP",
      "questionCount": 15
    },
    {
      "name": "Monitoring & Observability",
      "slug": "monitoring-observability",
      "description": "Questions about Monitoring & Observability",
      "questionCount": 10
    },
    {
      "name": "Advanced Database Concepts",
      "slug": "database-advanced",
      "description": "Questions about Advanced Database Concepts",
      "questionCount": 10
    },
    {
      "name": "CI/CD & DevOps Practices",
      "slug": "cicd-devops",
      "description": "Questions about CI/CD & DevOps Practices",
      "questionCount": 10
    },
    {
      "name": "Security & Authentication",
      "slug": "security-authentication",
      "description": "Questions about Security & Authentication",
      "questionCount": 10
    },
    {
      "name": "Message Queues & Event Streaming",
      "slug": "message-queues-streaming",
      "description": "Questions about Message Queues & Event Streaming",
      "questionCount": 10
    },
    {
      "name": "Performance & Optimization",
      "slug": "performance-optimization",
      "description": "Questions about Performance & Optimization",
      "questionCount": 5
    },
    {
      "name": "API Modularization & Architecture",
      "slug": "api-modularization",
      "description": "Questions about API Modularization & Architecture",
      "questionCount": 15
    },
    {
      "name": "REST vs GraphQL vs gRPC",
      "slug": "rest-graphql-grpc",
      "description": "Questions about REST vs GraphQL vs gRPC",
      "questionCount": 5
    },
    {
      "name": "Authentication & Authorization",
      "slug": "authentication-authorization",
      "description": "Questions about Authentication & Authorization",
      "questionCount": 6
    },
    {
      "name": "Microservices & Distributed Systems",
      "slug": "microservices-patterns",
      "description": "Questions about Microservices & Distributed Systems",
      "questionCount": 7
    },
    {
      "name": "API Testing & Documentation",
      "slug": "api-testing-documentation",
      "description": "Questions about API Testing & Documentation",
      "questionCount": 5
    },
    {
      "name": "Database Patterns & Optimization",
      "slug": "database-patterns",
      "description": "Questions about Database Patterns & Optimization",
      "questionCount": 7
    },
    {
      "name": "Frontend Architecture & Patterns",
      "slug": "frontend-architecture",
      "description": "Questions about Frontend Architecture & Patterns",
      "questionCount": 7
    },
    {
      "name": "DevOps & CI/CD",
      "slug": "devops-ci-cd",
      "description": "Questions about DevOps & CI/CD",
      "questionCount": 5
    },
    {
      "name": "Kubernetes Local Dev & Troubleshooting",
      "slug": "k8s-local-troubleshooting",
      "description": "Questions about Kubernetes Local Dev & Troubleshooting",
      "questionCount": 15
    },
    {
      "name": "HTTP Headers",
      "slug": "http-headers",
      "description": "Questions about HTTP Headers",
      "questionCount": 12
    },
    {
      "name": "API Architectural Styles",
      "slug": "api-architectural-styles",
      "description": "Questions about API Architectural Styles",
      "questionCount": 8
    },
    {
      "name": "Backend Architecture & Design",
      "slug": "backend-architecture",
      "description": "Questions about Backend Architecture & Design",
      "questionCount": 4
    },
    {
      "name": "Authentication & Security",
      "slug": "backend-auth-security",
      "description": "Questions about Authentication & Security",
      "questionCount": 3
    },
    {
      "name": "Caching Strategies",
      "slug": "backend-caching",
      "description": "Questions about Caching Strategies",
      "questionCount": 4
    },
    {
      "name": "Resilience & Reliability",
      "slug": "backend-resilience",
      "description": "Questions about Resilience & Reliability",
      "questionCount": 4
    },
    {
      "name": "Rate Limiting & Throttling",
      "slug": "backend-rate-limiting",
      "description": "Questions about Rate Limiting & Throttling",
      "questionCount": 3
    },
    {
      "name": "Database & Data Patterns",
      "slug": "backend-data-patterns",
      "description": "Questions about Database & Data Patterns",
      "questionCount": 5
    },
    {
      "name": "Async Processing & Queues",
      "slug": "backend-async-processing",
      "description": "Questions about Async Processing & Queues",
      "questionCount": 4
    },
    {
      "name": "Observability & Monitoring",
      "slug": "backend-observability",
      "description": "Questions about Observability & Monitoring",
      "questionCount": 5
    },
    {
      "name": "API Design & Documentation",
      "slug": "backend-api-design",
      "description": "Questions about API Design & Documentation",
      "questionCount": 4
    },
    {
      "name": "Scaling & Performance",
      "slug": "backend-scaling",
      "description": "Questions about Scaling & Performance",
      "questionCount": 5
    },
    {
      "name": "Testing Strategies",
      "slug": "backend-testing",
      "description": "Questions about Testing Strategies",
      "questionCount": 3
    },
    {
      "name": "Deployment & Operations",
      "slug": "backend-deployment",
      "description": "Questions about Deployment & Operations",
      "questionCount": 4
    },
    {
      "name": "Observability: Prometheus & Grafana",
      "slug": "observability-prometheus-grafana",
      "description": "Questions about Observability: Prometheus & Grafana",
      "questionCount": 11
    },
    {
      "name": "Istio Traffic Management - Rapid Recall",
      "slug": "istio-traffic-drills",
      "description": "Questions about Istio Traffic Management - Rapid Recall",
      "questionCount": 6
    },
    {
      "name": "ESO & Vault - Command Recall",
      "slug": "eso-vault-drills",
      "description": "Questions about ESO & Vault - Command Recall",
      "questionCount": 5
    },
    {
      "name": "Feature Flags - Quick Implementation",
      "slug": "feature-flags-drills",
      "description": "Questions about Feature Flags - Quick Implementation",
      "questionCount": 5
    },
    {
      "name": "Runtime Debugging - Rapid Response",
      "slug": "debugging-drills",
      "description": "Questions about Runtime Debugging - Rapid Response",
      "questionCount": 5
    },
    {
      "name": "Config & Secrets Patterns - Best Practices",
      "slug": "config-patterns-drills",
      "description": "Questions about Config & Secrets Patterns - Best Practices",
      "questionCount": 5
    },
    {
      "name": "Command Reference - Instant Recall",
      "slug": "command-reference-drills",
      "description": "Questions about Command Reference - Instant Recall",
      "questionCount": 7
    },
    {
      "name": "Implementation Checklists - Step by Step",
      "slug": "checklist-drills",
      "description": "Questions about Implementation Checklists - Step by Step",
      "questionCount": 5
    },
    {
      "name": "YAML Patterns - Quick Reference",
      "slug": "yaml-patterns-drills",
      "description": "Questions about YAML Patterns - Quick Reference",
      "questionCount": 5
    },
    {
      "name": "Kubectl Essential Commands - Rapid Recall",
      "slug": "kubectl-essentials-drills",
      "description": "Questions about Kubectl Essential Commands - Rapid Recall",
      "questionCount": 8
    },
    {
      "name": "Pod Debugging - Quick Diagnosis",
      "slug": "pod-debugging-drills",
      "description": "Questions about Pod Debugging - Quick Diagnosis",
      "questionCount": 7
    },
    {
      "name": "Resource Management - Limits & Requests",
      "slug": "resource-management-drills",
      "description": "Questions about Resource Management - Limits & Requests",
      "questionCount": 6
    },
    {
      "name": "ConfigMaps & Secrets - Quick Operations",
      "slug": "configmap-secret-drills",
      "description": "Questions about ConfigMaps & Secrets - Quick Operations",
      "questionCount": 6
    },
    {
      "name": "Kubernetes Networking - Services & Ingress",
      "slug": "k8s-networking-drills",
      "description": "Questions about Kubernetes Networking - Services & Ingress",
      "questionCount": 6
    },
    {
      "name": "RBAC & Security - Permissions Management",
      "slug": "rbac-security-drills",
      "description": "Questions about RBAC & Security - Permissions Management",
      "questionCount": 6
    },
    {
      "name": "Storage - PV, PVC, and Volume Management",
      "slug": "storage-drills",
      "description": "Questions about Storage - PV, PVC, and Volume Management",
      "questionCount": 6
    },
    {
      "name": "Cluster Operations - Node & Cluster Management",
      "slug": "cluster-ops-drills",
      "description": "Questions about Cluster Operations - Node & Cluster Management",
      "questionCount": 7
    },
    {
      "name": "Dockerfile Optimization - Best Practices",
      "slug": "dockerfile-optimization-drills",
      "description": "Questions about Dockerfile Optimization - Best Practices",
      "questionCount": 7
    },
    {
      "name": "Docker Commands - Essential Operations",
      "slug": "docker-commands-drills",
      "description": "Questions about Docker Commands - Essential Operations",
      "questionCount": 7
    },
    {
      "name": "Container Debugging - Troubleshooting",
      "slug": "container-debugging-drills",
      "description": "Questions about Container Debugging - Troubleshooting",
      "questionCount": 7
    },
    {
      "name": "Docker Compose - Multi-Container Apps",
      "slug": "docker-compose-drills",
      "description": "Questions about Docker Compose - Multi-Container Apps",
      "questionCount": 7
    },
    {
      "name": "Registry & Image Management",
      "slug": "registry-image-drills",
      "description": "Questions about Registry & Image Management",
      "questionCount": 7
    },
    {
      "name": "Docker Security - Hardening Containers",
      "slug": "docker-security-drills",
      "description": "Questions about Docker Security - Hardening Containers",
      "questionCount": 7
    },
    {
      "name": "Docker Networking - Advanced Concepts",
      "slug": "docker-networking-drills",
      "description": "Questions about Docker Networking - Advanced Concepts",
      "questionCount": 7
    },
    {
      "name": "SQL Query Optimization - Performance Tuning",
      "slug": "sql-optimization-drills",
      "description": "Questions about SQL Query Optimization - Performance Tuning",
      "questionCount": 8
    },
    {
      "name": "SQL Advanced Queries - CTEs, Window Functions",
      "slug": "sql-advanced-drills",
      "description": "Questions about SQL Advanced Queries - CTEs, Window Functions",
      "questionCount": 7
    },
    {
      "name": "Database Transactions - ACID & Isolation",
      "slug": "database-transactions-drills",
      "description": "Questions about Database Transactions - ACID & Isolation",
      "questionCount": 7
    },
    {
      "name": "NoSQL Patterns - MongoDB, Redis, Cassandra",
      "slug": "nosql-patterns-drills",
      "description": "Questions about NoSQL Patterns - MongoDB, Redis, Cassandra",
      "questionCount": 7
    },
    {
      "name": "Database Design - Schema & Architecture",
      "slug": "database-design-drills",
      "description": "Questions about Database Design - Schema & Architecture",
      "questionCount": 7
    },
    {
      "name": "Database Performance - Monitoring & Tuning",
      "slug": "database-performance-drills",
      "description": "Questions about Database Performance - Monitoring & Tuning",
      "questionCount": 6
    },
    {
      "name": "Database Backup & Recovery - Strategies",
      "slug": "database-backup-drills",
      "description": "Questions about Database Backup & Recovery - Strategies",
      "questionCount": 6
    },
    {
      "name": "Database Security - Protection & Compliance",
      "slug": "database-security-drills",
      "description": "Questions about Database Security - Protection & Compliance",
      "questionCount": 6
    },
    {
      "name": "AWS Core Services - Essential Knowledge",
      "slug": "aws-core-drills",
      "description": "Questions about AWS Core Services - Essential Knowledge",
      "questionCount": 8
    },
    {
      "name": "AWS Advanced Patterns - Architecture",
      "slug": "aws-advanced-drills",
      "description": "Questions about AWS Advanced Patterns - Architecture",
      "questionCount": 7
    },
    {
      "name": "Azure Fundamentals - Core Services",
      "slug": "azure-fundamentals-drills",
      "description": "Questions about Azure Fundamentals - Core Services",
      "questionCount": 7
    },
    {
      "name": "GCP Essentials - Core Services",
      "slug": "gcp-essentials-drills",
      "description": "Questions about GCP Essentials - Core Services",
      "questionCount": 7
    },
    {
      "name": "Multi-Cloud Strategies - Comparison",
      "slug": "multi-cloud-drills",
      "description": "Questions about Multi-Cloud Strategies - Comparison",
      "questionCount": 6
    },
    {
      "name": "Cloud Cost Optimization - Best Practices",
      "slug": "cloud-cost-drills",
      "description": "Questions about Cloud Cost Optimization - Best Practices",
      "questionCount": 6
    },
    {
      "name": "Cloud Security - Best Practices",
      "slug": "cloud-security-drills",
      "description": "Questions about Cloud Security - Best Practices",
      "questionCount": 7
    },
    {
      "name": "Cloud Migration - Strategies & Patterns",
      "slug": "cloud-migration-drills",
      "description": "Questions about Cloud Migration - Strategies & Patterns",
      "questionCount": 6
    }
  ],
  "questions": [
    {
      "id": "networking-protocols-0",
      "categorySlug": "networking-protocols",
      "question": "What is the difference between TCP and UDP?",
      "options": [
        "TCP is faster, UDP is slower",
        "TCP guarantees delivery and order, UDP doesn't guarantee either",
        "UDP is encrypted, TCP is not",
        "There is no difference"
      ],
      "correctAnswer": 1,
      "explanation": "TCP provides reliable, ordered delivery with acknowledgments. UDP is faster but doesn't guarantee delivery or order, making it suitable for real-time applications like video streaming.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-1",
      "categorySlug": "networking-protocols",
      "question": "What is a CDN (Content Delivery Network)?",
      "options": [
        "A database clustering solution",
        "A network of distributed servers that deliver content based on geographic location",
        "A type of VPN service",
        "A container deployment network"
      ],
      "correctAnswer": 1,
      "explanation": "CDNs cache content at edge locations worldwide, serving users from the nearest server to reduce latency and improve performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-2",
      "categorySlug": "networking-protocols",
      "question": "What does the HTTP status code 429 mean?",
      "options": [
        "Internal Server Error",
        "Not Found",
        "Too Many Requests (Rate Limited)",
        "Unauthorized"
      ],
      "correctAnswer": 2,
      "explanation": "HTTP 429 indicates the client has sent too many requests in a given time period and is being rate limited.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-3",
      "categorySlug": "networking-protocols",
      "question": "What is gRPC?",
      "options": [
        "A graphical user interface framework",
        "A high-performance RPC framework using Protocol Buffers",
        "A database query language",
        "A container runtime"
      ],
      "correctAnswer": 1,
      "explanation": "gRPC is Google's RPC framework that uses HTTP/2 for transport and Protocol Buffers for serialization, enabling efficient service-to-service communication.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-4",
      "categorySlug": "networking-protocols",
      "question": "What is the purpose of a DNS TXT record?",
      "options": [
        "To store website text content",
        "To store arbitrary text data, often for domain verification or SPF records",
        "To translate domain names to text",
        "To encrypt DNS queries"
      ],
      "correctAnswer": 1,
      "explanation": "TXT records store text information for various purposes including domain ownership verification, email authentication (SPF, DKIM), and site verification.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-5",
      "categorySlug": "networking-protocols",
      "question": "What is WebSocket used for?",
      "options": [
        "Downloading large files",
        "Full-duplex, persistent communication between client and server",
        "Encrypting web traffic",
        "Caching web pages"
      ],
      "correctAnswer": 1,
      "explanation": "WebSocket provides full-duplex communication channels over a single TCP connection, enabling real-time bidirectional data transfer.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-6",
      "categorySlug": "networking-protocols",
      "question": "What is the OSI model layer responsible for routing?",
      "options": [
        "Physical Layer (Layer 1)",
        "Data Link Layer (Layer 2)",
        "Network Layer (Layer 3)",
        "Transport Layer (Layer 4)"
      ],
      "correctAnswer": 2,
      "explanation": "Layer 3 (Network Layer) handles routing between networks using protocols like IP, determining the best path for data packets.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-7",
      "categorySlug": "networking-protocols",
      "question": "What is CORS?",
      "options": [
        "Container Orchestration Resource Service",
        "Cross-Origin Resource Sharing - a mechanism for secure cross-domain requests",
        "Centralized Object Repository System",
        "Cloud Operating Resource Standard"
      ],
      "correctAnswer": 1,
      "explanation": "CORS is a security feature that allows or restricts web pages to access resources from other domains, controlled via HTTP headers.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-8",
      "categorySlug": "networking-protocols",
      "question": "What port does HTTPS typically use?",
      "options": [
        "80",
        "443",
        "8080",
        "3000"
      ],
      "correctAnswer": 1,
      "explanation": "HTTPS uses port 443 by default, while HTTP uses port 80. HTTPS provides encrypted communication using TLS/SSL.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-9",
      "categorySlug": "networking-protocols",
      "question": "What is a subnet mask used for?",
      "options": [
        "Hiding IP addresses",
        "Determining the network and host portions of an IP address",
        "Encrypting network traffic",
        "Load balancing"
      ],
      "correctAnswer": 1,
      "explanation": "A subnet mask divides an IP address into network and host portions, determining which part identifies the network and which identifies the device.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-10",
      "categorySlug": "networking-protocols",
      "question": "What is BGP (Border Gateway Protocol)?",
      "options": [
        "A VPN protocol",
        "The routing protocol that powers the internet",
        "A firewall configuration protocol",
        "A load balancing algorithm"
      ],
      "correctAnswer": 1,
      "explanation": "BGP is the protocol that internet routers use to exchange routing information, essentially directing traffic across the internet.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-11",
      "categorySlug": "networking-protocols",
      "question": "What is the difference between a proxy and a VPN?",
      "options": [
        "They are the same thing",
        "Proxy works at application level, VPN encrypts all traffic at network level",
        "VPN is faster than proxy",
        "Proxy is more secure than VPN"
      ],
      "correctAnswer": 1,
      "explanation": "A proxy typically handles specific application traffic, while a VPN creates an encrypted tunnel for all network traffic from your device.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-12",
      "categorySlug": "networking-protocols",
      "question": "What is NAT (Network Address Translation)?",
      "options": [
        "A type of firewall",
        "A technique that maps private IP addresses to public IPs",
        "A network monitoring tool",
        "An encryption protocol"
      ],
      "correctAnswer": 1,
      "explanation": "NAT allows multiple devices on a private network to share a single public IP address, conserving IPv4 addresses and adding a layer of security.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-13",
      "categorySlug": "networking-protocols",
      "question": "What is the purpose of DHCP?",
      "options": [
        "To encrypt network traffic",
        "To automatically assign IP addresses to devices on a network",
        "To route traffic between networks",
        "To compress data packets"
      ],
      "correctAnswer": 1,
      "explanation": "DHCP (Dynamic Host Configuration Protocol) automatically assigns IP addresses, subnet masks, and other network configuration to devices.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "networking-protocols-14",
      "categorySlug": "networking-protocols",
      "question": "What is a VLAN?",
      "options": [
        "Virtual Local Area Network - logical network segmentation",
        "Very Large Area Network",
        "Virtual LAN Application",
        "Verified Local Access Node"
      ],
      "correctAnswer": 0,
      "explanation": "VLANs create logically separate networks within the same physical network infrastructure, improving security and reducing broadcast traffic.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-0",
      "categorySlug": "containers-orchestration",
      "question": "What is the difference between a Docker image and a container?",
      "options": [
        "They are the same thing",
        "An image is a template, a container is a running instance of an image",
        "A container is smaller than an image",
        "An image runs applications, a container stores them"
      ],
      "correctAnswer": 1,
      "explanation": "A Docker image is a read-only template with application code and dependencies. A container is a running instance created from an image.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-1",
      "categorySlug": "containers-orchestration",
      "question": "What is a Kubernetes Pod?",
      "options": [
        "A single container",
        "The smallest deployable unit that can contain one or more containers",
        "A type of service",
        "A storage volume"
      ],
      "correctAnswer": 1,
      "explanation": "A Pod is the smallest deployable unit in Kubernetes, containing one or more containers that share storage, network, and specifications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-2",
      "categorySlug": "containers-orchestration",
      "question": "What is the purpose of a Dockerfile?",
      "options": [
        "To run Docker commands",
        "To define instructions for building a Docker image",
        "To configure Docker daemon",
        "To store Docker credentials"
      ],
      "correctAnswer": 1,
      "explanation": "A Dockerfile contains instructions for building a Docker image, specifying the base image, dependencies, commands, and configuration.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-3",
      "categorySlug": "containers-orchestration",
      "question": "What is container orchestration primarily used for?",
      "options": [
        "Building container images",
        "Managing, scaling, and deploying containers across multiple hosts",
        "Creating virtual machines",
        "Compiling source code"
      ],
      "correctAnswer": 1,
      "explanation": "Container orchestration automates deployment, management, scaling, networking, and availability of container-based applications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-4",
      "categorySlug": "containers-orchestration",
      "question": "What is a Kubernetes StatefulSet?",
      "options": [
        "A set of environment variables",
        "A workload for stateful applications with persistent storage and ordered deployment",
        "A type of load balancer",
        "A security policy"
      ],
      "correctAnswer": 1,
      "explanation": "StatefulSet manages stateful applications, providing guarantees about ordering and uniqueness of pods, with persistent storage.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-5",
      "categorySlug": "containers-orchestration",
      "question": "What is the purpose of Docker Compose?",
      "options": [
        "To compress Docker images",
        "To define and run multi-container applications",
        "To compose music in Docker",
        "To merge multiple Dockerfiles"
      ],
      "correctAnswer": 1,
      "explanation": "Docker Compose uses YAML files to configure and run multi-container applications, defining services, networks, and volumes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-6",
      "categorySlug": "containers-orchestration",
      "question": "What is a Kubernetes Ingress?",
      "options": [
        "A type of pod",
        "An API object that manages external access to services, typically HTTP/HTTPS",
        "A storage class",
        "A network policy"
      ],
      "correctAnswer": 1,
      "explanation": "Ingress exposes HTTP and HTTPS routes from outside the cluster to services within, providing load balancing, SSL termination, and name-based virtual hosting.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-7",
      "categorySlug": "containers-orchestration",
      "question": "What is the difference between CMD and ENTRYPOINT in a Dockerfile?",
      "options": [
        "They are identical",
        "ENTRYPOINT sets the executable, CMD provides default arguments",
        "CMD is faster than ENTRYPOINT",
        "ENTRYPOINT is deprecated"
      ],
      "correctAnswer": 1,
      "explanation": "ENTRYPOINT configures a container to run as an executable, while CMD provides default arguments that can be overridden.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-8",
      "categorySlug": "containers-orchestration",
      "question": "What is a Kubernetes ConfigMap?",
      "options": [
        "A geographic map of clusters",
        "An object to store non-sensitive configuration data",
        "A network topology diagram",
        "A type of secret"
      ],
      "correctAnswer": 1,
      "explanation": "ConfigMaps store configuration data as key-value pairs that can be consumed by pods as environment variables, command-line arguments, or config files.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-9",
      "categorySlug": "containers-orchestration",
      "question": "What is Docker Swarm?",
      "options": [
        "A bug in Docker",
        "Docker's native clustering and orchestration solution",
        "A Docker image registry",
        "A Docker networking plugin"
      ],
      "correctAnswer": 1,
      "explanation": "Docker Swarm is Docker's built-in orchestration tool for creating and managing a cluster of Docker nodes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-10",
      "categorySlug": "containers-orchestration",
      "question": "What is a Kubernetes DaemonSet?",
      "options": [
        "A background process manager",
        "Ensures a copy of a pod runs on all (or some) nodes",
        "A scheduling algorithm",
        "A type of service"
      ],
      "correctAnswer": 1,
      "explanation": "DaemonSet ensures that all (or some) nodes run a copy of a pod, commonly used for node monitoring, log collection, or storage daemons.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-11",
      "categorySlug": "containers-orchestration",
      "question": "What is the purpose of a Kubernetes Service?",
      "options": [
        "To run background tasks",
        "To provide a stable endpoint for accessing a set of pods",
        "To deploy applications",
        "To manage secrets"
      ],
      "correctAnswer": 1,
      "explanation": "A Service provides a stable IP address and DNS name for accessing a dynamic set of pods, enabling load balancing and service discovery.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-12",
      "categorySlug": "containers-orchestration",
      "question": "What is container image layering?",
      "options": [
        "Stacking containers on top of each other",
        "Each instruction in Dockerfile creates a read-only layer",
        "Adding multiple tags to an image",
        "Running multiple containers simultaneously"
      ],
      "correctAnswer": 1,
      "explanation": "Docker images consist of read-only layers, with each Dockerfile instruction adding a new layer, enabling efficient storage and transfer.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-13",
      "categorySlug": "containers-orchestration",
      "question": "What is Helm in Kubernetes?",
      "options": [
        "A networking plugin",
        "A package manager for Kubernetes applications",
        "A monitoring tool",
        "A security scanner"
      ],
      "correctAnswer": 1,
      "explanation": "Helm is the package manager for Kubernetes, using 'charts' to define, install, and upgrade complex Kubernetes applications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "containers-orchestration-14",
      "categorySlug": "containers-orchestration",
      "question": "What is the purpose of init containers in Kubernetes?",
      "options": [
        "To initialize the cluster",
        "Specialized containers that run before app containers in a pod",
        "To create persistent volumes",
        "To manage network initialization"
      ],
      "correctAnswer": 1,
      "explanation": "Init containers run and complete before app containers start, useful for setup tasks like waiting for services or preparing volumes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-0",
      "categorySlug": "cloud-computing",
      "question": "What is the difference between IaaS, PaaS, and SaaS?",
      "options": [
        "They are different programming languages",
        "IaaS provides infrastructure, PaaS provides platform, SaaS provides software",
        "They are different cloud providers",
        "They are different types of databases"
      ],
      "correctAnswer": 1,
      "explanation": "IaaS provides virtualized computing resources, PaaS provides a platform for developing applications, and SaaS provides ready-to-use software applications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-1",
      "categorySlug": "cloud-computing",
      "question": "What is AWS Lambda?",
      "options": [
        "A container service",
        "A serverless compute service that runs code in response to events",
        "A database service",
        "A CDN service"
      ],
      "correctAnswer": 1,
      "explanation": "AWS Lambda is a serverless compute service that runs your code in response to events without provisioning or managing servers.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-2",
      "categorySlug": "cloud-computing",
      "question": "What is the purpose of an AWS VPC?",
      "options": [
        "Virtual Private Computer",
        "Virtual Private Cloud - an isolated network in AWS",
        "Very Powerful Computing",
        "Virtual Public Container"
      ],
      "correctAnswer": 1,
      "explanation": "VPC (Virtual Private Cloud) provides an isolated section of AWS cloud where you can launch resources in a virtual network you define.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-3",
      "categorySlug": "cloud-computing",
      "question": "What is the difference between vertical and horizontal scaling?",
      "options": [
        "They are the same",
        "Vertical adds more power to existing machines, horizontal adds more machines",
        "Horizontal is always better",
        "Vertical scales databases, horizontal scales applications"
      ],
      "correctAnswer": 1,
      "explanation": "Vertical scaling (scale-up) adds more CPU/RAM to existing machines, while horizontal scaling (scale-out) adds more machines to the resource pool.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-4",
      "categorySlug": "cloud-computing",
      "question": "What is AWS S3?",
      "options": [
        "A compute service",
        "An object storage service",
        "A database service",
        "A networking service"
      ],
      "correctAnswer": 1,
      "explanation": "Amazon S3 (Simple Storage Service) is an object storage service offering scalability, data availability, security, and performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-5",
      "categorySlug": "cloud-computing",
      "question": "What is the purpose of an Availability Zone in cloud computing?",
      "options": [
        "To provide different pricing tiers",
        "Isolated locations within a region for fault tolerance",
        "To separate development and production",
        "To provide different service levels"
      ],
      "correctAnswer": 1,
      "explanation": "Availability Zones are isolated locations within a region, designed to provide fault tolerance and high availability for applications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-6",
      "categorySlug": "cloud-computing",
      "question": "What is Azure Blob Storage equivalent to in AWS?",
      "options": [
        "EC2",
        "S3",
        "RDS",
        "Lambda"
      ],
      "correctAnswer": 1,
      "explanation": "Azure Blob Storage and AWS S3 are both object storage services, providing scalable storage for unstructured data.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-7",
      "categorySlug": "cloud-computing",
      "question": "What is the purpose of Cloud IAM?",
      "options": [
        "Internet Access Management",
        "Identity and Access Management - controlling who can access what",
        "Infrastructure Asset Management",
        "Integrated Application Management"
      ],
      "correctAnswer": 1,
      "explanation": "IAM (Identity and Access Management) controls authentication and authorization, managing who can access which resources and what they can do.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-8",
      "categorySlug": "cloud-computing",
      "question": "What is a cloud region?",
      "options": [
        "A billing zone",
        "A geographic area containing multiple data centers",
        "A single data center",
        "A virtual network segment"
      ],
      "correctAnswer": 1,
      "explanation": "A region is a physical geographic area containing multiple availability zones (data centers) providing low-latency connectivity.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-9",
      "categorySlug": "cloud-computing",
      "question": "What is the purpose of auto-scaling?",
      "options": [
        "To automatically update software",
        "To automatically adjust resources based on demand",
        "To scale databases only",
        "To reduce costs only"
      ],
      "correctAnswer": 1,
      "explanation": "Auto-scaling automatically adjusts computational resources based on demand, ensuring performance while optimizing costs.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-10",
      "categorySlug": "cloud-computing",
      "question": "What is Google Cloud Pub/Sub?",
      "options": [
        "A subscription management service",
        "A messaging service for event-driven systems",
        "A publication platform",
        "A submarine communication system"
      ],
      "correctAnswer": 1,
      "explanation": "Cloud Pub/Sub is a messaging service for building event-driven systems and streaming analytics pipelines.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-11",
      "categorySlug": "cloud-computing",
      "question": "What is the difference between hot, cool, and archive storage tiers?",
      "options": [
        "Temperature of data centers",
        "Access frequency and cost: hot for frequent, archive for rare access",
        "Geographic locations",
        "Processing speed"
      ],
      "correctAnswer": 1,
      "explanation": "Storage tiers optimize cost based on access patterns: hot for frequent access, cool for infrequent, and archive for rare access with lowest cost.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-12",
      "categorySlug": "cloud-computing",
      "question": "What is a cloud-native application?",
      "options": [
        "An application that only runs in the cloud",
        "An application designed to leverage cloud computing benefits",
        "An application written in cloud languages",
        "An application that creates clouds"
      ],
      "correctAnswer": 1,
      "explanation": "Cloud-native applications are designed to exploit cloud benefits: elasticity, scalability, resilience, and flexible deployment.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-13",
      "categorySlug": "cloud-computing",
      "question": "What is AWS CloudFormation?",
      "options": [
        "A weather prediction service",
        "Infrastructure as Code service for provisioning AWS resources",
        "A cloud storage service",
        "A monitoring service"
      ],
      "correctAnswer": 1,
      "explanation": "CloudFormation is an IaC service that uses templates to provision and manage AWS resources in a predictable, repeatable way.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-computing-14",
      "categorySlug": "cloud-computing",
      "question": "What is the shared responsibility model in cloud computing?",
      "options": [
        "Sharing costs between customers",
        "Cloud provider manages infrastructure, customer manages data and applications",
        "All responsibility on the provider",
        "All responsibility on the customer"
      ],
      "correctAnswer": 1,
      "explanation": "The shared responsibility model divides security responsibilities: providers handle infrastructure security, customers handle data and application security.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-0",
      "categorySlug": "monitoring-observability",
      "question": "What are the three pillars of observability?",
      "options": [
        "CPU, Memory, Disk",
        "Logs, Metrics, and Traces",
        "Development, Testing, Production",
        "Alerts, Dashboards, Reports"
      ],
      "correctAnswer": 1,
      "explanation": "The three pillars of observability are Logs (events), Metrics (measurements), and Traces (request flow), providing comprehensive system insight.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-1",
      "categorySlug": "monitoring-observability",
      "question": "What is Prometheus?",
      "options": [
        "A Greek god",
        "An open-source monitoring and alerting toolkit",
        "A database system",
        "A deployment tool"
      ],
      "correctAnswer": 1,
      "explanation": "Prometheus is an open-source monitoring system with a time-series database, designed for reliability and scalability.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-2",
      "categorySlug": "monitoring-observability",
      "question": "What is distributed tracing?",
      "options": [
        "Copying traces to multiple locations",
        "Tracking requests as they flow through multiple services",
        "Distributing log files",
        "Load balancing traces"
      ],
      "correctAnswer": 1,
      "explanation": "Distributed tracing tracks requests across multiple services, helping identify bottlenecks and understand system behavior.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-3",
      "categorySlug": "monitoring-observability",
      "question": "What is the purpose of a SLI (Service Level Indicator)?",
      "options": [
        "To indicate service location",
        "A quantitative measure of service behavior",
        "To show service status lights",
        "To indicate service level pricing"
      ],
      "correctAnswer": 1,
      "explanation": "SLIs are metrics that quantify service behavior, like latency or error rate, used to measure service performance against objectives.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-4",
      "categorySlug": "monitoring-observability",
      "question": "What is the difference between monitoring and observability?",
      "options": [
        "They are the same thing",
        "Monitoring tracks known issues, observability helps understand unknown issues",
        "Observability is cheaper than monitoring",
        "Monitoring is more advanced"
      ],
      "correctAnswer": 1,
      "explanation": "Monitoring tracks predefined metrics and known issues, while observability provides insights to understand and debug unknown issues.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-5",
      "categorySlug": "monitoring-observability",
      "question": "What is APM (Application Performance Monitoring)?",
      "options": [
        "Automated Package Management",
        "Monitoring software application performance and availability",
        "Advanced Protocol Management",
        "Application Programming Model"
      ],
      "correctAnswer": 1,
      "explanation": "APM tools monitor and manage software application performance and availability, detecting and diagnosing performance problems.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-6",
      "categorySlug": "monitoring-observability",
      "question": "What is the purpose of structured logging?",
      "options": [
        "To make logs look prettier",
        "To log data in a consistent, parseable format like JSON",
        "To compress log files",
        "To encrypt log data"
      ],
      "correctAnswer": 1,
      "explanation": "Structured logging outputs logs in a consistent, machine-readable format (like JSON), making them easier to search, filter, and analyze.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-7",
      "categorySlug": "monitoring-observability",
      "question": "What is a span in distributed tracing?",
      "options": [
        "The distance between services",
        "A single operation within a trace",
        "The time period of monitoring",
        "A type of metric"
      ],
      "correctAnswer": 1,
      "explanation": "A span represents a single operation within a trace, with its own timing information, forming part of the complete request journey.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-8",
      "categorySlug": "monitoring-observability",
      "question": "What is the purpose of a time-series database?",
      "options": [
        "To store historical records",
        "To efficiently store and query timestamped data",
        "To schedule tasks",
        "To synchronize time across servers"
      ],
      "correctAnswer": 1,
      "explanation": "Time-series databases are optimized for storing and querying timestamped data, essential for metrics and monitoring systems.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "monitoring-observability-9",
      "categorySlug": "monitoring-observability",
      "question": "What is an SLO (Service Level Objective)?",
      "options": [
        "Server Load Optimization",
        "A target level of service measured by SLIs",
        "Service Location Object",
        "System Level Operation"
      ],
      "correctAnswer": 1,
      "explanation": "SLOs are specific measurable targets for service performance, like '99.9% of requests complete in under 200ms'.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-0",
      "categorySlug": "database-advanced",
      "question": "What is database normalization?",
      "options": [
        "Making all databases the same",
        "Organizing data to reduce redundancy and improve integrity",
        "Converting to normal text format",
        "Standardizing database names"
      ],
      "correctAnswer": 1,
      "explanation": "Normalization organizes database tables and columns to reduce data redundancy and improve data integrity through specific normal forms.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-1",
      "categorySlug": "database-advanced",
      "question": "What is a database index?",
      "options": [
        "A table of contents",
        "A data structure that improves query performance",
        "The primary key",
        "A list of all tables"
      ],
      "correctAnswer": 1,
      "explanation": "An index is a data structure (often B-tree) that improves the speed of data retrieval operations at the cost of additional storage and write overhead.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-2",
      "categorySlug": "database-advanced",
      "question": "What is ACID in database transactions?",
      "options": [
        "A type of database",
        "Atomicity, Consistency, Isolation, Durability",
        "A query language",
        "A backup strategy"
      ],
      "correctAnswer": 1,
      "explanation": "ACID properties ensure database transactions are processed reliably: Atomicity (all or nothing), Consistency (valid state), Isolation (concurrent execution), Durability (permanent).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-3",
      "categorySlug": "database-advanced",
      "question": "What is the difference between SQL and NoSQL databases?",
      "options": [
        "SQL is older, NoSQL is newer",
        "SQL uses structured schemas and relations, NoSQL is more flexible",
        "NoSQL doesn't support queries",
        "SQL is faster than NoSQL"
      ],
      "correctAnswer": 1,
      "explanation": "SQL databases use structured schemas with relations and ACID properties, while NoSQL offers flexible schemas and horizontal scaling.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-4",
      "categorySlug": "database-advanced",
      "question": "What is a materialized view?",
      "options": [
        "A view made of physical materials",
        "A pre-computed view stored as a table",
        "A temporary view",
        "A view that can be edited"
      ],
      "correctAnswer": 1,
      "explanation": "A materialized view stores query results as a physical table, improving performance for complex queries at the cost of storage and maintenance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-5",
      "categorySlug": "database-advanced",
      "question": "What is database connection pooling?",
      "options": [
        "Sharing database passwords",
        "Reusing database connections to reduce overhead",
        "Connecting multiple databases",
        "Creating backup connections"
      ],
      "correctAnswer": 1,
      "explanation": "Connection pooling maintains a cache of database connections that can be reused, reducing the overhead of creating new connections.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-6",
      "categorySlug": "database-advanced",
      "question": "What is a deadlock in databases?",
      "options": [
        "A locked database",
        "When two or more transactions wait for each other indefinitely",
        "A security feature",
        "A type of index"
      ],
      "correctAnswer": 1,
      "explanation": "A deadlock occurs when two or more transactions are waiting for each other to release locks, creating a circular dependency.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-7",
      "categorySlug": "database-advanced",
      "question": "What is the purpose of database replication?",
      "options": [
        "To duplicate code",
        "To maintain copies of data for availability and performance",
        "To create test databases",
        "To compress data"
      ],
      "correctAnswer": 1,
      "explanation": "Replication maintains copies of data across multiple servers for high availability, disaster recovery, and read scaling.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-8",
      "categorySlug": "database-advanced",
      "question": "What is a stored procedure?",
      "options": [
        "A backup procedure",
        "Pre-compiled SQL code stored in the database",
        "A way to store files",
        "A type of table"
      ],
      "correctAnswer": 1,
      "explanation": "Stored procedures are pre-compiled SQL code stored in the database, executed on the server, reducing network traffic and improving performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-advanced-9",
      "categorySlug": "database-advanced",
      "question": "What is the N+1 query problem?",
      "options": [
        "Running too many queries",
        "When fetching a list requires 1 query for the list and N queries for related data",
        "A mathematical problem",
        "A query optimization technique"
      ],
      "correctAnswer": 1,
      "explanation": "The N+1 problem occurs when code makes 1 query for a list of items, then N additional queries for related data, causing performance issues.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-0",
      "categorySlug": "cicd-devops",
      "question": "What is the difference between continuous integration and continuous deployment?",
      "options": [
        "They are the same thing",
        "CI merges code frequently, CD automatically deploys to production",
        "CI is for testing, CD is for building",
        "CI is automated, CD is manual"
      ],
      "correctAnswer": 1,
      "explanation": "CI automatically integrates code changes and runs tests, while CD extends this to automatically deploy validated changes to production.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-1",
      "categorySlug": "cicd-devops",
      "question": "What is a blue-green deployment?",
      "options": [
        "Deploying with color-coded environments",
        "Running two identical production environments and switching between them",
        "A deployment that uses environmental variables",
        "A type of canary deployment"
      ],
      "correctAnswer": 1,
      "explanation": "Blue-green deployment maintains two identical production environments, allowing instant rollback by switching traffic between them.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-2",
      "categorySlug": "cicd-devops",
      "question": "What is the purpose of a Git hook?",
      "options": [
        "To catch bugs",
        "Scripts that run automatically at certain points in Git workflow",
        "To connect Git repositories",
        "To create branches"
      ],
      "correctAnswer": 1,
      "explanation": "Git hooks are scripts that Git executes before or after events like commit, push, and receive, automating tasks and enforcing policies.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-3",
      "categorySlug": "cicd-devops",
      "question": "What is Infrastructure as Code (IaC)?",
      "options": [
        "Writing code for infrastructure components",
        "Managing infrastructure through machine-readable definition files",
        "Converting infrastructure to code",
        "Coding on infrastructure"
      ],
      "correctAnswer": 1,
      "explanation": "IaC manages and provisions infrastructure through code instead of manual processes, ensuring consistency and enabling version control.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-4",
      "categorySlug": "cicd-devops",
      "question": "What is the purpose of a canary deployment?",
      "options": [
        "To deploy to the Canary Islands",
        "Gradually rolling out changes to a small subset of users first",
        "Emergency deployments",
        "Deploying yellow-colored interfaces"
      ],
      "correctAnswer": 1,
      "explanation": "Canary deployments release changes to a small subset of users first, monitoring for issues before full rollout, like canaries in coal mines.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-5",
      "categorySlug": "cicd-devops",
      "question": "What is GitOps?",
      "options": [
        "Git operations",
        "Using Git as the single source of truth for infrastructure and applications",
        "A Git GUI tool",
        "Optimizing Git performance"
      ],
      "correctAnswer": 1,
      "explanation": "GitOps uses Git repositories as the single source of truth for declarative infrastructure and applications, with automated deployment.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-6",
      "categorySlug": "cicd-devops",
      "question": "What is the purpose of a CI/CD pipeline?",
      "options": [
        "To transport code between servers",
        "To automate the software delivery process from code to production",
        "To create backups",
        "To manage databases"
      ],
      "correctAnswer": 1,
      "explanation": "CI/CD pipelines automate building, testing, and deploying code, ensuring consistent and reliable software delivery.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-7",
      "categorySlug": "cicd-devops",
      "question": "What is chaos engineering?",
      "options": [
        "Writing chaotic code",
        "Intentionally injecting failures to test system resilience",
        "Random testing",
        "Unorganized development"
      ],
      "correctAnswer": 1,
      "explanation": "Chaos engineering deliberately introduces failures in production to discover weaknesses and improve system resilience.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-8",
      "categorySlug": "cicd-devops",
      "question": "What is a feature flag?",
      "options": [
        "A flag icon for features",
        "A toggle to enable/disable features without deploying new code",
        "A priority marker",
        "A git branch marker"
      ],
      "correctAnswer": 1,
      "explanation": "Feature flags allow enabling or disabling features at runtime without code deployment, enabling gradual rollouts and A/B testing.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cicd-devops-9",
      "categorySlug": "cicd-devops",
      "question": "What is the purpose of semantic versioning?",
      "options": [
        "To make versions meaningful",
        "Major.Minor.Patch format indicating breaking changes, features, and fixes",
        "To version databases",
        "To track word meanings"
      ],
      "correctAnswer": 1,
      "explanation": "Semantic versioning (SemVer) uses MAJOR.MINOR.PATCH to convey meaning about underlying changes: breaking changes, new features, and bug fixes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-0",
      "categorySlug": "security-authentication",
      "question": "What is the principle of least privilege?",
      "options": [
        "Giving minimum required permissions to perform a function",
        "Having the least number of users",
        "Using the smallest servers",
        "Minimal password requirements"
      ],
      "correctAnswer": 0,
      "explanation": "Least privilege means giving users and processes only the minimum permissions necessary to perform their functions, reducing security risks.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-1",
      "categorySlug": "security-authentication",
      "question": "What is OAuth 2.0?",
      "options": [
        "A password manager",
        "An authorization framework for delegated access",
        "An authentication protocol",
        "A type of encryption"
      ],
      "correctAnswer": 1,
      "explanation": "OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts without exposing passwords.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-2",
      "categorySlug": "security-authentication",
      "question": "What is the difference between encryption and hashing?",
      "options": [
        "They are the same",
        "Encryption is reversible, hashing is one-way",
        "Hashing is reversible, encryption is one-way",
        "Encryption is faster"
      ],
      "correctAnswer": 1,
      "explanation": "Encryption is reversible with the right key, while hashing is a one-way function that cannot be reversed, used for passwords and checksums.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-3",
      "categorySlug": "security-authentication",
      "question": "What is CSRF (Cross-Site Request Forgery)?",
      "options": [
        "A type of encryption",
        "An attack that tricks users into executing unwanted actions",
        "A secure coding practice",
        "A type of firewall"
      ],
      "correctAnswer": 1,
      "explanation": "CSRF attacks trick authenticated users into executing unwanted actions on a web application where they're authenticated.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-4",
      "categorySlug": "security-authentication",
      "question": "What is the purpose of salting passwords?",
      "options": [
        "To make them taste better",
        "Adding random data before hashing to prevent rainbow table attacks",
        "Compressing password storage",
        "Encrypting passwords"
      ],
      "correctAnswer": 1,
      "explanation": "Salt is random data added to passwords before hashing, ensuring identical passwords have different hashes and preventing rainbow table attacks.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-5",
      "categorySlug": "security-authentication",
      "question": "What is SQL injection?",
      "options": [
        "Adding SQL to a database",
        "Inserting malicious SQL code through application inputs",
        "A database optimization technique",
        "Injecting performance into SQL"
      ],
      "correctAnswer": 1,
      "explanation": "SQL injection occurs when malicious SQL statements are inserted into application queries through user input, potentially exposing or destroying data.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-6",
      "categorySlug": "security-authentication",
      "question": "What is the purpose of a WAF (Web Application Firewall)?",
      "options": [
        "To speed up web applications",
        "To filter and monitor HTTP traffic between web application and internet",
        "To host web applications",
        "To develop web applications"
      ],
      "correctAnswer": 1,
      "explanation": "A WAF protects web applications by filtering and monitoring HTTP/HTTPS traffic, blocking common attacks like XSS and SQL injection.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-7",
      "categorySlug": "security-authentication",
      "question": "What is XSS (Cross-Site Scripting)?",
      "options": [
        "A CSS framework",
        "Injecting malicious scripts into web pages viewed by other users",
        "Cross-server synchronization",
        "A type of API"
      ],
      "correctAnswer": 1,
      "explanation": "XSS attacks inject malicious scripts into trusted websites, executing in users' browsers to steal data or impersonate users.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-8",
      "categorySlug": "security-authentication",
      "question": "What is the purpose of HTTPS?",
      "options": [
        "To make websites faster",
        "To encrypt communication between browser and server",
        "To compress web pages",
        "To cache content"
      ],
      "correctAnswer": 1,
      "explanation": "HTTPS uses TLS/SSL to encrypt communication between browsers and servers, protecting data from eavesdropping and tampering.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "security-authentication-9",
      "categorySlug": "security-authentication",
      "question": "What is two-factor authentication (2FA)?",
      "options": [
        "Using two passwords",
        "Requiring two forms of identification from different categories",
        "Logging in twice",
        "Having two accounts"
      ],
      "correctAnswer": 1,
      "explanation": "2FA requires two different authentication factors: something you know (password), something you have (phone), or something you are (biometric).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-0",
      "categorySlug": "message-queues-streaming",
      "question": "What is the difference between a message queue and a publish-subscribe pattern?",
      "options": [
        "They are the same",
        "Queue: one consumer per message, Pub/Sub: multiple consumers per message",
        "Pub/Sub is faster",
        "Queue is more reliable"
      ],
      "correctAnswer": 1,
      "explanation": "Message queues deliver each message to one consumer, while pub/sub broadcasts messages to all subscribers of a topic.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-1",
      "categorySlug": "message-queues-streaming",
      "question": "What is Apache Kafka?",
      "options": [
        "A web server",
        "A distributed event streaming platform",
        "A database",
        "A container orchestrator"
      ],
      "correctAnswer": 1,
      "explanation": "Kafka is a distributed event streaming platform capable of handling trillions of events a day for real-time data pipelines and streaming applications.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-2",
      "categorySlug": "message-queues-streaming",
      "question": "What is the purpose of message acknowledgment in queues?",
      "options": [
        "To say thank you",
        "To confirm message processing and prevent redelivery",
        "To encrypt messages",
        "To compress messages"
      ],
      "correctAnswer": 1,
      "explanation": "Acknowledgments confirm successful message processing, allowing the queue to remove the message and prevent redelivery.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-3",
      "categorySlug": "message-queues-streaming",
      "question": "What is a dead letter queue?",
      "options": [
        "A queue for deleted messages",
        "A queue for messages that couldn't be processed successfully",
        "An encrypted queue",
        "A backup queue"
      ],
      "correctAnswer": 1,
      "explanation": "Dead letter queues store messages that couldn't be processed after maximum retry attempts, allowing investigation and manual handling.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-4",
      "categorySlug": "message-queues-streaming",
      "question": "What is the difference between RabbitMQ and Kafka?",
      "options": [
        "They are identical",
        "RabbitMQ is a message broker, Kafka is an event streaming platform",
        "Kafka is a message broker, RabbitMQ is streaming",
        "RabbitMQ is faster"
      ],
      "correctAnswer": 1,
      "explanation": "RabbitMQ is a traditional message broker focused on complex routing, while Kafka is designed for high-throughput event streaming and log aggregation.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-5",
      "categorySlug": "message-queues-streaming",
      "question": "What is message durability?",
      "options": [
        "How long messages last",
        "Persisting messages to disk to survive broker restarts",
        "Message encryption",
        "Message compression"
      ],
      "correctAnswer": 1,
      "explanation": "Message durability ensures messages are persisted to disk and survive broker restarts, preventing data loss at the cost of performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-6",
      "categorySlug": "message-queues-streaming",
      "question": "What is the purpose of partitioning in Kafka?",
      "options": [
        "To separate different message types",
        "To enable parallel processing and horizontal scaling",
        "To compress messages",
        "To encrypt topics"
      ],
      "correctAnswer": 1,
      "explanation": "Partitioning divides topics into segments that can be distributed across brokers, enabling parallel processing and horizontal scaling.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-7",
      "categorySlug": "message-queues-streaming",
      "question": "What is exactly-once delivery?",
      "options": [
        "Delivering messages at exact times",
        "Ensuring each message is processed exactly once, no duplicates or losses",
        "Sending one message at a time",
        "Delivering to exactly one consumer"
      ],
      "correctAnswer": 1,
      "explanation": "Exactly-once delivery guarantees each message is processed once and only once, preventing both message loss and duplicate processing.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-8",
      "categorySlug": "message-queues-streaming",
      "question": "What is a message broker?",
      "options": [
        "A person who handles messages",
        "Middleware that translates messages between formal messaging protocols",
        "A message storage system",
        "A message encryption service"
      ],
      "correctAnswer": 1,
      "explanation": "A message broker is middleware that enables applications to communicate by translating messages between formal messaging protocols.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "message-queues-streaming-9",
      "categorySlug": "message-queues-streaming",
      "question": "What is the purpose of consumer groups in Kafka?",
      "options": [
        "To group similar messages",
        "To enable parallel consumption with automatic partition assignment",
        "To create message categories",
        "To manage security groups"
      ],
      "correctAnswer": 1,
      "explanation": "Consumer groups allow multiple consumers to divide work, with Kafka automatically assigning partitions to consumers for parallel processing.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-0",
      "categorySlug": "performance-optimization",
      "question": "What is lazy loading?",
      "options": [
        "Loading resources slowly",
        "Deferring initialization until the resource is needed",
        "Loading with low priority",
        "Cached loading"
      ],
      "correctAnswer": 1,
      "explanation": "Lazy loading defers loading of resources until they're actually needed, improving initial load time and reducing memory usage.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-1",
      "categorySlug": "performance-optimization",
      "question": "What is the purpose of a cache?",
      "options": [
        "To store passwords",
        "To store frequently accessed data for faster retrieval",
        "To compress data",
        "To encrypt data"
      ],
      "correctAnswer": 1,
      "explanation": "Caching stores frequently accessed data in fast storage (like memory) to reduce latency and load on slower systems.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-2",
      "categorySlug": "performance-optimization",
      "question": "What is the difference between latency and throughput?",
      "options": [
        "They are the same",
        "Latency is delay, throughput is volume per time",
        "Throughput is delay, latency is volume",
        "Latency is for networks, throughput is for applications"
      ],
      "correctAnswer": 1,
      "explanation": "Latency measures delay (time for one operation), while throughput measures volume (operations per unit time).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-3",
      "categorySlug": "performance-optimization",
      "question": "What is database query optimization?",
      "options": [
        "Making queries shorter",
        "Improving query performance through indexing, rewriting, and execution planning",
        "Compressing queries",
        "Caching all queries"
      ],
      "correctAnswer": 1,
      "explanation": "Query optimization improves performance through proper indexing, query rewriting, and choosing efficient execution plans.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-4",
      "categorySlug": "performance-optimization",
      "question": "What is the purpose of minification?",
      "options": [
        "Making files smaller by removing unnecessary characters",
        "Compressing images",
        "Reducing server size",
        "Minimizing errors"
      ],
      "correctAnswer": 0,
      "explanation": "Minification removes unnecessary characters (whitespace, comments) from code without changing functionality, reducing file size.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-5",
      "categorySlug": "performance-optimization",
      "question": "What is a memory leak?",
      "options": [
        "Physical damage to memory",
        "When a program doesn't release memory it no longer needs",
        "Losing data from memory",
        "Memory overflow"
      ],
      "correctAnswer": 1,
      "explanation": "A memory leak occurs when a program allocates memory but fails to release it when no longer needed, eventually exhausting available memory.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-6",
      "categorySlug": "performance-optimization",
      "question": "What is the purpose of pagination?",
      "options": [
        "Creating multiple pages",
        "Dividing large datasets into smaller chunks",
        "Page navigation",
        "Page formatting"
      ],
      "correctAnswer": 1,
      "explanation": "Pagination divides large datasets into smaller, manageable chunks, improving performance and user experience.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-7",
      "categorySlug": "performance-optimization",
      "question": "What is denormalization in databases?",
      "options": [
        "Removing normal data",
        "Adding redundancy to improve read performance",
        "Normalizing in reverse",
        "Removing indexes"
      ],
      "correctAnswer": 1,
      "explanation": "Denormalization intentionally adds redundancy to reduce joins and improve read performance at the cost of storage and write complexity.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-8",
      "categorySlug": "performance-optimization",
      "question": "What is the purpose of a profiler?",
      "options": [
        "Creating user profiles",
        "Analyzing program performance to identify bottlenecks",
        "Managing profiles",
        "Profiling users"
      ],
      "correctAnswer": 1,
      "explanation": "Profilers analyze program execution to identify performance bottlenecks, showing where time and resources are spent.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-9",
      "categorySlug": "performance-optimization",
      "question": "What is throttling in API context?",
      "options": [
        "Speeding up requests",
        "Limiting the rate of requests to prevent overload",
        "Compressing requests",
        "Encrypting requests"
      ],
      "correctAnswer": 1,
      "explanation": "Throttling limits the rate of API requests from a client to prevent overload and ensure fair resource usage.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-0",
      "categorySlug": "api-modularization",
      "question": "What is the primary purpose of modularizing an API?",
      "options": [
        "To make the code run faster",
        "To separate concerns and improve maintainability, testability, and scalability",
        "To use more files",
        "To make it harder to understand"
      ],
      "correctAnswer": 1,
      "explanation": "Modularization separates different concerns (routes, controllers, services, models) making the codebase maintainable, testable, and scalable as it grows.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-1",
      "categorySlug": "api-modularization",
      "question": "In a typical MVC API architecture, what is the role of Controllers?",
      "options": [
        "Store data in the database",
        "Handle HTTP requests/responses, validate input, and coordinate between routes and services",
        "Define database schemas",
        "Render HTML pages"
      ],
      "correctAnswer": 1,
      "explanation": "Controllers act as the orchestrator between HTTP layer and business logic, handling request validation, calling services, and formatting responses.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-2",
      "categorySlug": "api-modularization",
      "question": "What is the correct flow in a layered API architecture?",
      "options": [
        "Database \u2192 Routes \u2192 Controllers \u2192 Services",
        "Routes \u2192 Controllers \u2192 Services \u2192 Models/Database",
        "Services \u2192 Routes \u2192 Database \u2192 Controllers",
        "Controllers \u2192 Routes \u2192 Models \u2192 Services"
      ],
      "correctAnswer": 1,
      "explanation": "Request flows from Routes (endpoint definitions) \u2192 Controllers (request handling) \u2192 Services (business logic) \u2192 Models/Database (data layer).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-3",
      "categorySlug": "api-modularization",
      "question": "What does 'API-First Design' mean?",
      "options": [
        "Building the API before the frontend",
        "Designing and documenting the API contract before implementation",
        "Making the API the most important part",
        "Testing the API first"
      ],
      "correctAnswer": 1,
      "explanation": "API-First means designing the API contract (endpoints, request/response formats) and documentation before implementing either frontend or backend.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-4",
      "categorySlug": "api-modularization",
      "question": "In Express.js, what's the difference between middleware and controllers?",
      "options": [
        "There is no difference",
        "Middleware handles cross-cutting concerns (auth, logging), controllers handle specific endpoint logic",
        "Controllers run before middleware",
        "Middleware is only for errors"
      ],
      "correctAnswer": 1,
      "explanation": "Middleware handles cross-cutting concerns that apply to multiple routes (authentication, logging, CORS), while controllers handle specific endpoint business logic.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-5",
      "categorySlug": "api-modularization",
      "question": "What is a Service Layer in API architecture?",
      "options": [
        "A layer that serves static files",
        "A layer containing business logic, separate from HTTP concerns",
        "A microservice",
        "A database service"
      ],
      "correctAnswer": 1,
      "explanation": "The Service Layer contains business logic and rules, isolated from HTTP concerns (controllers) and data access (repositories/models).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-6",
      "categorySlug": "api-modularization",
      "question": "What are API Business Contracts?",
      "options": [
        "Legal agreements between companies",
        "Formal specifications defining API endpoints, data formats, and expected behaviors",
        "Payment agreements for API usage",
        "Employee contracts"
      ],
      "correctAnswer": 1,
      "explanation": "API contracts define the agreement between API consumers and providers, specifying endpoints, request/response formats, and behaviors (often using OpenAPI/Swagger).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-7",
      "categorySlug": "api-modularization",
      "question": "How should you organize Express.js routes for a modular API?",
      "options": [
        "Put all routes in one file",
        "Group routes by resource/feature in separate router modules",
        "Random organization",
        "Alphabetical order in one file"
      ],
      "correctAnswer": 1,
      "explanation": "Routes should be grouped by resource or feature (users, products, auth) in separate router modules, then combined in the main app.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-8",
      "categorySlug": "api-modularization",
      "question": "What is the Repository Pattern in API architecture?",
      "options": [
        "A Git repository",
        "An abstraction layer between business logic and data access",
        "A place to store code",
        "A backup system"
      ],
      "correctAnswer": 1,
      "explanation": "Repository Pattern provides an abstraction layer over data access, allowing business logic to work with domain objects without knowing database implementation details.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-9",
      "categorySlug": "api-modularization",
      "question": "What is Dependency Injection in API architecture?",
      "options": [
        "Installing npm packages",
        "Passing dependencies as parameters rather than creating them internally",
        "SQL injection attacks",
        "Adding more dependencies"
      ],
      "correctAnswer": 1,
      "explanation": "Dependency Injection involves passing dependencies (like services, repositories) as parameters, making code more testable and loosely coupled.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-10",
      "categorySlug": "api-modularization",
      "question": "What's the difference between Vertical and Horizontal scaling for APIs?",
      "options": [
        "There is no difference",
        "Vertical adds more power to one server, Horizontal adds more servers",
        "Vertical adds more servers, Horizontal adds more power",
        "Vertical is for frontend, Horizontal is for backend"
      ],
      "correctAnswer": 1,
      "explanation": "Vertical scaling (scale-up) adds more resources (CPU, RAM) to existing servers, while Horizontal scaling (scale-out) adds more server instances.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-11",
      "categorySlug": "api-modularization",
      "question": "What is a DTO (Data Transfer Object)?",
      "options": [
        "Database Table Object",
        "An object that carries data between processes/layers",
        "Document Type Object",
        "Data Type Override"
      ],
      "correctAnswer": 1,
      "explanation": "DTOs are objects specifically designed to transfer data between layers or over the network, often with only the fields needed for that specific use case.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-12",
      "categorySlug": "api-modularization",
      "question": "What is API Gateway pattern?",
      "options": [
        "A physical gateway device",
        "Single entry point that routes requests to appropriate microservices",
        "Database gateway",
        "VPN gateway"
      ],
      "correctAnswer": 1,
      "explanation": "API Gateway acts as a single entry point for all client requests, routing them to appropriate microservices while handling cross-cutting concerns.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-13",
      "categorySlug": "api-modularization",
      "question": "What is the purpose of API versioning?",
      "options": [
        "To track code changes in Git",
        "To maintain backward compatibility while evolving the API",
        "To increase version numbers",
        "To confuse developers"
      ],
      "correctAnswer": 1,
      "explanation": "API versioning allows you to evolve and improve your API while maintaining backward compatibility for existing clients.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-modularization-14",
      "categorySlug": "api-modularization",
      "question": "What is HATEOAS in REST APIs?",
      "options": [
        "A security protocol",
        "Hypermedia As The Engine Of Application State - including links to related resources",
        "A database system",
        "An authentication method"
      ],
      "correctAnswer": 1,
      "explanation": "HATEOAS means the API provides links to related resources and available actions, allowing clients to navigate the API dynamically.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rest-graphql-grpc-0",
      "categorySlug": "rest-graphql-grpc",
      "question": "What is the main difference between REST and GraphQL?",
      "options": [
        "REST is faster than GraphQL",
        "GraphQL allows clients to request exactly the data they need, REST returns fixed structures",
        "GraphQL is older than REST",
        "REST uses binary, GraphQL uses JSON"
      ],
      "correctAnswer": 1,
      "explanation": "GraphQL allows clients to specify exactly what data they need, avoiding over-fetching and under-fetching issues common in REST.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rest-graphql-grpc-1",
      "categorySlug": "rest-graphql-grpc",
      "question": "When should you use gRPC over REST?",
      "options": [
        "For all web applications",
        "For high-performance, low-latency service-to-service communication",
        "For browser-based applications",
        "Never, REST is always better"
      ],
      "correctAnswer": 1,
      "explanation": "gRPC excels at high-performance, low-latency communication between services, using Protocol Buffers and HTTP/2.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rest-graphql-grpc-2",
      "categorySlug": "rest-graphql-grpc",
      "question": "What is the N+1 problem in GraphQL?",
      "options": [
        "Making N+1 API calls",
        "Fetching a list then making separate queries for each item's related data",
        "Having N+1 resolvers",
        "Using N+1 schemas"
      ],
      "correctAnswer": 1,
      "explanation": "The N+1 problem occurs when fetching a list (1 query) then making N additional queries for related data of each item. DataLoader helps solve this.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rest-graphql-grpc-3",
      "categorySlug": "rest-graphql-grpc",
      "question": "What are REST API maturity levels (Richardson Maturity Model)?",
      "options": [
        "Beginner, Intermediate, Advanced, Expert",
        "Level 0: POX, Level 1: Resources, Level 2: HTTP Verbs, Level 3: HATEOAS",
        "REST doesn't have maturity levels",
        "Version 1, 2, 3, 4"
      ],
      "correctAnswer": 1,
      "explanation": "Richardson Maturity Model defines REST maturity from Level 0 (Plain Old XML/JSON) to Level 3 (HATEOAS - true REST).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rest-graphql-grpc-4",
      "categorySlug": "rest-graphql-grpc",
      "question": "What is GraphQL subscription?",
      "options": [
        "A paid GraphQL service",
        "Real-time updates pushed from server to client when data changes",
        "Email notifications",
        "Database subscription"
      ],
      "correctAnswer": 1,
      "explanation": "GraphQL subscriptions enable real-time updates by maintaining a persistent connection and pushing updates when data changes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-0",
      "categorySlug": "authentication-authorization",
      "question": "What's the difference between Authentication and Authorization?",
      "options": [
        "They are the same thing",
        "Authentication verifies identity, Authorization determines access rights",
        "Authorization verifies identity, Authentication determines access rights",
        "Authentication is for APIs, Authorization is for web apps"
      ],
      "correctAnswer": 1,
      "explanation": "Authentication verifies who you are (identity), while Authorization determines what you can do (permissions).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-1",
      "categorySlug": "authentication-authorization",
      "question": "What is JWT and what are its three parts?",
      "options": [
        "JavaScript Web Token: Header, Body, Footer",
        "JSON Web Token: Header, Payload, Signature",
        "Java Web Token: Start, Middle, End",
        "JSON Web Token: Username, Password, Token"
      ],
      "correctAnswer": 1,
      "explanation": "JWT (JSON Web Token) consists of Header (algorithm & type), Payload (claims/data), and Signature (verification).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-2",
      "categorySlug": "authentication-authorization",
      "question": "What is OAuth 2.0 primarily used for?",
      "options": [
        "Password encryption",
        "Delegated authorization - granting third-party access without sharing credentials",
        "Database authentication",
        "Email verification"
      ],
      "correctAnswer": 1,
      "explanation": "OAuth 2.0 enables delegated authorization, allowing users to grant third-party applications limited access to their resources without sharing passwords.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-3",
      "categorySlug": "authentication-authorization",
      "question": "What is CORS and why is it important?",
      "options": [
        "A database system",
        "Cross-Origin Resource Sharing - browser security feature controlling resource access",
        "A programming language",
        "An API framework"
      ],
      "correctAnswer": 1,
      "explanation": "CORS (Cross-Origin Resource Sharing) is a browser security feature that controls which domains can access your API resources.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-4",
      "categorySlug": "authentication-authorization",
      "question": "What is API Rate Limiting?",
      "options": [
        "Making APIs faster",
        "Restricting the number of API requests a client can make in a time period",
        "Limiting API response size",
        "Restricting API features"
      ],
      "correctAnswer": 1,
      "explanation": "Rate limiting restricts the number of requests a client can make in a given time period, preventing abuse and ensuring fair usage.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "authentication-authorization-5",
      "categorySlug": "authentication-authorization",
      "question": "What is RBAC in API security?",
      "options": [
        "Really Bad Access Control",
        "Role-Based Access Control - permissions based on user roles",
        "Random Based Access Control",
        "Resource Based API Control"
      ],
      "correctAnswer": 1,
      "explanation": "RBAC (Role-Based Access Control) assigns permissions to roles, and users inherit permissions through their assigned roles.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-0",
      "categorySlug": "microservices-patterns",
      "question": "What is the Circuit Breaker pattern?",
      "options": [
        "An electrical component",
        "A pattern that stops calling a failing service temporarily to prevent cascading failures",
        "A way to break circuits",
        "A testing pattern"
      ],
      "correctAnswer": 1,
      "explanation": "Circuit Breaker monitors service health and 'opens' to stop calls to failing services, preventing cascading failures.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-1",
      "categorySlug": "microservices-patterns",
      "question": "What is Service Discovery in microservices?",
      "options": [
        "Finding new services to build",
        "Mechanism for services to find and communicate with each other dynamically",
        "Discovering service bugs",
        "Market research for services"
      ],
      "correctAnswer": 1,
      "explanation": "Service Discovery allows services to dynamically find and communicate with each other without hardcoded addresses.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-2",
      "categorySlug": "microservices-patterns",
      "question": "What is the Saga pattern?",
      "options": [
        "A long story",
        "A pattern for managing distributed transactions across multiple services",
        "A logging pattern",
        "A deployment pattern"
      ],
      "correctAnswer": 1,
      "explanation": "Saga pattern manages distributed transactions by breaking them into local transactions with compensating actions for rollback.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-3",
      "categorySlug": "microservices-patterns",
      "question": "What is the Sidecar pattern?",
      "options": [
        "A motorcycle attachment",
        "Deploying helper containers alongside main application containers",
        "A backup service",
        "A database pattern"
      ],
      "correctAnswer": 1,
      "explanation": "Sidecar pattern deploys helper containers (for logging, monitoring, proxy) alongside your main application container.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-4",
      "categorySlug": "microservices-patterns",
      "question": "What is Event Sourcing?",
      "options": [
        "Finding event sources",
        "Storing all changes as a sequence of events instead of current state",
        "Sourcing events from external systems",
        "Creating events"
      ],
      "correctAnswer": 1,
      "explanation": "Event Sourcing stores all changes as immutable events, allowing you to reconstruct any past state and providing a complete audit trail.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-5",
      "categorySlug": "microservices-patterns",
      "question": "What is CQRS?",
      "options": [
        "A programming language",
        "Command Query Responsibility Segregation - separate models for reads and writes",
        "Common Query Resource System",
        "Centralized Queue Request Service"
      ],
      "correctAnswer": 1,
      "explanation": "CQRS separates read and write models, optimizing each for their specific use cases and improving performance and scalability.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "microservices-patterns-6",
      "categorySlug": "microservices-patterns",
      "question": "What is the Strangler Fig pattern?",
      "options": [
        "A tree species",
        "Gradually replacing a monolithic system by building new features around it",
        "Killing old services",
        "A debugging technique"
      ],
      "correctAnswer": 1,
      "explanation": "Strangler Fig pattern gradually replaces a legacy system by routing new features to new services while the old system handles existing features.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-testing-documentation-0",
      "categorySlug": "api-testing-documentation",
      "question": "What is Contract Testing for APIs?",
      "options": [
        "Testing legal contracts",
        "Testing that API providers and consumers agree on the interface contract",
        "Testing API speed",
        "Testing database contracts"
      ],
      "correctAnswer": 1,
      "explanation": "Contract testing verifies that API providers and consumers agree on the interface contract (request/response format).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-testing-documentation-1",
      "categorySlug": "api-testing-documentation",
      "question": "What is OpenAPI (formerly Swagger)?",
      "options": [
        "An open-source API",
        "A specification for describing REST APIs in a standard format",
        "A database",
        "A programming language"
      ],
      "correctAnswer": 1,
      "explanation": "OpenAPI is a specification for describing REST APIs, enabling automatic documentation generation, client SDK generation, and testing.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-testing-documentation-2",
      "categorySlug": "api-testing-documentation",
      "question": "What are the key types of API testing?",
      "options": [
        "Only manual testing",
        "Unit, Integration, Contract, Load, Security, and End-to-End testing",
        "Just clicking buttons",
        "Only automated testing"
      ],
      "correctAnswer": 1,
      "explanation": "API testing includes Unit (individual functions), Integration (component interaction), Contract (interface agreements), Load (performance), Security (vulnerabilities), and E2E (full workflow).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-testing-documentation-3",
      "categorySlug": "api-testing-documentation",
      "question": "What is API mocking?",
      "options": [
        "Making fun of APIs",
        "Creating fake API responses for testing without the actual backend",
        "Copying APIs",
        "Deleting APIs"
      ],
      "correctAnswer": 1,
      "explanation": "API mocking creates simulated API responses for testing, allowing frontend development and testing without a complete backend.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-testing-documentation-4",
      "categorySlug": "api-testing-documentation",
      "question": "What is Postman used for?",
      "options": [
        "Sending mail",
        "API development, testing, documentation, and collaboration",
        "Database management",
        "Code editing"
      ],
      "correctAnswer": 1,
      "explanation": "Postman is a comprehensive platform for API development, testing, documentation, and team collaboration.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-0",
      "categorySlug": "database-patterns",
      "question": "What is Database Connection Pooling?",
      "options": [
        "Swimming pool for databases",
        "Reusing a pool of database connections instead of creating new ones for each request",
        "Pooling data together",
        "Multiple databases"
      ],
      "correctAnswer": 1,
      "explanation": "Connection pooling maintains a pool of reusable database connections, avoiding the overhead of creating new connections for each request.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-1",
      "categorySlug": "database-patterns",
      "question": "What is the difference between SQL and NoSQL databases?",
      "options": [
        "SQL is faster",
        "SQL has structured schemas and ACID properties, NoSQL is flexible and scales horizontally",
        "NoSQL is always better",
        "They are the same"
      ],
      "correctAnswer": 1,
      "explanation": "SQL databases provide structured schemas with ACID guarantees, while NoSQL offers flexibility, horizontal scaling, and eventual consistency.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-2",
      "categorySlug": "database-patterns",
      "question": "What is Database Indexing?",
      "options": [
        "Numbering database rows",
        "Creating data structures to improve query performance at the cost of storage and write speed",
        "Organizing databases alphabetically",
        "Backing up databases"
      ],
      "correctAnswer": 1,
      "explanation": "Indexing creates additional data structures (like B-trees) that speed up data retrieval but require extra storage and slow down writes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-3",
      "categorySlug": "database-patterns",
      "question": "What is ACID in databases?",
      "options": [
        "A chemical substance",
        "Atomicity, Consistency, Isolation, Durability - transaction properties",
        "A database brand",
        "API Configuration In Databases"
      ],
      "correctAnswer": 1,
      "explanation": "ACID ensures database transactions are Atomic (all-or-nothing), Consistent (valid state), Isolated (concurrent safety), and Durable (permanent).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-4",
      "categorySlug": "database-patterns",
      "question": "What is Database Normalization?",
      "options": [
        "Making databases normal",
        "Organizing data to reduce redundancy and improve data integrity",
        "Converting to NoSQL",
        "Database backup"
      ],
      "correctAnswer": 1,
      "explanation": "Normalization organizes data into tables and relationships to minimize redundancy and dependency, following normal forms (1NF, 2NF, 3NF, etc.).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-5",
      "categorySlug": "database-patterns",
      "question": "What is an ORM?",
      "options": [
        "Object Relational Mapping - abstracting database operations into object-oriented code",
        "Online Resource Manager",
        "Operational Risk Management",
        "Open Request Method"
      ],
      "correctAnswer": 0,
      "explanation": "ORM (Object-Relational Mapping) allows you to work with databases using object-oriented paradigms instead of writing SQL directly.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-patterns-6",
      "categorySlug": "database-patterns",
      "question": "What is Database Sharding?",
      "options": [
        "Breaking the database",
        "Horizontally partitioning data across multiple database instances",
        "Database backup",
        "Vertical scaling"
      ],
      "correctAnswer": 1,
      "explanation": "Sharding distributes data horizontally across multiple database instances based on a shard key, enabling massive scalability.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-0",
      "categorySlug": "performance-optimization",
      "question": "What is Lazy Loading?",
      "options": [
        "Being lazy with code",
        "Loading resources only when they're needed, not all at once",
        "Slow loading",
        "Loading everything at startup"
      ],
      "correctAnswer": 1,
      "explanation": "Lazy loading defers loading of resources until they're actually needed, improving initial load time and performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-1",
      "categorySlug": "performance-optimization",
      "question": "What is CDN (Content Delivery Network)?",
      "options": [
        "Central Data Network",
        "Geographically distributed servers that cache and serve content closer to users",
        "Computer Display Network",
        "Certified Developer Network"
      ],
      "correctAnswer": 1,
      "explanation": "CDN uses geographically distributed servers to cache and serve content from locations closer to users, reducing latency.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-2",
      "categorySlug": "performance-optimization",
      "question": "What is Database Query Optimization?",
      "options": [
        "Making queries shorter",
        "Improving query performance through indexing, query rewriting, and execution planning",
        "Using NoSQL instead",
        "Deleting slow queries"
      ],
      "correctAnswer": 1,
      "explanation": "Query optimization involves using indexes, rewriting queries, analyzing execution plans, and avoiding N+1 queries to improve performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-3",
      "categorySlug": "performance-optimization",
      "question": "What is Caching and what are its levels?",
      "options": [
        "Hiding data",
        "Browser cache, CDN cache, Application cache, Database cache - storing frequently accessed data",
        "Only browser cache",
        "Deleting old data"
      ],
      "correctAnswer": 1,
      "explanation": "Caching stores frequently accessed data at various levels (Browser, CDN, Application, Database) to reduce latency and load.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "performance-optimization-4",
      "categorySlug": "performance-optimization",
      "question": "What is the purpose of Load Balancing?",
      "options": [
        "Weighing servers",
        "Distributing network traffic across multiple servers to ensure no single server is overwhelmed",
        "Loading balance sheets",
        "Balancing database loads only"
      ],
      "correctAnswer": 1,
      "explanation": "Load balancing distributes incoming network traffic across multiple servers, ensuring high availability and reliability.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-0",
      "categorySlug": "frontend-architecture",
      "question": "What is Component-Based Architecture?",
      "options": [
        "Using computer components",
        "Building UIs with reusable, self-contained components with their own state and logic",
        "Only using React",
        "Building everything in one file"
      ],
      "correctAnswer": 1,
      "explanation": "Component-based architecture breaks UIs into reusable, self-contained pieces with encapsulated state, logic, and styling.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-1",
      "categorySlug": "frontend-architecture",
      "question": "What is State Management in frontend applications?",
      "options": [
        "Managing US states",
        "Centralized handling of application data and UI state across components",
        "Only using localStorage",
        "Database management"
      ],
      "correctAnswer": 1,
      "explanation": "State management involves centrally handling application data and UI state, making it accessible and synchronized across components.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-2",
      "categorySlug": "frontend-architecture",
      "question": "What is Server-Side Rendering (SSR)?",
      "options": [
        "Rendering on the server's screen",
        "Generating HTML on the server before sending to the client",
        "Only backend development",
        "Client-side JavaScript"
      ],
      "correctAnswer": 1,
      "explanation": "SSR generates HTML on the server before sending to the client, improving initial load time, SEO, and perceived performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-3",
      "categorySlug": "frontend-architecture",
      "question": "What is a Single Page Application (SPA)?",
      "options": [
        "A one-page website",
        "Web app that loads once and dynamically updates content without page refreshes",
        "A PDF document",
        "A landing page"
      ],
      "correctAnswer": 1,
      "explanation": "SPAs load once and dynamically update content through JavaScript without full page refreshes, providing app-like experiences.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-4",
      "categorySlug": "frontend-architecture",
      "question": "What is Micro-Frontend Architecture?",
      "options": [
        "Very small frontends",
        "Breaking frontend into independently deployable modules owned by different teams",
        "Using microservices in frontend",
        "Mobile-only architecture"
      ],
      "correctAnswer": 1,
      "explanation": "Micro-frontends split the frontend into independently developed, tested, and deployed modules, enabling team autonomy and scalability.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-5",
      "categorySlug": "frontend-architecture",
      "question": "What is the Virtual DOM?",
      "options": [
        "A fake DOM",
        "An in-memory representation of the real DOM for efficient updates",
        "Online DOM",
        "DOM in virtual reality"
      ],
      "correctAnswer": 1,
      "explanation": "Virtual DOM is an in-memory JavaScript representation of the real DOM, enabling efficient diffing and selective updates.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "frontend-architecture-6",
      "categorySlug": "frontend-architecture",
      "question": "What is Code Splitting?",
      "options": [
        "Breaking code files",
        "Dividing code into chunks loaded on demand to reduce initial bundle size",
        "Splitting code between developers",
        "Using multiple programming languages"
      ],
      "correctAnswer": 1,
      "explanation": "Code splitting breaks your bundle into smaller chunks loaded on demand, reducing initial load time and improving performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "devops-ci-cd-0",
      "categorySlug": "devops-ci-cd",
      "question": "What is CI/CD?",
      "options": [
        "Computer Intelligence/Computer Design",
        "Continuous Integration/Continuous Deployment - automated testing and deployment",
        "Code Inspection/Code Delivery",
        "Central Intelligence/Central Database"
      ],
      "correctAnswer": 1,
      "explanation": "CI/CD automates code integration, testing, and deployment, enabling frequent and reliable software delivery.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "devops-ci-cd-1",
      "categorySlug": "devops-ci-cd",
      "question": "What is Infrastructure as Code (IaC)?",
      "options": [
        "Writing code about infrastructure",
        "Managing infrastructure through code rather than manual processes",
        "Infrastructure documentation",
        "Building physical servers"
      ],
      "correctAnswer": 1,
      "explanation": "IaC manages and provisions infrastructure through code (Terraform, CloudFormation), enabling version control and automation.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "devops-ci-cd-2",
      "categorySlug": "devops-ci-cd",
      "question": "What is Blue-Green Deployment?",
      "options": [
        "Deploying with colors",
        "Running two identical production environments, switching traffic between them",
        "Environmental deployment",
        "Deploying to blue or green servers"
      ],
      "correctAnswer": 1,
      "explanation": "Blue-Green deployment maintains two identical production environments, allowing instant rollback by switching traffic.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "devops-ci-cd-3",
      "categorySlug": "devops-ci-cd",
      "question": "What is Canary Deployment?",
      "options": [
        "Deploying to bird servers",
        "Gradually rolling out changes to a small subset of users before full deployment",
        "Yellow deployment",
        "Emergency deployment"
      ],
      "correctAnswer": 1,
      "explanation": "Canary deployment gradually rolls out changes to a small percentage of users first, monitoring for issues before full rollout.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "devops-ci-cd-4",
      "categorySlug": "devops-ci-cd",
      "question": "What is GitOps?",
      "options": [
        "Git operations",
        "Using Git as the single source of truth for declarative infrastructure and applications",
        "GitHub operations",
        "Git commands"
      ],
      "correctAnswer": 1,
      "explanation": "GitOps uses Git repositories as the single source of truth for infrastructure and application definitions, with automated synchronization.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-0",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Does using Helm instead of kubectl inherently fix deployment issues?",
      "options": [
        "Yes, Helm makes Kubernetes work",
        "No, Helm is a packaging/templating tool; underlying issues remain",
        "Only if using Helm v3",
        "Only if CRDs are involved"
      ],
      "correctAnswer": 1,
      "explanation": "Helm renders and installs manifests but does not change cluster behavior. Issues like missing controllers, image pulls, RBAC, PVCs, etc., affect Helm and kubectl equally if manifests are equivalent.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-1",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "On kind, why might a Service of type LoadBalancer stay in 'pending' EXTERNAL-IP?",
      "options": [
        "Because kube-proxy is disabled",
        "Because kind has no built-in LB; install MetalLB or use NodePort/port-forward",
        "Because DNS is broken",
        "Because the Service name is wrong"
      ],
      "correctAnswer": 1,
      "explanation": "kind does not provide a cloud LB. Use MetalLB, or expose via NodePort/port-forward for local access.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-2",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "What is a common cause of ImagePullBackOff in local clusters with large images?",
      "options": [
        "Pod labels are missing",
        "Insufficient disk space or architecture mismatch (arm64 vs amd64)",
        "Too many replicas",
        "Wrong namespace"
      ],
      "correctAnswer": 1,
      "explanation": "Large images or model layers can exhaust Docker Desktop disk. On Apple Silicon, pulling amd64-only images can fail to run.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-3",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Which command helps you quickly see scheduling or image pull errors for a Pod?",
      "options": [
        "kubectl get ns",
        "kubectl top pods",
        "kubectl describe pod <name> -n <ns>",
        "kubectl get roles"
      ],
      "correctAnswer": 2,
      "explanation": "kubectl describe pod shows detailed Events such as image pull failures, insufficient resources, PVC binding issues, etc.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-4",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Why might an Ingress resource not route traffic on kind?",
      "options": [
        "Because CoreDNS is not running",
        "Because an Ingress controller (e.g., nginx) is not installed",
        "Because kubelet is down",
        "Because Services must be ClusterIP"
      ],
      "correctAnswer": 1,
      "explanation": "Ingress objects require a controller to implement routing. kind does not include one by default.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-5",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "For Istio sidecar injection in a namespace (e.g., default), what step is required?",
      "options": [
        "Set Service type to ClusterIP",
        "Label the namespace with istio-injection=enabled",
        "Create a PodDisruptionBudget",
        "Set a NodeSelector"
      ],
      "correctAnswer": 1,
      "explanation": "Label the namespace so mutating webhook injects sidecars automatically.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-6",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "What is the simplest way to access Prometheus or Grafana in a local kind cluster without LB?",
      "options": [
        "Create an ExternalName Service",
        "Use kubectl port-forward to the Service",
        "Patch the Service to Headless",
        "Install a VPN"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl port-forward exposes Service/Pod ports locally without needing a LoadBalancer.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-7",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Which is a likely cause of CrashLoopBackOff with 'OOMKilled'?",
      "options": [
        "Too many labels",
        "Container exceeded memory limits and was killed",
        "Wrong context in kubeconfig",
        "ServiceAccount missing"
      ],
      "correctAnswer": 1,
      "explanation": "OOMKilled indicates the container used more memory than its limit. Increase limits, requests, or available node memory.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-8",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "On kind, PersistentVolumeClaims may remain Pending if:",
      "options": [
        "There is no default StorageClass or the request exceeds capacity",
        "kubectl version is too new",
        "Labels are missing",
        "The Pod is running"
      ],
      "correctAnswer": 0,
      "explanation": "PVCs need a provisioner via a StorageClass, and the requested size must be satisfiable.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-9",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "For Apple Silicon (arm64) Macs, which practice reduces image issues?",
      "options": [
        "Always pull linux/amd64 images",
        "Use multi-arch images or build for linux/arm64 with buildx",
        "Disable containerd",
        "Only use Docker Hub"
      ],
      "correctAnswer": 1,
      "explanation": "Prefer multi-arch images or build/pull linux/arm64 images to avoid exec format errors.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-10",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "What is a pragmatic way to use large Ollama models in kind?",
      "options": [
        "Never use volumes",
        "Mount a host directory or use a sufficiently sized PVC for model storage",
        "Use EmptyDir for all large data",
        "Disable persistence"
      ],
      "correctAnswer": 1,
      "explanation": "Models are multi\u2011GB; persist them to a hostPath or PVC to avoid repeated downloads and running out of space.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-11",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Which quick commands form a triage loop for failing workloads?",
      "options": [
        "kubectl get configmap; kubectl edit cm",
        "kubectl get pods -A; kubectl describe pod ...; kubectl get events -A; kubectl logs ...",
        "kubectl get ns; kubectl get crd",
        "kubectl get cs"
      ],
      "correctAnswer": 1,
      "explanation": "Listing pods, describing pods, checking cluster events, and fetching logs quickly reveal most root causes.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-12",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "What is the effect of using Helm vs kubectl for CRDs?",
      "options": [
        "Helm always installs CRDs automatically",
        "CRDs may need to be applied first; Helm charts often include CRDs or hooks, but order still matters",
        "kubectl cannot install CRDs",
        "CRDs do not require any ordering"
      ],
      "correctAnswer": 1,
      "explanation": "Some charts bundle CRDs; otherwise, you must apply them before CRD-dependent resources. kubectl can install CRDs too.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-13",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "Why might a Pod be stuck in Pending on kind despite valid images?",
      "options": [
        "Missing requests/limits",
        "No nodes available that satisfy resource requests (CPU/mem) or PV requirements",
        "Service name typo",
        "kube-dns failure"
      ],
      "correctAnswer": 1,
      "explanation": "Pending often indicates unschedulable resources (insufficient CPU/memory) or volumes cannot be provisioned/bound.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-local-troubleshooting-14",
      "categorySlug": "k8s-local-troubleshooting",
      "question": "What\u2019s an easy way to expose an HTTP app from a Pod in local dev without changing Service type?",
      "options": [
        "kubectl expose",
        "kubectl port-forward deployment/<name> <localPort>:<containerPort>",
        "kubectl run --rm -it busybox",
        "kubectl get service"
      ],
      "correctAnswer": 1,
      "explanation": "Port-forward to a deployment, pod, or service to map a local port to the container\u2019s port.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-0",
      "categorySlug": "http-headers",
      "question": "What does the Cache-Control header primarily do?",
      "options": [
        "Identifies the server requested",
        "Controls caching rules for responses and requests",
        "Specifies human language of response body",
        "Shows which proxies were used"
      ],
      "correctAnswer": 1,
      "explanation": "Cache-Control defines caching policies like max-age, no-store, no-cache, must-revalidate for both clients and intermediaries.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-1",
      "categorySlug": "http-headers",
      "question": "Which header tells caches which request headers affect a response (i.e., establishes cache key variation)?",
      "options": [
        "Vary",
        "Via",
        "Age",
        "ETag"
      ],
      "correctAnswer": 0,
      "explanation": "Vary instructs caches to treat responses as distinct depending on specified request headers, e.g., Vary: Accept-Encoding or Vary: Accept-Language.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-2",
      "categorySlug": "http-headers",
      "question": "The Age header indicates what?",
      "options": [
        "How long the server has been up",
        "How old the cached response is in seconds",
        "Client clock skew",
        "Token expiration time"
      ],
      "correctAnswer": 1,
      "explanation": "Age is added by caches to show the time (in seconds) since the response was generated or revalidated at the origin.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-3",
      "categorySlug": "http-headers",
      "question": "Which request header advertises the client's preferred response media types?",
      "options": [
        "Accept",
        "Accept-Language",
        "Content-Type",
        "User-Agent"
      ],
      "correctAnswer": 0,
      "explanation": "Accept lists media types like application/json or text/html that the client can handle.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-4",
      "categorySlug": "http-headers",
      "question": "Which header carries a unique version identifier for a resource used in conditional requests?",
      "options": [
        "If-Modified-Since",
        "Content-Length",
        "ETag",
        "Range"
      ],
      "correctAnswer": 2,
      "explanation": "ETag is a validator used with If-None-Match to enable cache revalidation and conditional GETs.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-5",
      "categorySlug": "http-headers",
      "question": "Which pair correctly describes conditional request headers?",
      "options": [
        "If-None-Match and If-Modified-Since",
        "Accept and Accept-Encoding",
        "Cookie and Set-Cookie",
        "Host and Referer"
      ],
      "correctAnswer": 0,
      "explanation": "If-None-Match (with ETag) and If-Modified-Since (with Last-Modified) allow clients to ask the server to send content only if it has changed.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-6",
      "categorySlug": "http-headers",
      "question": "Content-Type describes what?",
      "options": [
        "The size of the body in bytes",
        "The language of the response body",
        "The media type of the payload (e.g., application/json)",
        "The compression algorithm used"
      ],
      "correctAnswer": 2,
      "explanation": "Content-Type indicates the media type of the entity-body, such as application/json or text/html; charset can be included.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-7",
      "categorySlug": "http-headers",
      "question": "Which response header instructs the browser to always use HTTPS for the origin?",
      "options": [
        "Strict-Transport-Security",
        "Content-Security-Policy",
        "Access-Control-Allow-Origin",
        "Via"
      ],
      "correctAnswer": 0,
      "explanation": "Strict-Transport-Security (HSTS) enforces HTTPS by telling browsers to only access the site over TLS for a specified max-age.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-8",
      "categorySlug": "http-headers",
      "question": "Which header lists supported compression algorithms for the request?",
      "options": [
        "Accept-Encoding",
        "Content-Encoding",
        "Content-Disposition",
        "Accept-Language"
      ],
      "correctAnswer": 0,
      "explanation": "Accept-Encoding is sent by the client to indicate acceptable content codings such as gzip, br, or deflate.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-9",
      "categorySlug": "http-headers",
      "question": "To request only a portion of a resource (e.g., bytes 0-999), which header is used?",
      "options": [
        "Content-Range",
        "Range",
        "Access-Control-Allow-Origin",
        "Vary"
      ],
      "correctAnswer": 1,
      "explanation": "Range specifies the subset of the representation requested; servers respond with 206 Partial Content and Content-Range.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-10",
      "categorySlug": "http-headers",
      "question": "Which header is used to deliver cookies from server to client?",
      "options": [
        "Cookie",
        "Set-Cookie",
        "Authorization",
        "Referer"
      ],
      "correctAnswer": 1,
      "explanation": "Set-Cookie is used in responses to store cookies in the user agent; Cookie is used in requests to send them back.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "http-headers-11",
      "categorySlug": "http-headers",
      "question": "Content-Security-Policy primarily helps with what?",
      "options": [
        "Restricting allowed sources for scripts, styles, and more",
        "Compressing response bodies",
        "Authenticating requests",
        "Enabling cross-origin requests"
      ],
      "correctAnswer": 0,
      "explanation": "CSP reduces XSS and injection risk by whitelisting resource origins: script-src, style-src, img-src, etc.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-0",
      "categorySlug": "api-architectural-styles",
      "question": "REST emphasizes which core constraints?",
      "options": [
        "Binary streaming and persistent connections",
        "Statelessness, cacheability, and a uniform interface over HTTP",
        "XML envelopes with WSDL contracts",
        "Publish-subscribe over MQTT topics"
      ],
      "correctAnswer": 1,
      "explanation": "REST uses standard HTTP verbs and status codes, stateless requests, cacheability, and a uniform interface.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-1",
      "categorySlug": "api-architectural-styles",
      "question": "GraphQL allows clients to do what most efficiently?",
      "options": [
        "Submit SOAP envelopes with strict schemas",
        "Request only the exact data needed in a single round trip",
        "Stream telemetry over UDP multicast",
        "Schedule background jobs on servers"
      ],
      "correctAnswer": 1,
      "explanation": "GraphQL lets clients specify the precise shape of data and avoid over/under-fetching, often via a single endpoint.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-2",
      "categorySlug": "api-architectural-styles",
      "question": "Which style is protocol-buffer based and optimized for low-latency RPC?",
      "options": [
        "MQTT",
        "WebSockets",
        "gRPC",
        "SOAP"
      ],
      "correctAnswer": 2,
      "explanation": "gRPC uses Protocol Buffers with HTTP/2 for efficient, strongly-typed, low-latency remote procedure calls.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-3",
      "categorySlug": "api-architectural-styles",
      "question": "Which approach enables full-duplex, real-time communication over a single long-lived connection?",
      "options": [
        "REST",
        "SOAP",
        "WebSockets",
        "GraphQL"
      ],
      "correctAnswer": 2,
      "explanation": "WebSockets upgrade an HTTP connection to a persistent, bidirectional channel suitable for real-time apps.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-4",
      "categorySlug": "api-architectural-styles",
      "question": "SOAP is best described as what?",
      "options": [
        "A lightweight pub/sub messaging protocol for constrained devices",
        "A protocol-based standard using XML with built-in features like security and transactions",
        "A graph-based query language delivered over a single endpoint",
        "A set of browser APIs for streaming media"
      ],
      "correctAnswer": 1,
      "explanation": "SOAP uses XML envelopes and standards (WS-Security, WS-*) to support enterprise features like transactions.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-5",
      "categorySlug": "api-architectural-styles",
      "question": "MQTT is commonly chosen for which scenarios?",
      "options": [
        "Mobile apps that need server-side rendering",
        "IoT devices over low-bandwidth or unreliable networks",
        "Batch analytics pipelines",
        "Enterprise SOA with XA transactions"
      ],
      "correctAnswer": 1,
      "explanation": "MQTT is a lightweight pub/sub protocol suitable for constrained devices and intermittent connectivity.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-6",
      "categorySlug": "api-architectural-styles",
      "question": "When would you pick GraphQL over REST?",
      "options": [
        "When you need streaming telemetry from server to client without polling",
        "When clients need to aggregate and shape data from multiple resources in one request",
        "When you need strict XML contracts and WS-* features",
        "When you need UDP-based fire-and-forget messages"
      ],
      "correctAnswer": 1,
      "explanation": "GraphQL excels at aggregating related data with tailored selection sets, reducing round trips and over-fetching.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "api-architectural-styles-7",
      "categorySlug": "api-architectural-styles",
      "question": "When is gRPC typically the better choice?",
      "options": [
        "Browser-to-server APIs for public web apps",
        "Inter-service communication in microservices with strict schemas and performance needs",
        "Human-driven workflows that require hypermedia",
        "Static site content delivery"
      ],
      "correctAnswer": 1,
      "explanation": "gRPC is ideal for internal service-to-service RPC with strongly-typed contracts and high performance.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "backend-architecture-0",
      "categorySlug": "backend-architecture",
      "question": "What is the primary benefit of using a layered architecture (routes \u2192 controllers \u2192 services \u2192 repositories)?",
      "options": [
        "Faster execution speed",
        "Separation of concerns and testability",
        "Reduced memory usage",
        "Automatic scaling"
      ],
      "explanation": "Layered architecture separates HTTP concerns (routes/controllers) from business logic (services) and data access (repositories), making each layer independently testable and maintainable.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-architecture-1",
      "categorySlug": "backend-architecture",
      "question": "In a typical Express API, where should business logic validation occur?",
      "options": [
        "In the route handlers",
        "In the database layer",
        "In the service layer",
        "In middleware only"
      ],
      "explanation": "Business logic belongs in the service layer, while DTOs are validated at the controller level. This keeps business rules centralized and reusable.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-architecture-2",
      "categorySlug": "backend-architecture",
      "question": "What is the purpose of DTO (Data Transfer Object) validation?",
      "options": [
        "To optimize database queries",
        "To validate and transform input data at API boundaries",
        "To compress network payloads",
        "To generate API documentation"
      ],
      "explanation": "DTOs validate incoming data structure and types at API boundaries, ensuring only valid data enters your business logic.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-architecture-3",
      "categorySlug": "backend-architecture",
      "question": "Which pattern best handles domain errors to HTTP status code mapping?",
      "options": [
        "Try-catch in every route",
        "Centralized error handler middleware",
        "Database triggers",
        "Client-side error handling"
      ],
      "explanation": "A centralized error handler middleware catches domain errors and consistently maps them to appropriate HTTP status codes (NotFound\u2192404, Validation\u2192400, etc).",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-auth-security-0",
      "categorySlug": "backend-auth-security",
      "question": "What is the primary purpose of using separate access and refresh tokens in JWT authentication?",
      "options": [
        "To reduce database load",
        "To allow short-lived access tokens with long-lived refresh tokens for security",
        "To enable multi-factor authentication",
        "To compress authentication data"
      ],
      "explanation": "Access tokens are short-lived (15-30 min) for security, while refresh tokens are long-lived to avoid frequent re-authentication. This balances security with user experience.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-auth-security-1",
      "categorySlug": "backend-auth-security",
      "question": "What does RBAC stand for in the context of API authorization?",
      "options": [
        "Redis-Based Access Control",
        "Role-Based Access Control",
        "Resource-Based Authentication Check",
        "Remote Broker Access Configuration"
      ],
      "explanation": "Role-Based Access Control assigns permissions to roles (admin, user, etc.) rather than individual users, simplifying authorization management.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-auth-security-2",
      "categorySlug": "backend-auth-security",
      "question": "How should an API handle token refresh when the access token expires?",
      "options": [
        "Automatically refresh in every request",
        "Return 401 and let client use refresh token to get new access token",
        "Extend the current token expiry time",
        "Force user to login again"
      ],
      "explanation": "When access token expires, return 401. Client should then use refresh token at /auth/refresh endpoint to get new token pair, with refresh token rotation for security.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-caching-0",
      "categorySlug": "backend-caching",
      "question": "What is the cache-aside (lazy loading) pattern?",
      "options": [
        "Cache is updated before database",
        "Check cache first; on miss, fetch from DB and populate cache",
        "Cache and database are updated simultaneously",
        "Cache is never invalidated"
      ],
      "explanation": "Cache-aside: Try cache first, on miss fetch from source (DB), then populate cache with TTL. Most common pattern for read-heavy workloads.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-caching-1",
      "categorySlug": "backend-caching",
      "question": "When should you invalidate cache entries?",
      "options": [
        "Only when cache is full",
        "On every read operation",
        "When underlying data is modified (create/update/delete)",
        "Never - let TTL handle it"
      ],
      "explanation": "Cache should be invalidated when data changes via POST/PUT/PATCH/DELETE to ensure consistency. Use cache tags or versioned namespaces for efficient invalidation.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-caching-2",
      "categorySlug": "backend-caching",
      "question": "What HTTP headers enable client-side caching with 304 Not Modified responses?",
      "options": [
        "Cache-Control and Expires",
        "ETag and If-None-Match",
        "Authorization and Cookie",
        "Accept and Content-Type"
      ],
      "explanation": "ETag (entity tag) identifies resource version. Client sends If-None-Match with ETag; server returns 304 if unchanged, saving bandwidth.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-caching-3",
      "categorySlug": "backend-caching",
      "question": "What is a good cache key strategy for paginated API endpoints?",
      "options": [
        "Use only the page number",
        "Use userId only",
        "Normalize and hash all query parameters (filters, sort, limit, cursor)",
        "Use timestamp"
      ],
      "explanation": "Cache keys should include all parameters that affect the result: normalized query params, filters, sort order, pagination cursor. This ensures unique keys for different result sets.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-resilience-0",
      "categorySlug": "backend-resilience",
      "question": "What is the purpose of the Idempotency-Key header in REST APIs?",
      "options": [
        "To encrypt request data",
        "To prevent duplicate operations from multiple identical requests",
        "To identify the user",
        "To enable caching"
      ],
      "explanation": "Idempotency-Key ensures that retried requests (due to network issues) don't create duplicates. The server stores the key with the result and returns the same response for subsequent requests with the same key.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-resilience-1",
      "categorySlug": "backend-resilience",
      "question": "How should a circuit breaker handle a failing downstream service?",
      "options": [
        "Keep retrying indefinitely",
        "Open circuit after threshold failures, return fast failures, periodically test with half-open state",
        "Always return cached data",
        "Redirect to another service"
      ],
      "explanation": "Circuit breaker has three states: Closed (normal), Open (fail fast after threshold), Half-Open (test recovery). Prevents cascading failures and gives failing services time to recover.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-resilience-2",
      "categorySlug": "backend-resilience",
      "question": "What is the recommended retry strategy for transient failures?",
      "options": [
        "Retry immediately and repeatedly",
        "Never retry",
        "Exponential backoff with jitter",
        "Fixed 1-second delays"
      ],
      "explanation": "Exponential backoff (1s, 2s, 4s, 8s...) with random jitter prevents thundering herd. Helps services recover without overwhelming them.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-resilience-3",
      "categorySlug": "backend-resilience",
      "question": "What is a poison message in message queue systems?",
      "options": [
        "A message that crashes the queue",
        "A message that repeatedly fails processing and blocks the queue",
        "An encrypted message",
        "A high-priority message"
      ],
      "explanation": "Poison messages fail processing repeatedly (malformed data, bug, etc). Handle with retry limits, then move to DLQ (Dead Letter Queue) for investigation.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-rate-limiting-0",
      "categorySlug": "backend-rate-limiting",
      "question": "Which algorithm is most commonly used for API rate limiting?",
      "options": [
        "Round-robin",
        "Token bucket",
        "First-come-first-served",
        "Random selection"
      ],
      "explanation": "Token bucket allows burst traffic while maintaining average rate. Tokens refill at fixed rate; requests consume tokens. Better than fixed window for real-world traffic patterns.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-rate-limiting-1",
      "categorySlug": "backend-rate-limiting",
      "question": "What should an API return when rate limit is exceeded?",
      "options": [
        "500 Internal Server Error",
        "429 Too Many Requests with Retry-After header",
        "403 Forbidden",
        "503 Service Unavailable"
      ],
      "explanation": "HTTP 429 indicates rate limiting. Include Retry-After header (seconds) and X-RateLimit-* headers to help clients adapt their request rate.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-rate-limiting-2",
      "categorySlug": "backend-rate-limiting",
      "question": "Where should rate limit state be stored for a distributed API?",
      "options": [
        "In-memory on each server",
        "In a shared store like Redis",
        "In the main database",
        "In client cookies"
      ],
      "explanation": "Redis provides fast, shared state across all API instances. Use atomic operations (INCR, EXPIRE) to maintain accurate counts in distributed systems.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-data-patterns-0",
      "categorySlug": "backend-data-patterns",
      "question": "What is the N+1 query problem?",
      "options": [
        "Querying N databases plus 1 cache",
        "Fetching a list, then making separate query for each item's related data",
        "Having N replicas plus 1 master",
        "Needing N indexes plus primary key"
      ],
      "explanation": "N+1: One query for list of items, then N queries for related data. Solution: Use JOIN, eager loading, or batch fetch related data in single query.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-data-patterns-1",
      "categorySlug": "backend-data-patterns",
      "question": "What is keyset pagination and when should you use it?",
      "options": [
        "Using page numbers like ?page=2",
        "Using a cursor based on unique, ordered columns to fetch next set",
        "Loading all data and paginating in memory",
        "Using LIMIT without OFFSET"
      ],
      "explanation": "Keyset pagination uses WHERE id > last_id ORDER BY id LIMIT 20. More efficient than OFFSET for large datasets, provides stable pagination.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-data-patterns-2",
      "categorySlug": "backend-data-patterns",
      "question": "What is the outbox pattern for transactional event publishing?",
      "options": [
        "Sending emails from the API directly",
        "Publishing events before database commit",
        "Storing events in DB table within same transaction, separate process publishes them",
        "Using message queue transactions"
      ],
      "explanation": "Outbox pattern: Write business data + events to outbox table in same DB transaction. Separate publisher reads outbox and publishes events, ensuring exactly-once delivery.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-data-patterns-3",
      "categorySlug": "backend-data-patterns",
      "question": "When should you use EXPLAIN ANALYZE in PostgreSQL?",
      "options": [
        "To create new tables",
        "To analyze query performance and execution plan",
        "To backup the database",
        "To validate data integrity"
      ],
      "explanation": "EXPLAIN ANALYZE shows actual query execution plan with timings. Use it to identify missing indexes, inefficient joins, and optimize slow queries.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-data-patterns-4",
      "categorySlug": "backend-data-patterns",
      "question": "What isolation level prevents dirty reads but allows non-repeatable reads?",
      "options": [
        "Read Uncommitted",
        "Read Committed",
        "Repeatable Read",
        "Serializable"
      ],
      "explanation": "Read Committed prevents dirty reads (seeing uncommitted data) but allows non-repeatable reads (same query returns different results if data changes between reads).",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-async-processing-0",
      "categorySlug": "backend-async-processing",
      "question": "When should you offload work to a background job queue?",
      "options": [
        "For all database queries",
        "For CPU-intensive or I/O heavy tasks that don't need immediate response",
        "Only for scheduled tasks",
        "Never - process everything synchronously"
      ],
      "explanation": "Use queues for: email sending, report generation, image processing, external API calls, batch operations. Keep API responses fast by offloading heavy work.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-async-processing-1",
      "categorySlug": "backend-async-processing",
      "question": "What is a Dead Letter Queue (DLQ)?",
      "options": [
        "A queue for deleted messages",
        "A queue for messages that failed processing after max retries",
        "A backup queue",
        "A high-priority queue"
      ],
      "explanation": "DLQ stores messages that couldn't be processed after maximum retry attempts. Allows investigation and manual intervention without blocking main queue.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-async-processing-2",
      "categorySlug": "backend-async-processing",
      "question": "How should background workers handle job failures?",
      "options": [
        "Ignore and continue",
        "Stop the worker process",
        "Retry with exponential backoff, then DLQ after max attempts",
        "Email admin immediately"
      ],
      "explanation": "Retry with exponential backoff and jitter to handle transient failures. After max attempts (e.g., 5), move to DLQ. Log failures with context for debugging.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-async-processing-3",
      "categorySlug": "backend-async-processing",
      "question": "What is the benefit of using Redis with BullMQ for job queues?",
      "options": [
        "Redis provides persistence, atomic operations, and pub/sub for distributed queue processing",
        "It's faster than in-memory processing",
        "It replaces the need for a database",
        "It automatically scales workers"
      ],
      "explanation": "Redis provides atomic operations for queue management, persistence for reliability, pub/sub for worker coordination, and fast in-memory operations for high throughput.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-observability-0",
      "categorySlug": "backend-observability",
      "question": "What are the RED metrics for API monitoring?",
      "options": [
        "Reliability, Efficiency, Durability",
        "Rate, Errors, Duration",
        "Requests, Events, Data",
        "Response, Encoding, Delivery"
      ],
      "explanation": "RED metrics: Rate (requests/sec), Errors (error rate/percentage), Duration (latency percentiles). Essential for API performance monitoring.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-observability-1",
      "categorySlug": "backend-observability",
      "question": "What is the purpose of correlation IDs (request IDs) in distributed systems?",
      "options": [
        "To encrypt requests",
        "To trace a request across multiple services and logs",
        "To cache responses",
        "To authenticate users"
      ],
      "explanation": "Correlation IDs (X-Request-ID) trace a single request across all services, logs, and components. Essential for debugging distributed systems.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-observability-2",
      "categorySlug": "backend-observability",
      "question": "What should structured logs include for API requests?",
      "options": [
        "Only error messages",
        "Request ID, method, path, status, duration, user ID, error details",
        "Just timestamps",
        "Only successful requests"
      ],
      "explanation": "Structured logs (JSON) should include: request_id, method, path, status_code, duration_ms, user_id, ip, user_agent, error. Enables searching and aggregation.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-observability-3",
      "categorySlug": "backend-observability",
      "question": "What percentiles should you monitor for API latency?",
      "options": [
        "Only average (mean)",
        "p50 (median), p95, p99",
        "Only maximum",
        "Only minimum"
      ],
      "explanation": "Monitor p50 (typical), p95 (slower requests), p99 (worst case). Averages hide outliers; percentiles show real user experience and tail latencies.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-observability-4",
      "categorySlug": "backend-observability",
      "question": "What is distributed tracing used for?",
      "options": [
        "Tracking user locations",
        "Visualizing request flow and timing across multiple services",
        "Debugging JavaScript errors",
        "Monitoring disk usage"
      ],
      "explanation": "Distributed tracing (OpenTelemetry, Jaeger) shows request flow across services with timing for each span. Identifies bottlenecks in microservice architectures.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-api-design-0",
      "categorySlug": "backend-api-design",
      "question": "What is the benefit of OpenAPI (Swagger) specification?",
      "options": [
        "Faster API response times",
        "Auto-generated documentation, client SDKs, and contract testing",
        "Better security",
        "Reduced server costs"
      ],
      "explanation": "OpenAPI provides single source of truth for API contract. Enables auto-generated docs, client SDKs, mock servers, and contract testing to ensure implementation matches spec.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-api-design-1",
      "categorySlug": "backend-api-design",
      "question": "What is a contract test in API development?",
      "options": [
        "Testing legal agreements",
        "Validating API responses match the documented schema",
        "Load testing",
        "Security testing"
      ],
      "explanation": "Contract tests verify that API implementation matches its OpenAPI/schema specification. Catches breaking changes and documentation drift.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-api-design-2",
      "categorySlug": "backend-api-design",
      "question": "How should APIs handle backward compatibility?",
      "options": [
        "Break changes whenever needed",
        "Never change anything",
        "Version endpoints, add fields (don't remove), deprecate gracefully",
        "Maintain separate codebases"
      ],
      "explanation": "Maintain backward compatibility: Use versioning (/v1, /v2), only add optional fields, deprecate with notices, use field aliases. Breaking changes require new version.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-api-design-3",
      "categorySlug": "backend-api-design",
      "question": "What is consumer-driven contract testing?",
      "options": [
        "Consumers write tests that define their expectations of the API",
        "Only the API provider writes tests",
        "Testing consumer applications",
        "Load testing from consumer perspective"
      ],
      "explanation": "Consumers define contracts (Pact) specifying what they need from API. Provider runs these contracts in CI to ensure changes don't break consumers.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-scaling-0",
      "categorySlug": "backend-scaling",
      "question": "What makes an API \"stateless\" for horizontal scaling?",
      "options": [
        "No database connections",
        "No server-side session state; auth via tokens, session in Redis/DB",
        "No logging",
        "No external dependencies"
      ],
      "explanation": "Stateless APIs don't store session data in server memory. Use JWT tokens or centralized session store (Redis). Any instance can handle any request.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-scaling-1",
      "categorySlug": "backend-scaling",
      "question": "What is connection pooling and why is it important?",
      "options": [
        "Sharing WiFi connections",
        "Reusing database connections instead of creating new ones per request",
        "Load balancing",
        "Caching connections"
      ],
      "explanation": "Connection pools maintain reusable DB connections, avoiding costly connection setup/teardown per request. Critical for performance under load.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-scaling-2",
      "categorySlug": "backend-scaling",
      "question": "When should you consider database read replicas?",
      "options": [
        "Never - they're too complex",
        "When read traffic significantly exceeds write traffic",
        "Only for backup purposes",
        "When you have exactly 2 servers"
      ],
      "explanation": "Read replicas offload read queries from primary DB. Use when read:write ratio is high (>80:20). Route writes to primary, reads to replicas with slight lag tolerance.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-scaling-3",
      "categorySlug": "backend-scaling",
      "question": "What is database sharding?",
      "options": [
        "Backing up the database",
        "Partitioning data across multiple databases based on a shard key",
        "Encrypting database",
        "Compressing tables"
      ],
      "explanation": "Sharding distributes data across multiple DBs using shard key (e.g., user_id % 4). Enables horizontal scaling but adds complexity for cross-shard queries.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-scaling-4",
      "categorySlug": "backend-scaling",
      "question": "What is backpressure in system design?",
      "options": [
        "Database backup pressure",
        "Mechanism to slow down producers when consumers can't keep up",
        "Network latency",
        "CPU pressure"
      ],
      "explanation": "Backpressure prevents system overload by signaling producers to slow down when buffers fill. Implemented via rate limiting, queue bounds, or TCP flow control.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-testing-0",
      "categorySlug": "backend-testing",
      "question": "What should integration tests for APIs focus on?",
      "options": [
        "Only happy paths",
        "HTTP contract, auth, validation, error cases, side effects",
        "UI testing",
        "Load testing"
      ],
      "explanation": "Integration tests verify: HTTP status codes, response shapes, auth/authz, validation errors, database side effects, external service mocking.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-testing-1",
      "categorySlug": "backend-testing",
      "question": "How should you test service layer business logic?",
      "options": [
        "Only through API endpoints",
        "Unit tests with mocked dependencies",
        "Manual testing only",
        "In production"
      ],
      "explanation": "Unit test services with mocked repositories/dependencies. Test business rules, edge cases, error handling in isolation. Fast feedback, high coverage.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-testing-2",
      "categorySlug": "backend-testing",
      "question": "What is the purpose of load testing with tools like k6 or autocannon?",
      "options": [
        "Finding security vulnerabilities",
        "Identifying performance bottlenecks and capacity limits",
        "Testing UI responsiveness",
        "Validating business logic"
      ],
      "explanation": "Load testing reveals bottlenecks, breaking points, and capacity. Test normal load, spike traffic, sustained load. Monitor latency, error rate, resource usage.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-deployment-0",
      "categorySlug": "backend-deployment",
      "question": "What is a health check endpoint and what should it verify?",
      "options": [
        "Just return 200 OK",
        "Check critical dependencies: DB connection, Redis, required services",
        "Run full test suite",
        "Check disk space only"
      ],
      "explanation": "Health checks (/health or /ready) verify critical dependencies are accessible. Deep health checks test DB, cache, queues. Shallow checks just confirm app is running.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-deployment-1",
      "categorySlug": "backend-deployment",
      "question": "What is the purpose of database migrations in production?",
      "options": [
        "Moving to a different database",
        "Version-controlled, incremental schema changes",
        "Backing up data",
        "Optimizing queries"
      ],
      "explanation": "Migrations provide version-controlled, repeatable schema changes. Run forward migrations on deploy, support rollback. Tools: Prisma Migrate, Flyway, Liquibase.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 2
    },
    {
      "id": "backend-deployment-2",
      "categorySlug": "backend-deployment",
      "question": "How should environment configuration be managed?",
      "options": [
        "Hardcode in source files",
        "Environment variables via .env files, never commit secrets",
        "Store in database",
        "Use different code branches"
      ],
      "explanation": "Use environment variables for config (12-factor app). .env for local, environment variables in production. Never commit secrets. Use secret managers for sensitive data.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "backend-deployment-3",
      "categorySlug": "backend-deployment",
      "question": "What should a runbook include for production APIs?",
      "options": [
        "Just the code",
        "Setup, common issues, monitoring queries, rollback procedures, contacts",
        "Only deployment commands",
        "Marketing materials"
      ],
      "explanation": "Runbooks document: local/prod setup, troubleshooting guides, key metrics/queries, deployment/rollback steps, incident response, team contacts. Living documentation.",
      "difficulty": 3,
      "tags": [],
      "correctAnswer": 1
    },
    {
      "id": "observability-prometheus-grafana-0",
      "categorySlug": "observability-prometheus-grafana",
      "question": "In a messy repo with many Prometheus/Grafana manifests, what is the first step for a clean dev setup using Istio sample add-ons?",
      "options": [
        "Install kube-prometheus-stack alongside existing manifests",
        "Keep a single source at istio/samples/addons and remove/ignore duplicates and archives",
        "Create a new namespace for each copy and apply all of them",
        "Switch to Datadog and delete Prometheus/Grafana"
      ],
      "correctAnswer": 1,
      "explanation": "Consolidate to one definitive location (istio/samples/addons) and remove or ignore duplicates and archived copies to avoid conflicting deployments.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-1",
      "categorySlug": "observability-prometheus-grafana",
      "question": "For a quick working dev environment on kind with Istio, which stack should you choose?",
      "options": [
        "Istio's sample add-ons (prometheus.yaml, grafana.yaml)",
        "kube-prometheus-stack (Helm) immediately",
        "Prometheus Operator only",
        "Switch to OpenTelemetry Collector only"
      ],
      "correctAnswer": 0,
      "explanation": "Istio's sample add-ons are the lightest path to a working dev setup; you can migrate to kube-prometheus-stack later if needed.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-2",
      "categorySlug": "observability-prometheus-grafana",
      "question": "Where should Prometheus and Grafana run in this setup?",
      "options": [
        "default namespace",
        "kube-system namespace",
        "istio-system namespace",
        "monitoring namespace only"
      ],
      "correctAnswer": 2,
      "explanation": "Istio's sample add-ons typically live in istio-system alongside other mesh components.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-3",
      "categorySlug": "observability-prometheus-grafana",
      "question": "What is the recommended way to load custom Grafana dashboards from the repo into Grafana?",
      "options": [
        "Upload them manually in the UI after every deploy",
        "Bundle dashboards into the Grafana image",
        "Create ConfigMaps from the JSON files and mount them; add a provisioning YAML to auto-load",
        "Store JSON in a Secret and let Grafana read secrets"
      ],
      "correctAnswer": 2,
      "explanation": "Use ConfigMaps for dashboards and a provisioning file so Grafana auto-loads them on start; this keeps Git as the source of truth.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-4",
      "categorySlug": "observability-prometheus-grafana",
      "question": "Where should Grafana's datasources provisioning file be mounted to auto-provision the Prometheus datasource?",
      "options": [
        "/etc/grafana/provisioning/datasources",
        "/var/lib/grafana/dashboards",
        "/etc/prometheus",
        "/opt/grafana"
      ],
      "correctAnswer": 0,
      "explanation": "Grafana reads datasource definitions from /etc/grafana/provisioning/datasources (e.g., datasources.yml).",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-5",
      "categorySlug": "observability-prometheus-grafana",
      "question": "How should you standardize Prometheus alerting rules if they live in prometheus-alerts.yaml?",
      "options": [
        "Append the rules to every Deployment as annotations",
        "Package rules into a ConfigMap and mount/reference them from prometheus.yaml",
        "Write them into an environment variable on the Prometheus pod",
        "Create a ServiceMonitor resource (works only with Operator)"
      ],
      "correctAnswer": 1,
      "explanation": "Create a ConfigMap for the rules and mount/reference it from the Prometheus configuration used by the sample add-on.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-6",
      "categorySlug": "observability-prometheus-grafana",
      "question": "What single command applies the whole observability stack when using a Kustomize overlay at infrastructure/observability?",
      "options": [
        "kubectl apply -f infrastructure/observability",
        "kubectl kustomize infrastructure/observability",
        "kubectl apply -k infrastructure/observability",
        "kustomize build infrastructure/observability | kubectl delete -f -"
      ],
      "correctAnswer": 2,
      "explanation": "kubectl apply -k instructs kubectl to process the Kustomization directory and apply the rendered manifests.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-7",
      "categorySlug": "observability-prometheus-grafana",
      "question": "In kind, what is the simplest way to access Grafana locally after deploying the sample add-on?",
      "options": [
        "Expose Grafana as a LoadBalancer service",
        "Create an Ingress resource for Grafana",
        "kubectl -n istio-system port-forward svc/grafana 3000:3000",
        "Change the Service to NodePort and open a firewall rule"
      ],
      "correctAnswer": 2,
      "explanation": "Port-forwarding is simplest and safest for local clusters like kind or minikube.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-8",
      "categorySlug": "observability-prometheus-grafana",
      "question": "How do you verify that Prometheus is scraping targets correctly?",
      "options": [
        "Check that kubectl get pods shows 1/1",
        "Port-forward Prometheus and inspect /targets page; targets should be UP",
        "Run istioctl analyze",
        "Open Grafana and hope metrics appear"
      ],
      "correctAnswer": 1,
      "explanation": "Port-forward to Prometheus (e.g., 9090) and check the /targets UI for scrape status and errors.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-9",
      "categorySlug": "observability-prometheus-grafana",
      "question": "If migrating later to kube-prometheus-stack, what practice avoids conflicts?",
      "options": [
        "Install kps in addition to sample add-ons to compare metrics",
        "Install kps in a dedicated namespace and remove sample add-ons to avoid duplicate Prometheus instances",
        "Keep sample add-ons for Grafana only while kps provides Prometheus",
        "Run both and let ServiceMonitors deduplicate"
      ],
      "correctAnswer": 1,
      "explanation": "Avoid running two Prometheus servers scraping the same targets; install kube-prometheus-stack in its own namespace and remove the sample stack.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "observability-prometheus-grafana-10",
      "categorySlug": "observability-prometheus-grafana",
      "question": "Why is running Istio's Prometheus and kube-prometheus-stack simultaneously in the same cluster a bad idea?",
      "options": [
        "They use incompatible HTTP versions",
        "Duplicate scraping and resource contention lead to confusion and higher load",
        "Grafana cannot connect to more than one datasource",
        "Istio doesn't support Prometheus"
      ],
      "correctAnswer": 1,
      "explanation": "Two collectors scrape the same endpoints, doubling load and creating confusion over which Prometheus to query.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-0",
      "categorySlug": "istio-traffic-drills",
      "question": "Quick: Command to check if Istio sidecar is injected?",
      "options": [
        "kubectl get pods -o yaml | grep sidecar",
        "kubectl get pod <pod> -o jsonpath='{.spec.containers[*].name}'",
        "istioctl check pods",
        "kubectl describe pod | grep istio"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl get pod <pod> -o jsonpath='{.spec.containers[*].name}' - Look for 'istio-proxy' container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-1",
      "categorySlug": "istio-traffic-drills",
      "question": "Weight math: VirtualService has v1:70, v2:30. After 1000 requests, approximately how many hit v2?",
      "options": [
        "Exactly 300",
        "~300 (270-330 range expected)",
        "500",
        "700"
      ],
      "correctAnswer": 1,
      "explanation": "Weights are probabilistic, not deterministic. Expect ~30% \u00b1 variance over time.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-2",
      "categorySlug": "istio-traffic-drills",
      "question": "Quick canary rollout sequence - what's the typical progression?",
      "options": [
        "0% \u2192 100% instantly",
        "50% \u2192 50% split forever",
        "5% \u2192 10% \u2192 25% \u2192 50% \u2192 100% with observation between",
        "100% \u2192 0% \u2192 100%"
      ],
      "correctAnswer": 2,
      "explanation": "Start small (5%), observe metrics, gradually increase: 10% \u2192 25% \u2192 50% \u2192 100%",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-3",
      "categorySlug": "istio-traffic-drills",
      "question": "Emergency: 503 errors after deploying VirtualService. First check?",
      "options": [
        "Restart all pods",
        "Check if DestinationRule subsets match VirtualService destinations",
        "Delete the VirtualService",
        "Increase memory limits"
      ],
      "correctAnswer": 1,
      "explanation": "503s often mean subset mismatch. Verify DestinationRule defines the subsets referenced in VirtualService.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-4",
      "categorySlug": "istio-traffic-drills",
      "question": "Command to apply 90/10 canary split between v1 and v2?",
      "options": [
        "kubectl set traffic v1=90 v2=10",
        "kubectl patch virtualservice <name> --type='json' -p='[{\"op\":\"replace\",\"path\":\"/spec/http/0/route\",\"value\":[{\"destination\":{\"subset\":\"v1\"},\"weight\":90},{\"destination\":{\"subset\":\"v2\"},\"weight\":10}]}]'",
        "istioctl set weights 90 10",
        "kubectl scale deployment v2 --replicas=1"
      ],
      "correctAnswer": 1,
      "explanation": "Use kubectl patch to modify VirtualService route weights. Can also edit YAML directly.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "istio-traffic-drills-5",
      "categorySlug": "istio-traffic-drills",
      "question": "What's the Istio resource hierarchy for exposing a service?",
      "options": [
        "Service \u2192 Deployment \u2192 Pod",
        "Gateway \u2192 VirtualService \u2192 DestinationRule \u2192 Service",
        "Ingress \u2192 Service \u2192 Deployment",
        "LoadBalancer \u2192 NodePort \u2192 ClusterIP"
      ],
      "correctAnswer": 1,
      "explanation": "Gateway (entry point) \u2192 VirtualService (routing rules) \u2192 DestinationRule (subsets/policies) \u2192 Service",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "eso-vault-drills-0",
      "categorySlug": "eso-vault-drills",
      "question": "Quick: Check if External Secrets Operator is syncing?",
      "options": [
        "kubectl get externalsecrets",
        "kubectl get externalsecret <name> -o jsonpath='{.status.conditions}'",
        "vault status",
        "kubectl logs deployment/eso"
      ],
      "correctAnswer": 1,
      "explanation": "Check ExternalSecret status.conditions for Ready=True and sync status/errors",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "eso-vault-drills-1",
      "categorySlug": "eso-vault-drills",
      "question": "ESO sync interval: How to make it sync every 30 seconds?",
      "options": [
        "Set annotations refresh=30",
        "spec.refreshInterval: 30s in ExternalSecret",
        "Configure in SecretStore",
        "Not configurable"
      ],
      "correctAnswer": 1,
      "explanation": "spec.refreshInterval: 30s in ExternalSecret controls sync frequency",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "eso-vault-drills-2",
      "categorySlug": "eso-vault-drills",
      "question": "Vault + ESO auth chain: What's the correct order?",
      "options": [
        "ExternalSecret \u2192 Vault \u2192 SecretStore \u2192 Pod",
        "SecretStore authenticates to Vault \u2192 ExternalSecret references SecretStore \u2192 Creates K8s Secret \u2192 Pod mounts",
        "Pod \u2192 Vault \u2192 Secret",
        "Direct Vault access from pods"
      ],
      "correctAnswer": 1,
      "explanation": "SecretStore has Vault auth \u2192 ExternalSecret uses it \u2192 Materializes K8s Secret \u2192 Pod consumes",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "eso-vault-drills-3",
      "categorySlug": "eso-vault-drills",
      "question": "Secret not appearing in pod env. Check sequence?",
      "options": [
        "1) ExternalSecret status 2) K8s Secret exists 3) Deployment envFrom/volumeMount 4) Pod restart if needed",
        "Just restart the pod",
        "Check Vault UI only",
        "Delete and recreate everything"
      ],
      "correctAnswer": 0,
      "explanation": "Systematic check: ESO sync \u2192 Secret creation \u2192 Deployment config \u2192 Pod injection",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "eso-vault-drills-4",
      "categorySlug": "eso-vault-drills",
      "question": "Command to verify K8s Secret was created by ESO?",
      "options": [
        "kubectl describe secret <name> | grep 'managed-by'",
        "vault kv get secret/<name>",
        "kubectl get secret <name> -o yaml | grep annotations",
        "Both A and C"
      ],
      "correctAnswer": 3,
      "explanation": "ESO adds annotations/labels. Check with describe or get -o yaml for ESO metadata.",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "feature-flags-drills-0",
      "categorySlug": "feature-flags-drills",
      "question": "OpenFeature SDK initialization - minimum code?",
      "options": [
        "const client = new OpenFeature()",
        "OpenFeature.setProvider(provider); const client = OpenFeature.getClient('app')",
        "import OpenFeature from 'openfeature'",
        "OpenFeature.init()"
      ],
      "correctAnswer": 1,
      "explanation": "Set provider first, then get client with context/name",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "feature-flags-drills-1",
      "categorySlug": "feature-flags-drills",
      "question": "Unleash seed job: How to make idempotent?",
      "options": [
        "Delete all flags first",
        "Use PUT/PATCH, handle 409 conflicts, check existing before create",
        "Only run once",
        "Use random IDs"
      ],
      "correctAnswer": 1,
      "explanation": "Idempotent: Check existence, use PUT for updates, gracefully handle 409 Conflict",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "feature-flags-drills-2",
      "categorySlug": "feature-flags-drills",
      "question": "Quick rollback of bad feature flag?",
      "options": [
        "Redeploy application",
        "Toggle flag off in Unleash UI/API \u2192 Takes effect immediately (or at next poll)",
        "Delete the flag",
        "Restart all pods"
      ],
      "correctAnswer": 1,
      "explanation": "Feature flag systems allow instant rollback without deployment. Toggle off \u2192 immediate/next poll",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "feature-flags-drills-3",
      "categorySlug": "feature-flags-drills",
      "question": "Feature flag evaluation: What context to pass?",
      "options": [
        "Nothing",
        "userId, tenantId, environment, custom attributes for targeting",
        "Just boolean true/false",
        "Only environment name"
      ],
      "correctAnswer": 1,
      "explanation": "Pass rich context for targeting: user, tenant, env, attributes enable gradual rollouts",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "feature-flags-drills-4",
      "categorySlug": "feature-flags-drills",
      "question": "Self-hosted Unleash minimum setup?",
      "options": [
        "Unleash server + PostgreSQL",
        "Just Unleash binary",
        "Unleash + Redis + PostgreSQL + Kafka",
        "Cloud only"
      ],
      "correctAnswer": 0,
      "explanation": "Minimum: Unleash server + PostgreSQL for state. Optional: Redis cache, Unleash proxy",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "debugging-drills-0",
      "categorySlug": "debugging-drills",
      "question": "Pod in CrashLoopBackOff. First command?",
      "options": [
        "kubectl delete pod",
        "kubectl logs <pod> --previous",
        "kubectl describe node",
        "kubectl get events"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl logs <pod> --previous shows logs from the crashed container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "debugging-drills-1",
      "categorySlug": "debugging-drills",
      "question": "Istio not routing traffic. Check order?",
      "options": [
        "1) Sidecar injected? 2) VirtualService matches? 3) DestinationRule subsets? 4) Service selector?",
        "Just check logs",
        "Restart Istio",
        "Check CPU usage"
      ],
      "correctAnswer": 0,
      "explanation": "Systematic: Sidecar \u2192 VS rules \u2192 DR subsets \u2192 Service selector \u2192 Pod labels",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "debugging-drills-2",
      "categorySlug": "debugging-drills",
      "question": "ExternalSecret shows 'SecretSyncError'. Next step?",
      "options": [
        "Delete the ExternalSecret",
        "kubectl describe externalsecret <name> for detailed error",
        "Restart ESO operator",
        "Check pod logs"
      ],
      "correctAnswer": 1,
      "explanation": "describe shows detailed status.conditions with specific error messages",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "debugging-drills-3",
      "categorySlug": "debugging-drills",
      "question": "Canary deployment showing errors. Rollback command?",
      "options": [
        "kubectl rollout undo deployment",
        "kubectl patch virtualservice <name> --type='json' -p='[{\"op\":\"replace\",\"path\":\"/spec/http/0/route/0/weight\",\"value\":100},{\"op\":\"replace\",\"path\":\"/spec/http/0/route/1/weight\",\"value\":0}]'",
        "kubectl delete deployment v2",
        "kubectl scale deployment v2 --replicas=0"
      ],
      "correctAnswer": 1,
      "explanation": "Patch VirtualService to send 100% to stable (v1), 0% to canary (v2)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "debugging-drills-4",
      "categorySlug": "debugging-drills",
      "question": "Service returns 404 through Istio Gateway. Check?",
      "options": [
        "Gateway listeners and VirtualService hosts/gateways match",
        "Increase replicas",
        "Check database connection",
        "Restart gateway pod"
      ],
      "correctAnswer": 0,
      "explanation": "404 = routing issue. Verify Gateway ports/hosts align with VirtualService gateway/hosts fields",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "config-patterns-drills-0",
      "categorySlug": "config-patterns-drills",
      "question": "ConfigMap vs Secret vs ExternalSecret - when to use each?",
      "options": [
        "All interchangeable",
        "ConfigMap: non-sensitive config, Secret: sensitive static, ExternalSecret: sensitive dynamic/rotated",
        "Only use Secrets",
        "Only use ConfigMaps"
      ],
      "correctAnswer": 1,
      "explanation": "ConfigMap for app config, Secret for static sensitive, ExternalSecret for Vault-managed/rotated secrets",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "config-patterns-drills-1",
      "categorySlug": "config-patterns-drills",
      "question": "How to reload app config without pod restart?",
      "options": [
        "Not possible",
        "File watch on mounted ConfigMap + app reload logic, or webhook/polling",
        "Kill the process",
        "Scale to 0 and back"
      ],
      "correctAnswer": 1,
      "explanation": "Mount as volume + file watcher, or implement config polling/webhook endpoint",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "config-patterns-drills-2",
      "categorySlug": "config-patterns-drills",
      "question": "Secret rotation with ESO - what happens to pods?",
      "options": [
        "Pods crash immediately",
        "Secret updates, pods need restart or app must reload",
        "Nothing changes",
        "Pods auto-restart"
      ],
      "correctAnswer": 1,
      "explanation": "ESO updates Secret, but pods need restart unless app watches mounted files",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "config-patterns-drills-3",
      "categorySlug": "config-patterns-drills",
      "question": "12-factor app config principle?",
      "options": [
        "Hardcode everything",
        "Store config in environment variables, strict separation from code",
        "Use files only",
        "Database for all config"
      ],
      "correctAnswer": 1,
      "explanation": "12-factor: Config via env vars, separated from code, no config in containers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "config-patterns-drills-4",
      "categorySlug": "config-patterns-drills",
      "question": "Helm values precedence (lowest to highest)?",
      "options": [
        "values.yaml < -f custom.yaml < --set flag",
        "--set < values.yaml < -f custom.yaml",
        "All equal precedence",
        "Random order"
      ],
      "correctAnswer": 0,
      "explanation": "values.yaml (default) < -f file overrides < --set CLI overrides (highest)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-0",
      "categorySlug": "command-reference-drills",
      "question": "Get all Istio VirtualServices in namespace?",
      "options": [
        "kubectl get virtualservices",
        "kubectl get vs -n <namespace>",
        "istioctl get virtualservices",
        "kubectl get istio vs"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl get vs -n <namespace> (vs is short for virtualservice)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-1",
      "categorySlug": "command-reference-drills",
      "question": "Check Istio proxy config for a pod?",
      "options": [
        "kubectl logs <pod> -c istio-proxy",
        "istioctl proxy-config all <pod>",
        "kubectl describe pod",
        "istioctl analyze"
      ],
      "correctAnswer": 1,
      "explanation": "istioctl proxy-config all <pod> shows routes, clusters, listeners, endpoints",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-2",
      "categorySlug": "command-reference-drills",
      "question": "Force ExternalSecret to sync immediately?",
      "options": [
        "kubectl annotate externalsecret <name> force-sync=true",
        "kubectl annotate externalsecret <name> reconcile.external-secrets.io/data-hash=<random>",
        "kubectl patch externalsecret <name> --type merge -p '{\"spec\":{\"refreshInterval\":\"1s\"}}'",
        "Not possible"
      ],
      "correctAnswer": 1,
      "explanation": "Change data-hash annotation to trigger immediate reconciliation",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-3",
      "categorySlug": "command-reference-drills",
      "question": "View Kiali dashboard for mesh visualization?",
      "options": [
        "kubectl port-forward svc/kiali 20001:20001 -n istio-system",
        "istioctl dashboard kiali",
        "Both A and B work",
        "kiali --start"
      ],
      "correctAnswer": 2,
      "explanation": "Both port-forward and istioctl dashboard kiali work to access Kiali",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-4",
      "categorySlug": "command-reference-drills",
      "question": "Quick way to test feature flag from CLI?",
      "options": [
        "Not possible from CLI",
        "curl -H 'Authorization: <key>' unleash-server/api/client/features",
        "kubectl get featureflags",
        "ff test <flag>"
      ],
      "correctAnswer": 1,
      "explanation": "Use Unleash client API with proper auth to check flag states",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-5",
      "categorySlug": "command-reference-drills",
      "question": "Inject Istio sidecar to existing deployment?",
      "options": [
        "kubectl label namespace <ns> istio-injection=enabled && kubectl rollout restart deployment/<name>",
        "istioctl inject deployment",
        "Manual pod edit only",
        "Not possible"
      ],
      "correctAnswer": 0,
      "explanation": "Label namespace for auto-injection, then restart deployment to get sidecars",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "command-reference-drills-6",
      "categorySlug": "command-reference-drills",
      "question": "Check mTLS mode between two services?",
      "options": [
        "istioctl authn tls-check <source-pod> <destination-service>",
        "kubectl get peerauthentication",
        "Check logs",
        "tcpdump"
      ],
      "correctAnswer": 0,
      "explanation": "istioctl authn tls-check shows actual mTLS status between services",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "checklist-drills-0",
      "categorySlug": "checklist-drills",
      "question": "Canary deployment checklist - correct order?",
      "options": [
        "Deploy v2 \u2192 Create subsets \u2192 Configure VirtualService \u2192 Gradual weight shift \u2192 Monitor \u2192 Full cutover",
        "Delete v1 \u2192 Deploy v2",
        "Change DNS \u2192 Deploy",
        "Random steps"
      ],
      "correctAnswer": 0,
      "explanation": "1) Deploy v2 2) DestinationRule subsets 3) VirtualService weights 4) Gradual increase 5) Monitor 6) 100% cutover",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "checklist-drills-1",
      "categorySlug": "checklist-drills",
      "question": "ESO + Vault setup checklist?",
      "options": [
        "Random installation",
        "1) Install ESO 2) Configure Vault auth 3) Create SecretStore 4) Create ExternalSecret 5) Verify Secret 6) Mount in pod",
        "Just install Vault",
        "Copy secrets manually"
      ],
      "correctAnswer": 1,
      "explanation": "Systematic: ESO operator \u2192 Vault RBAC \u2192 SecretStore auth \u2192 ExternalSecret mapping \u2192 Verify \u2192 Use",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "checklist-drills-2",
      "categorySlug": "checklist-drills",
      "question": "Feature flag implementation checklist?",
      "options": [
        "1) Choose system 2) Deploy server 3) Create flags 4) Add SDK 5) Implement checks 6) Add fallbacks 7) Monitor",
        "Just add if statements",
        "Database flags only",
        "Hardcode everything"
      ],
      "correctAnswer": 0,
      "explanation": "Complete: System selection \u2192 Server setup \u2192 Flag creation \u2192 SDK integration \u2192 Code implementation \u2192 Fallbacks \u2192 Monitoring",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "checklist-drills-3",
      "categorySlug": "checklist-drills",
      "question": "Production readiness for runtime control?",
      "options": [
        "Code complete = ready",
        "\u25a1 Secrets rotatable \u25a1 Canary capable \u25a1 Feature flags \u25a1 Config reloadable \u25a1 Rollback tested \u25a1 Monitoring active",
        "Just deploy",
        "Tests pass = ready"
      ],
      "correctAnswer": 1,
      "explanation": "Production checklist: Secrets, canary, flags, config reload, rollback plan, monitoring",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "checklist-drills-4",
      "categorySlug": "checklist-drills",
      "question": "Incident response for bad deployment?",
      "options": [
        "Panic",
        "1) Stop traffic to bad version 2) Assess impact 3) Rollback or hotfix 4) Verify fix 5) Gradual re-enable 6) Postmortem",
        "Delete everything",
        "Wait and see"
      ],
      "correctAnswer": 1,
      "explanation": "Structured response: Isolate \u2192 Assess \u2192 Fix \u2192 Verify \u2192 Restore \u2192 Learn",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "yaml-patterns-drills-0",
      "categorySlug": "yaml-patterns-drills",
      "question": "VirtualService weight distribution - which YAML is correct?",
      "options": [
        "route: [destination: v1: 80, v2: 20]",
        "route:\\n- destination:\\n    host: service\\n    subset: v1\\n  weight: 80\\n- destination:\\n    host: service\\n    subset: v2\\n  weight: 20",
        "weights: {v1: 80, v2: 20}",
        "balance: v1=80 v2=20"
      ],
      "correctAnswer": 1,
      "explanation": "Each route destination needs host, subset, and weight fields",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "yaml-patterns-drills-1",
      "categorySlug": "yaml-patterns-drills",
      "question": "ExternalSecret data mapping - correct syntax?",
      "options": [
        "data:\\n- secretKey: password\\n  remoteRef:\\n    key: secret/data/myapp\\n    property: password",
        "secrets: [password: vault/password]",
        "vault: {password: true}",
        "import: secret/data/myapp"
      ],
      "correctAnswer": 0,
      "explanation": "Map secretKey (K8s) to remoteRef with Vault key and property",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "yaml-patterns-drills-2",
      "categorySlug": "yaml-patterns-drills",
      "question": "PeerAuthentication for strict mTLS?",
      "options": [
        "tls: required",
        "mtls:\\n  mode: STRICT",
        "authentication: mutual",
        "secure: true"
      ],
      "correctAnswer": 1,
      "explanation": "spec.mtls.mode: STRICT enforces mTLS",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "yaml-patterns-drills-3",
      "categorySlug": "yaml-patterns-drills",
      "question": "Deployment environment from Secret?",
      "options": [
        "env: secretRef: my-secret",
        "envFrom:\\n- secretRef:\\n    name: my-secret",
        "secrets: [my-secret]",
        "useSecret: my-secret"
      ],
      "correctAnswer": 1,
      "explanation": "envFrom with secretRef loads all Secret keys as env vars",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "yaml-patterns-drills-4",
      "categorySlug": "yaml-patterns-drills",
      "question": "Gateway HTTPS listener?",
      "options": [
        "servers:\\n- port:\\n    number: 443\\n    name: https\\n    protocol: HTTPS\\n  tls:\\n    mode: SIMPLE\\n    credentialName: my-cert",
        "https: enabled",
        "port: 443",
        "ssl: true"
      ],
      "correctAnswer": 0,
      "explanation": "Gateway server needs port 443, HTTPS protocol, and TLS config with cert",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-0",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Quick: Get all pods in all namespaces with their nodes?",
      "options": [
        "kubectl get pods --all",
        "kubectl get pods --all-namespaces -o wide",
        "kubectl get pods -A",
        "kubectl list pods"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl get pods --all-namespaces -o wide (or -A for short) shows pods across all namespaces with node info",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-1",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Command to see real-time pod resource usage?",
      "options": [
        "kubectl top pods",
        "kubectl stats pods",
        "kubectl monitor pods",
        "kubectl resources pods"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl top pods shows CPU/memory usage (requires metrics-server)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-2",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Quick way to edit a deployment?",
      "options": [
        "kubectl modify deployment <name>",
        "kubectl edit deployment <name>",
        "kubectl update deployment <name>",
        "kubectl change deployment <name>"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl edit deployment <name> opens the resource in your default editor",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-3",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Command to see what changed in the last deployment rollout?",
      "options": [
        "kubectl diff deployment <name>",
        "kubectl rollout history deployment <name>",
        "kubectl changes deployment <name>",
        "kubectl log deployment <name>"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl rollout history deployment <name> shows revision history with change causes",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-4",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Quick rollback of a failed deployment?",
      "options": [
        "kubectl rollout undo deployment <name>",
        "kubectl rollback deployment <name>",
        "kubectl revert deployment <name>",
        "kubectl restore deployment <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl rollout undo deployment <name> rolls back to previous revision",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-5",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Command to copy files from a pod?",
      "options": [
        "kubectl cp <pod>:/path/to/file ./local",
        "kubectl copy <pod>:/path/to/file ./local",
        "kubectl get file <pod>:/path/to/file",
        "kubectl download <pod>:/path/to/file"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl cp <pod>:/path/to/file ./local copies files from pod to local",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-6",
      "categorySlug": "kubectl-essentials-drills",
      "question": "See all events sorted by timestamp?",
      "options": [
        "kubectl get events --all-namespaces",
        "kubectl get events --sort-by='.lastTimestamp'",
        "kubectl events --sorted",
        "kubectl list events --time"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl get events --sort-by='.lastTimestamp' shows events in time order",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "kubectl-essentials-drills-7",
      "categorySlug": "kubectl-essentials-drills",
      "question": "Execute command in a specific container of a multi-container pod?",
      "options": [
        "kubectl exec <pod> -c <container> -- <command>",
        "kubectl run <pod> --container <container> <command>",
        "kubectl exec <pod>/<container> <command>",
        "kubectl shell <pod> <container> <command>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl exec <pod> -c <container> -- <command> targets specific container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-0",
      "categorySlug": "pod-debugging-drills",
      "question": "Pod stuck in 'Pending'. First check?",
      "options": [
        "kubectl logs <pod>",
        "kubectl describe pod <pod> | grep -A5 Events",
        "kubectl get pod <pod> -o yaml",
        "kubectl exec <pod> -- ps"
      ],
      "correctAnswer": 1,
      "explanation": "describe pod shows Events section with scheduling failures, resource issues, or PVC problems",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-1",
      "categorySlug": "pod-debugging-drills",
      "question": "Pod in 'ImagePullBackOff'. Quick fixes?",
      "options": [
        "Just wait, it will resolve",
        "Check image name, registry auth (imagePullSecrets), network access to registry",
        "Restart kubelet",
        "Delete the pod"
      ],
      "correctAnswer": 1,
      "explanation": "ImagePullBackOff: verify image:tag exists, imagePullSecrets configured, registry accessible",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-2",
      "categorySlug": "pod-debugging-drills",
      "question": "Pod keeps restarting. Where to look for crash reason?",
      "options": [
        "kubectl logs <pod> --previous",
        "kubectl describe node",
        "kubectl get events",
        "Only current logs"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl logs <pod> --previous shows logs from the last crashed container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-3",
      "categorySlug": "pod-debugging-drills",
      "question": "OOMKilled pod. What to adjust?",
      "options": [
        "CPU requests",
        "Memory limits and requests",
        "Storage size",
        "Network policy"
      ],
      "correctAnswer": 1,
      "explanation": "OOMKilled = Out Of Memory. Increase memory limits/requests in pod spec",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-4",
      "categorySlug": "pod-debugging-drills",
      "question": "Pod can't reach another service. Debug sequence?",
      "options": [
        "1) Check service exists 2) Verify endpoints 3) Test DNS 4) Check network policies",
        "Just restart both pods",
        "Only check logs",
        "Recreate the service"
      ],
      "correctAnswer": 0,
      "explanation": "Systematic: Service exists \u2192 Endpoints populated \u2192 DNS resolves \u2192 NetworkPolicy allows",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-5",
      "categorySlug": "pod-debugging-drills",
      "question": "Debug DNS from inside a pod?",
      "options": [
        "kubectl exec <pod> -- nslookup <service>",
        "kubectl dns <service>",
        "kubectl resolve <service>",
        "Not possible"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl exec <pod> -- nslookup <service>.<namespace>.svc.cluster.local",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "pod-debugging-drills-6",
      "categorySlug": "pod-debugging-drills",
      "question": "Pod has no shell. How to debug?",
      "options": [
        "Can't debug without shell",
        "kubectl debug <pod> --image=busybox --target=<container>",
        "Only check logs",
        "Delete and recreate"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl debug creates ephemeral debug container with tools attached to pod",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-0",
      "categorySlug": "resource-management-drills",
      "question": "Set memory request=256Mi, limit=512Mi via kubectl?",
      "options": [
        "kubectl set resources deployment <name> --requests=memory=256Mi --limits=memory=512Mi",
        "kubectl resources deployment <name> memory=256Mi:512Mi",
        "kubectl update deployment <name> --memory 256Mi-512Mi",
        "kubectl memory deployment <name> 256Mi 512Mi"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl set resources deployment <name> --requests=memory=256Mi --limits=memory=512Mi",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-1",
      "categorySlug": "resource-management-drills",
      "question": "View actual resource usage vs requests/limits?",
      "options": [
        "kubectl describe pod",
        "kubectl top pod <pod> && kubectl get pod <pod> -o yaml | grep -A4 resources",
        "kubectl stats",
        "kubectl monitor"
      ],
      "correctAnswer": 1,
      "explanation": "Compare kubectl top (actual usage) with pod spec resources (requests/limits)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-2",
      "categorySlug": "resource-management-drills",
      "question": "Pod evicted. Most likely reason?",
      "options": [
        "CPU too high",
        "Node disk pressure or memory pressure",
        "Network issues",
        "Wrong labels"
      ],
      "correctAnswer": 1,
      "explanation": "Eviction happens when node has disk/memory pressure. Check node conditions",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-3",
      "categorySlug": "resource-management-drills",
      "question": "HPA not scaling. First check?",
      "options": [
        "kubectl get hpa <name> - check metrics and targets",
        "Restart pods",
        "Increase replicas manually",
        "Check logs"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl get hpa shows TARGETS (current/target) and metrics availability",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-4",
      "categorySlug": "resource-management-drills",
      "question": "Set QoS class to 'Guaranteed'?",
      "options": [
        "Set priority: high",
        "Set requests = limits for all containers",
        "Use guaranteed: true label",
        "Set qosClass: Guaranteed"
      ],
      "correctAnswer": 1,
      "explanation": "QoS Guaranteed requires requests = limits for CPU and memory on all containers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "resource-management-drills-5",
      "categorySlug": "resource-management-drills",
      "question": "Find pods using most CPU in namespace?",
      "options": [
        "kubectl top pods --sort-by=cpu",
        "kubectl top pods | sort -k2 -rn",
        "kubectl get pods --sort-by='.status.cpu'",
        "kubectl cpu-usage pods"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl top pods | sort -k2 -rn sorts by CPU column (no built-in sort flag)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-0",
      "categorySlug": "configmap-secret-drills",
      "question": "Create ConfigMap from file?",
      "options": [
        "kubectl create configmap <name> --from-file=<path>",
        "kubectl configmap create <name> <file>",
        "kubectl add configmap <name> --file <path>",
        "kubectl make configmap <name> <file>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl create configmap <name> --from-file=<path> or --from-literal=key=value",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-1",
      "categorySlug": "configmap-secret-drills",
      "question": "Create Secret for Docker registry?",
      "options": [
        "kubectl create secret docker <name>",
        "kubectl create secret docker-registry <name> --docker-username=<> --docker-password=<> --docker-server=<>",
        "kubectl secret registry <name>",
        "kubectl add docker-secret <name>"
      ],
      "correctAnswer": 1,
      "explanation": "kubectl create secret docker-registry with --docker-username, --docker-password, --docker-server",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-2",
      "categorySlug": "configmap-secret-drills",
      "question": "Mount ConfigMap as environment variables?",
      "options": [
        "envFrom: configMapRef: name: <configmap>",
        "env: configMap: <name>",
        "environment: fromConfigMap: <name>",
        "useConfigMap: <name>"
      ],
      "correctAnswer": 0,
      "explanation": "envFrom with configMapRef loads all keys as env vars",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-3",
      "categorySlug": "configmap-secret-drills",
      "question": "Update ConfigMap without pod restart?",
      "options": [
        "Not possible",
        "Mount as volume, implement file watch in app",
        "Set autoReload: true",
        "Use updatePolicy: auto"
      ],
      "correctAnswer": 1,
      "explanation": "Mount ConfigMap as volume (not env), implement file watcher in application",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-4",
      "categorySlug": "configmap-secret-drills",
      "question": "Decode base64 secret value?",
      "options": [
        "kubectl get secret <name> -o jsonpath='{.data.<key>}' | base64 -d",
        "kubectl decode secret <name>",
        "kubectl get secret <name> --decode",
        "kubectl secret decode <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl get secret <name> -o jsonpath='{.data.KEY}' | base64 -d",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "configmap-secret-drills-5",
      "categorySlug": "configmap-secret-drills",
      "question": "List all secrets used by a pod?",
      "options": [
        "kubectl describe pod <pod> | grep -i secret",
        "kubectl get pod <pod> --show-secrets",
        "kubectl secrets pod <pod>",
        "kubectl list secrets --pod <pod>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl describe pod <pod> | grep -i secret shows mounted secrets and imagePullSecrets",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-0",
      "categorySlug": "k8s-networking-drills",
      "question": "Expose deployment as ClusterIP service?",
      "options": [
        "kubectl expose deployment <name> --port=80 --target-port=8080",
        "kubectl create service <name> --deployment <name>",
        "kubectl service create <name>",
        "kubectl add service <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl expose deployment <name> --port=80 --target-port=8080 creates ClusterIP by default",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-1",
      "categorySlug": "k8s-networking-drills",
      "question": "Test service connectivity from inside cluster?",
      "options": [
        "kubectl run test --rm -it --image=busybox -- wget -O- <service>:<port>",
        "kubectl test service <name>",
        "kubectl curl <service>",
        "kubectl ping service <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl run with --rm -it creates temporary pod for testing",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-2",
      "categorySlug": "k8s-networking-drills",
      "question": "Service has no endpoints. Likely cause?",
      "options": [
        "Service deleted",
        "Pod labels don't match service selector",
        "Network policy blocking",
        "DNS failure"
      ],
      "correctAnswer": 1,
      "explanation": "No endpoints = no pods match selector. Check service selector vs pod labels",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-3",
      "categorySlug": "k8s-networking-drills",
      "question": "Change service from ClusterIP to LoadBalancer?",
      "options": [
        "kubectl patch service <name> -p '{\"spec\":{\"type\":\"LoadBalancer\"}}'",
        "kubectl convert service <name> --type LoadBalancer",
        "kubectl change service <name> LoadBalancer",
        "Must recreate service"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl patch service <name> -p '{\"spec\":{\"type\":\"LoadBalancer\"}}' changes type",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-4",
      "categorySlug": "k8s-networking-drills",
      "question": "Debug Ingress not routing traffic?",
      "options": [
        "1) Check Ingress rules 2) Verify backend service/port 3) Check Ingress controller logs 4) Test service directly",
        "Just restart ingress controller",
        "Delete and recreate",
        "Check pod logs only"
      ],
      "correctAnswer": 0,
      "explanation": "Systematic: Ingress rules \u2192 Backend service exists \u2192 Controller logs \u2192 Service works",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "k8s-networking-drills-5",
      "categorySlug": "k8s-networking-drills",
      "question": "Port-forward to a service?",
      "options": [
        "kubectl port-forward service/<name> 8080:80",
        "kubectl forward <service> 8080:80",
        "kubectl tunnel service <name>",
        "kubectl proxy service <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl port-forward service/<name> LOCAL:REMOTE forwards to service",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-0",
      "categorySlug": "rbac-security-drills",
      "question": "Check if you can create deployments in namespace?",
      "options": [
        "kubectl auth can-i create deployments -n <namespace>",
        "kubectl check permissions deployments",
        "kubectl rbac check deployments",
        "kubectl test create deployment"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl auth can-i <verb> <resource> -n <namespace> checks permissions",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-1",
      "categorySlug": "rbac-security-drills",
      "question": "Create ServiceAccount with role binding?",
      "options": [
        "kubectl create sa <name> && kubectl create rolebinding <name> --serviceaccount=<ns>:<sa> --clusterrole=<role>",
        "kubectl create service-account <name> --with-role <role>",
        "kubectl sa create <name> --role <role>",
        "kubectl make serviceaccount <name>"
      ],
      "correctAnswer": 0,
      "explanation": "Create SA first, then create rolebinding to link SA to role",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-2",
      "categorySlug": "rbac-security-drills",
      "question": "Pod security context for non-root?",
      "options": [
        "securityContext: runAsNonRoot: true, runAsUser: 1000",
        "security: nonRoot: true",
        "podSecurity: user: 1000",
        "nonRoot: enabled"
      ],
      "correctAnswer": 0,
      "explanation": "securityContext with runAsNonRoot: true and runAsUser: 1000 (or other non-0 UID)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-3",
      "categorySlug": "rbac-security-drills",
      "question": "List all cluster roles with 'create pods' permission?",
      "options": [
        "kubectl get clusterroles -o yaml | grep -B5 'pods' | grep -B5 'create'",
        "kubectl rbac list --permission 'create pods'",
        "kubectl find roles --verb create --resource pods",
        "Not easily possible"
      ],
      "correctAnswer": 0,
      "explanation": "Parse clusterroles YAML to find rules with pods resource and create verb",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-4",
      "categorySlug": "rbac-security-drills",
      "question": "NetworkPolicy to allow only from specific namespace?",
      "options": [
        "ingress: from: namespaceSelector: matchLabels: name: <namespace>",
        "allow: namespace: <name>",
        "ingress: allowFrom: <namespace>",
        "network: from: <namespace>"
      ],
      "correctAnswer": 0,
      "explanation": "NetworkPolicy ingress rule with namespaceSelector matches namespace labels",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "rbac-security-drills-5",
      "categorySlug": "rbac-security-drills",
      "question": "Pod can't pull image from private registry. Fix?",
      "options": [
        "Add imagePullSecrets to pod spec referencing docker-registry secret",
        "Make registry public",
        "Add credentials to pod directly",
        "Use public images only"
      ],
      "correctAnswer": 0,
      "explanation": "imagePullSecrets in pod spec references secret created with docker-registry type",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-0",
      "categorySlug": "storage-drills",
      "question": "PVC stuck in 'Pending'. Common causes?",
      "options": [
        "No PV available matching size/storageClass/accessMode",
        "Too many PVCs",
        "Node offline",
        "Pod not running"
      ],
      "correctAnswer": 0,
      "explanation": "PVC Pending: no PV matches requirements (size, storageClass, accessMode)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-1",
      "categorySlug": "storage-drills",
      "question": "Resize PVC from 10Gi to 20Gi?",
      "options": [
        "kubectl patch pvc <name> -p '{\"spec\":{\"resources\":{\"requests\":{\"storage\":\"20Gi\"}}}}'",
        "kubectl resize pvc <name> 20Gi",
        "kubectl expand pvc <name> --size 20Gi",
        "PVCs cannot be resized"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl patch pvc to update storage request (storageClass must allow expansion)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-2",
      "categorySlug": "storage-drills",
      "question": "Mount same PVC in multiple pods?",
      "options": [
        "Only if accessMode is ReadWriteMany or ReadOnlyMany",
        "Always possible",
        "Never possible",
        "Only in same node"
      ],
      "correctAnswer": 0,
      "explanation": "Multi-pod access requires ReadWriteMany (RWX) or ReadOnlyMany (ROX) accessMode",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-3",
      "categorySlug": "storage-drills",
      "question": "Emergency: Pod lost data after restart. Prevention?",
      "options": [
        "Use emptyDir",
        "Use PersistentVolume instead of emptyDir",
        "Set retainPolicy",
        "Use hostPath"
      ],
      "correctAnswer": 1,
      "explanation": "emptyDir is ephemeral. Use PersistentVolume for data that survives pod restart",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-4",
      "categorySlug": "storage-drills",
      "question": "Check which pod is using a PVC?",
      "options": [
        "kubectl describe pvc <name> | grep 'Used By'",
        "kubectl get pods --field-selector spec.volumes.persistentVolumeClaim.claimName=<pvc>",
        "kubectl pvc users <name>",
        "kubectl list pods --pvc <name>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl describe pvc shows 'Used By' field with pod name",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "storage-drills-5",
      "categorySlug": "storage-drills",
      "question": "StatefulSet volume claim template?",
      "options": [
        "volumeClaimTemplates: - metadata: name: data spec: accessModes: [ReadWriteOnce] resources: requests: storage: 1Gi",
        "volumes: - persistentVolumeClaim: template: true",
        "pvcs: - template: name: data size: 1Gi",
        "storage: template: 1Gi"
      ],
      "correctAnswer": 0,
      "explanation": "StatefulSet volumeClaimTemplates creates PVC per pod with stable storage",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-0",
      "categorySlug": "cluster-ops-drills",
      "question": "Safely drain node for maintenance?",
      "options": [
        "kubectl drain <node> --ignore-daemonsets --delete-emptydir-data",
        "kubectl stop node <node>",
        "kubectl maintenance <node>",
        "kubectl pause node <node>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl drain evacuates pods, use --ignore-daemonsets and --delete-emptydir-data flags",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-1",
      "categorySlug": "cluster-ops-drills",
      "question": "Node NotReady. First checks?",
      "options": [
        "kubectl describe node <node> | grep -i condition && check kubelet logs",
        "Restart all pods",
        "Delete node",
        "Add more nodes"
      ],
      "correctAnswer": 0,
      "explanation": "Check node conditions and kubelet logs: journalctl -u kubelet on the node",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-2",
      "categorySlug": "cluster-ops-drills",
      "question": "Prevent pods scheduling on specific node?",
      "options": [
        "kubectl cordon <node>",
        "kubectl block <node>",
        "kubectl disable <node>",
        "kubectl stop-schedule <node>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl cordon <node> marks node unschedulable, existing pods keep running",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-3",
      "categorySlug": "cluster-ops-drills",
      "question": "Add label to node?",
      "options": [
        "kubectl label node <node> <key>=<value>",
        "kubectl tag node <node> <key>=<value>",
        "kubectl annotate node <node> <key>=<value>",
        "kubectl set label node <node>"
      ],
      "correctAnswer": 0,
      "explanation": "kubectl label node <node> key=value adds or updates node label",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-4",
      "categorySlug": "cluster-ops-drills",
      "question": "Schedule pod on specific node?",
      "options": [
        "nodeSelector in pod spec with node labels",
        "nodeName: <node> in pod spec",
        "Both A and B work",
        "targetNode: <node>"
      ],
      "correctAnswer": 2,
      "explanation": "nodeSelector matches labels, nodeName forces specific node (bypasses scheduler)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-5",
      "categorySlug": "cluster-ops-drills",
      "question": "Check cluster component health?",
      "options": [
        "kubectl get componentstatuses",
        "kubectl cluster-info",
        "kubectl get pods -n kube-system",
        "All of the above"
      ],
      "correctAnswer": 3,
      "explanation": "componentstatuses (deprecated but works), cluster-info, and kube-system pods all show health",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cluster-ops-drills-6",
      "categorySlug": "cluster-ops-drills",
      "question": "Find which pods would be evicted if node fails?",
      "options": [
        "Pods without controller (ReplicaSet/Deployment/StatefulSet/DaemonSet)",
        "All pods on the node",
        "Only stateless pods",
        "Pods with local storage"
      ],
      "correctAnswer": 0,
      "explanation": "Bare pods (no controller) won't be recreated. Controlled pods get rescheduled",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-0",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Reduce Docker image size - which strategy is MOST effective?",
      "options": [
        "Use alpine base images",
        "Multi-stage builds with minimal final stage",
        "Delete files after installing",
        "Compress files"
      ],
      "correctAnswer": 1,
      "explanation": "Multi-stage builds copy only needed artifacts to minimal final stage, biggest size reduction",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-1",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Dockerfile layer caching - what breaks the cache?",
      "options": [
        "Adding a comment",
        "Changing any file that gets COPYed",
        "Running the build again",
        "Using --no-cache flag"
      ],
      "correctAnswer": 1,
      "explanation": "Changes to copied files invalidate cache from that layer onward. Order matters!",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-2",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Best practice for apt-get in Dockerfile?",
      "options": [
        "RUN apt-get update && apt-get install -y package && rm -rf /var/lib/apt/lists/*",
        "RUN apt-get update\\nRUN apt-get install package",
        "RUN apt-get install package",
        "RUN sudo apt-get install package"
      ],
      "correctAnswer": 0,
      "explanation": "Single layer, update + install + cleanup to minimize size and avoid stale cache",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-3",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Optimize COPY operations for better caching?",
      "options": [
        "COPY . . at the beginning",
        "Copy requirements first, install deps, then copy source code",
        "Multiple COPY commands for each file",
        "COPY everything in one command"
      ],
      "correctAnswer": 1,
      "explanation": "Copy dependency files first, install, then copy source. Dependencies change less often",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-4",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Security: Don't run as root. Correct Dockerfile snippet?",
      "options": [
        "USER nonroot",
        "RUN useradd -m appuser && USER appuser",
        "RUN adduser --disabled-password --gecos '' appuser && USER appuser",
        "Both B and C are valid"
      ],
      "correctAnswer": 3,
      "explanation": "Create non-root user then switch to it. Both useradd and adduser work",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-5",
      "categorySlug": "dockerfile-optimization-drills",
      "question": "Multi-stage build for Go app - final stage FROM?",
      "options": [
        "FROM golang:alpine",
        "FROM alpine",
        "FROM scratch",
        "FROM ubuntu"
      ],
      "correctAnswer": 2,
      "explanation": "FROM scratch for smallest possible image with static Go binary (no OS needed)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "dockerfile-optimization-drills-6",
      "categorySlug": "dockerfile-optimization-drills",
      "question": ".dockerignore should include?",
      "options": [
        ".git, node_modules, .env, **/*.log, .DS_Store",
        "Only .git",
        "All source files",
        "Nothing, include everything"
      ],
      "correctAnswer": 0,
      "explanation": "Exclude VCS, dependencies, secrets, logs, OS files to reduce context size",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-0",
      "categorySlug": "docker-commands-drills",
      "question": "Remove all stopped containers?",
      "options": [
        "docker rm $(docker ps -aq)",
        "docker container prune",
        "docker clean containers",
        "docker delete --all"
      ],
      "correctAnswer": 1,
      "explanation": "docker container prune removes all stopped containers safely",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-1",
      "categorySlug": "docker-commands-drills",
      "question": "See real-time container resource usage?",
      "options": [
        "docker stats",
        "docker top",
        "docker monitor",
        "docker resources"
      ],
      "correctAnswer": 0,
      "explanation": "docker stats shows live CPU, memory, network, disk I/O usage",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-2",
      "categorySlug": "docker-commands-drills",
      "question": "Copy file from running container?",
      "options": [
        "docker cp <container>:/path/to/file ./local",
        "docker export <container>:/path/to/file",
        "docker get <container> /path/to/file",
        "docker pull <container>:/path/to/file"
      ],
      "correctAnswer": 0,
      "explanation": "docker cp works bidirectionally between container and host",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-3",
      "categorySlug": "docker-commands-drills",
      "question": "Debug: See what changed in container filesystem?",
      "options": [
        "docker diff <container>",
        "docker changes <container>",
        "docker inspect <container>",
        "docker history <container>"
      ],
      "correctAnswer": 0,
      "explanation": "docker diff shows A(dded)/C(hanged)/D(eleted) files vs image",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-4",
      "categorySlug": "docker-commands-drills",
      "question": "Run container with memory limit 512MB?",
      "options": [
        "docker run -m 512m <image>",
        "docker run --memory=512 <image>",
        "docker run --limit-memory=512MB <image>",
        "docker run --max-mem=512 <image>"
      ],
      "correctAnswer": 0,
      "explanation": "docker run -m 512m or --memory=512m sets memory limit",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-5",
      "categorySlug": "docker-commands-drills",
      "question": "See layers and size of an image?",
      "options": [
        "docker history <image>",
        "docker layers <image>",
        "docker inspect --layers <image>",
        "docker size <image>"
      ],
      "correctAnswer": 0,
      "explanation": "docker history shows each layer, command, and size",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-commands-drills-6",
      "categorySlug": "docker-commands-drills",
      "question": "Clean up everything (containers, images, volumes, networks)?",
      "options": [
        "docker system prune -a --volumes",
        "docker clean --all",
        "docker remove --everything",
        "docker purge"
      ],
      "correctAnswer": 0,
      "explanation": "docker system prune -a --volumes removes all unused resources",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-0",
      "categorySlug": "container-debugging-drills",
      "question": "Container exits immediately. First check?",
      "options": [
        "docker logs <container>",
        "docker inspect <container>",
        "docker top <container>",
        "docker stats <container>"
      ],
      "correctAnswer": 0,
      "explanation": "docker logs shows stdout/stderr to see why it exited",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-1",
      "categorySlug": "container-debugging-drills",
      "question": "Container running but app not responding. Debug inside?",
      "options": [
        "docker exec -it <container> /bin/sh",
        "docker attach <container>",
        "docker debug <container>",
        "docker ssh <container>"
      ],
      "correctAnswer": 0,
      "explanation": "docker exec -it for interactive shell (use /bin/bash if available)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-2",
      "categorySlug": "container-debugging-drills",
      "question": "Container can't connect to another container. Check?",
      "options": [
        "docker network ls && docker inspect <container> | grep -i network",
        "Check firewall rules",
        "Restart Docker",
        "Check host network"
      ],
      "correctAnswer": 0,
      "explanation": "Verify both containers on same network, check network isolation",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-3",
      "categorySlug": "container-debugging-drills",
      "question": "OOMKilled container. See memory limit?",
      "options": [
        "docker inspect <container> | grep -i memory",
        "docker stats --no-stream <container>",
        "Both A and B",
        "docker memory <container>"
      ],
      "correctAnswer": 2,
      "explanation": "inspect shows configured limits, stats shows current usage vs limit",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-4",
      "categorySlug": "container-debugging-drills",
      "question": "Debug container that has no shell?",
      "options": [
        "Can't debug without shell",
        "docker run --rm -it --pid=container:<container> --net=container:<container> nicolaka/netshoot",
        "Copy shell binary into container",
        "Rebuild with shell"
      ],
      "correctAnswer": 1,
      "explanation": "Run debug container sharing namespaces with target container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-5",
      "categorySlug": "container-debugging-drills",
      "question": "Container storage full. Find large files?",
      "options": [
        "docker exec <container> du -sh /* | sort -h",
        "docker exec <container> find / -size +100M",
        "Both A and B useful",
        "docker storage <container>"
      ],
      "correctAnswer": 2,
      "explanation": "du for directory sizes, find for specific large files",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "container-debugging-drills-6",
      "categorySlug": "container-debugging-drills",
      "question": "Permission denied errors in container?",
      "options": [
        "Check USER in Dockerfile and file ownership",
        "Run as root with --user root",
        "Check security options and AppArmor/SELinux",
        "All of the above"
      ],
      "correctAnswer": 3,
      "explanation": "Could be user mismatch, security policies, or file permissions",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-0",
      "categorySlug": "docker-compose-drills",
      "question": "Scale service to 3 replicas?",
      "options": [
        "docker-compose up --scale web=3",
        "docker-compose scale web=3",
        "Both A and B work",
        "docker-compose replicate web 3"
      ],
      "correctAnswer": 2,
      "explanation": "Both --scale flag with up and scale command work",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-1",
      "categorySlug": "docker-compose-drills",
      "question": "See logs from all services, following?",
      "options": [
        "docker-compose logs -f",
        "docker-compose logs --follow",
        "docker-compose logs --tail",
        "Both A and B"
      ],
      "correctAnswer": 3,
      "explanation": "docker-compose logs -f or --follow for real-time logs from all services",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-2",
      "categorySlug": "docker-compose-drills",
      "question": "Rebuild images before starting?",
      "options": [
        "docker-compose up --build",
        "docker-compose build && docker-compose up",
        "Both work",
        "docker-compose rebuild"
      ],
      "correctAnswer": 2,
      "explanation": "Both --build flag and separate build command work",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-3",
      "categorySlug": "docker-compose-drills",
      "question": "Environment variable precedence?",
      "options": [
        "Shell env > .env file > compose file",
        ".env file > shell env > compose file",
        "compose file > .env file > shell env",
        "All equal precedence"
      ],
      "correctAnswer": 0,
      "explanation": "Shell environment overrides .env file, which overrides compose file defaults",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-4",
      "categorySlug": "docker-compose-drills",
      "question": "Wait for database before starting app?",
      "options": [
        "depends_on with condition: service_healthy",
        "Just use depends_on",
        "Add sleep in app startup",
        "Use wait-for-it.sh or dockerize"
      ],
      "correctAnswer": 3,
      "explanation": "depends_on doesn't wait for ready state. Use wait-for-it.sh or dockerize tools",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-5",
      "categorySlug": "docker-compose-drills",
      "question": "Override compose file for production?",
      "options": [
        "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up",
        "docker-compose --env production up",
        "docker-compose up --production",
        "Edit the main file"
      ],
      "correctAnswer": 0,
      "explanation": "Multiple -f flags, later files override earlier ones",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-compose-drills-6",
      "categorySlug": "docker-compose-drills",
      "question": "Share code with container for development?",
      "options": [
        "volumes: - .:/app",
        "volumes: - type: bind source: . target: /app",
        "Both A and B work",
        "COPY in Dockerfile"
      ],
      "correctAnswer": 2,
      "explanation": "Both short and long syntax work for bind mounts",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-0",
      "categorySlug": "registry-image-drills",
      "question": "Push to private registry?",
      "options": [
        "docker tag <image> <registry>/<image>:<tag> && docker push <registry>/<image>:<tag>",
        "docker push <image> --registry <registry>",
        "docker upload <image> to <registry>",
        "docker publish <image>"
      ],
      "correctAnswer": 0,
      "explanation": "Tag with registry URL first, then push the tagged image",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-1",
      "categorySlug": "registry-image-drills",
      "question": "Login to Docker registry?",
      "options": [
        "docker login <registry> -u <user> -p <pass>",
        "docker auth <registry>",
        "docker connect <registry>",
        "docker registry login"
      ],
      "correctAnswer": 0,
      "explanation": "docker login with optional registry URL (defaults to Docker Hub)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-2",
      "categorySlug": "registry-image-drills",
      "question": "Save image to tar file?",
      "options": [
        "docker save <image> -o image.tar",
        "docker export <image> > image.tar",
        "docker backup <image>",
        "docker archive <image>"
      ],
      "correctAnswer": 0,
      "explanation": "docker save for images (with layers), docker export for containers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-3",
      "categorySlug": "registry-image-drills",
      "question": "Scan image for vulnerabilities?",
      "options": [
        "docker scan <image>",
        "docker scout cves <image>",
        "trivy image <image>",
        "All are valid tools"
      ],
      "correctAnswer": 3,
      "explanation": "docker scan (Snyk), docker scout, trivy all scan for vulnerabilities",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-4",
      "categorySlug": "registry-image-drills",
      "question": "Multi-architecture image (ARM + x86)?",
      "options": [
        "docker buildx build --platform linux/amd64,linux/arm64 -t <image> --push .",
        "docker build --arch all",
        "Build separately and push both",
        "Not possible"
      ],
      "correctAnswer": 0,
      "explanation": "docker buildx with --platform flag builds multi-arch manifests",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-5",
      "categorySlug": "registry-image-drills",
      "question": "Pull image without running?",
      "options": [
        "docker pull <image>",
        "docker download <image>",
        "docker get <image>",
        "docker fetch <image>"
      ],
      "correctAnswer": 0,
      "explanation": "docker pull downloads image layers without creating container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "registry-image-drills-6",
      "categorySlug": "registry-image-drills",
      "question": "List all image tags in registry?",
      "options": [
        "curl -s https://<registry>/v2/<image>/tags/list",
        "docker search <registry>/<image>",
        "docker tags <registry>/<image>",
        "docker list tags"
      ],
      "correctAnswer": 0,
      "explanation": "Registry API v2 endpoint lists all tags for an image",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-0",
      "categorySlug": "docker-security-drills",
      "question": "Run container with read-only filesystem?",
      "options": [
        "docker run --read-only <image>",
        "docker run --ro <image>",
        "docker run --readonly-root <image>",
        "docker run --immutable <image>"
      ],
      "correctAnswer": 0,
      "explanation": "docker run --read-only prevents writes except to explicitly mounted volumes",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-1",
      "categorySlug": "docker-security-drills",
      "question": "Drop all capabilities except NET_BIND_SERVICE?",
      "options": [
        "docker run --cap-drop=ALL --cap-add=NET_BIND_SERVICE <image>",
        "docker run --capabilities=NET_BIND_SERVICE <image>",
        "docker run --only-cap=NET_BIND_SERVICE <image>",
        "docker run --security=minimal <image>"
      ],
      "correctAnswer": 0,
      "explanation": "Drop ALL first, then add only needed capabilities",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-2",
      "categorySlug": "docker-security-drills",
      "question": "Scan Dockerfile for security issues?",
      "options": [
        "hadolint Dockerfile",
        "docker lint Dockerfile",
        "dockerfile-lint",
        "docker scan --file Dockerfile"
      ],
      "correctAnswer": 0,
      "explanation": "hadolint checks best practices and security issues in Dockerfiles",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-3",
      "categorySlug": "docker-security-drills",
      "question": "Prevent container from gaining new privileges?",
      "options": [
        "docker run --security-opt=no-new-privileges <image>",
        "docker run --no-privilege-escalation <image>",
        "docker run --secure <image>",
        "docker run --locked <image>"
      ],
      "correctAnswer": 0,
      "explanation": "--security-opt=no-new-privileges prevents privilege escalation",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-4",
      "categorySlug": "docker-security-drills",
      "question": "Secret management best practice?",
      "options": [
        "Never in Dockerfile, use runtime secrets or build args for build-time",
        "Store in environment variables in Dockerfile",
        "Hardcode in image",
        "Use .env file in image"
      ],
      "correctAnswer": 0,
      "explanation": "Secrets via runtime mounting or secret management, build args for build-only secrets",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-5",
      "categorySlug": "docker-security-drills",
      "question": "Network isolation between containers?",
      "options": [
        "Use custom bridge networks, not default bridge",
        "Use --network=none for complete isolation",
        "Use --icc=false on custom bridge",
        "All are valid approaches"
      ],
      "correctAnswer": 3,
      "explanation": "Custom networks for groups, none for isolation, icc=false prevents inter-container comm",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-security-drills-6",
      "categorySlug": "docker-security-drills",
      "question": "Limit container CPU to 0.5 cores?",
      "options": [
        "docker run --cpus=0.5 <image>",
        "docker run --cpu-quota=50000 <image>",
        "Both A and B work",
        "docker run --cpu-limit=0.5 <image>"
      ],
      "correctAnswer": 2,
      "explanation": "--cpus=0.5 or --cpu-quota=50000 (with default period of 100000)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-0",
      "categorySlug": "docker-networking-drills",
      "question": "Create custom bridge network?",
      "options": [
        "docker network create --driver bridge mynet",
        "docker network add mynet",
        "docker create network mynet",
        "docker network new mynet"
      ],
      "correctAnswer": 0,
      "explanation": "docker network create with --driver bridge (default) or other drivers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-1",
      "categorySlug": "docker-networking-drills",
      "question": "Connect running container to network?",
      "options": [
        "docker network connect <network> <container>",
        "docker attach <container> to <network>",
        "docker network add <container> <network>",
        "Must restart container"
      ],
      "correctAnswer": 0,
      "explanation": "docker network connect adds network interface to running container",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-2",
      "categorySlug": "docker-networking-drills",
      "question": "Container DNS resolution in custom network?",
      "options": [
        "Automatic by container name",
        "Must use --link",
        "Must configure /etc/hosts",
        "Not supported"
      ],
      "correctAnswer": 0,
      "explanation": "Custom networks provide automatic DNS resolution by container name",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-3",
      "categorySlug": "docker-networking-drills",
      "question": "Expose container port to specific host IP?",
      "options": [
        "docker run -p 127.0.0.1:8080:80 <image>",
        "docker run -p 8080:80 --ip 127.0.0.1 <image>",
        "docker run --expose 127.0.0.1:8080:80 <image>",
        "docker run --bind 127.0.0.1:8080:80 <image>"
      ],
      "correctAnswer": 0,
      "explanation": "-p <host-ip>:<host-port>:<container-port> binds to specific IP",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-4",
      "categorySlug": "docker-networking-drills",
      "question": "Container in 'host' network mode means?",
      "options": [
        "Container shares host's network namespace",
        "Container is isolated from network",
        "Container gets public IP",
        "Container is in DMZ"
      ],
      "correctAnswer": 0,
      "explanation": "--network=host removes network isolation, uses host's network directly",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-5",
      "categorySlug": "docker-networking-drills",
      "question": "Debug network connectivity between containers?",
      "options": [
        "docker exec <container> ping <other-container>",
        "docker network inspect <network>",
        "docker exec <container> nslookup <other-container>",
        "All are useful"
      ],
      "correctAnswer": 3,
      "explanation": "ping tests connectivity, inspect shows config, nslookup tests DNS",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "docker-networking-drills-6",
      "categorySlug": "docker-networking-drills",
      "question": "Macvlan network use case?",
      "options": [
        "Container needs to appear as physical host on network",
        "Better performance",
        "Default for all containers",
        "Security isolation"
      ],
      "correctAnswer": 0,
      "explanation": "Macvlan gives container its own MAC address on physical network",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-0",
      "categorySlug": "sql-optimization-drills",
      "question": "Query running slow. First thing to check?",
      "options": [
        "EXPLAIN or EXPLAIN ANALYZE the query",
        "Add more RAM",
        "Restart database",
        "Rewrite in NoSQL"
      ],
      "correctAnswer": 0,
      "explanation": "EXPLAIN shows query plan, EXPLAIN ANALYZE shows actual execution stats",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-1",
      "categorySlug": "sql-optimization-drills",
      "question": "Index for WHERE user_id = ? AND created_at > ?",
      "options": [
        "INDEX (user_id)",
        "INDEX (created_at)",
        "INDEX (user_id, created_at)",
        "INDEX (created_at, user_id)"
      ],
      "correctAnswer": 2,
      "explanation": "Composite index with equality condition first, range condition second",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-2",
      "categorySlug": "sql-optimization-drills",
      "question": "N+1 query problem solution?",
      "options": [
        "Add more database connections",
        "Use JOIN or include/preload to fetch related data",
        "Cache everything",
        "Use NoSQL"
      ],
      "correctAnswer": 1,
      "explanation": "JOIN or ORM's include/preload fetches related data in single query",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-3",
      "categorySlug": "sql-optimization-drills",
      "question": "SELECT COUNT(*) is slow on large table. Alternative?",
      "options": [
        "Use approximate count from pg_stat_user_tables",
        "COUNT(1) instead",
        "COUNT(id)",
        "No alternative"
      ],
      "correctAnswer": 0,
      "explanation": "PostgreSQL: pg_stat_user_tables.n_live_tup gives approximate count instantly",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-4",
      "categorySlug": "sql-optimization-drills",
      "question": "Covering index means?",
      "options": [
        "Index on all columns",
        "Index includes all columns needed by query",
        "Primary key index",
        "Unique index"
      ],
      "correctAnswer": 1,
      "explanation": "Covering index contains all columns query needs, avoiding table lookup",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-5",
      "categorySlug": "sql-optimization-drills",
      "question": "VACUUM in PostgreSQL does what?",
      "options": [
        "Deletes data",
        "Reclaims storage from dead tuples and updates statistics",
        "Backs up database",
        "Cleans logs"
      ],
      "correctAnswer": 1,
      "explanation": "VACUUM reclaims space from deleted/updated rows and updates planner statistics",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-6",
      "categorySlug": "sql-optimization-drills",
      "question": "Optimize: SELECT * FROM orders WHERE status != 'cancelled'",
      "options": [
        "Add index on status",
        "Use status IN ('pending', 'completed') if those are only other values",
        "Partition table by status",
        "Both B and C might help"
      ],
      "correctAnswer": 3,
      "explanation": "!= often can't use index effectively. IN with specific values or partitioning helps",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-optimization-drills-7",
      "categorySlug": "sql-optimization-drills",
      "question": "Database connection pooling optimal size?",
      "options": [
        "connections = ((core_count * 2) + effective_spindle_count)",
        "As many as possible",
        "One per user",
        "Fixed at 100"
      ],
      "correctAnswer": 0,
      "explanation": "HikariCP formula: (CPU cores * 2) + disk spindles is good starting point",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-0",
      "categorySlug": "sql-advanced-drills",
      "question": "Get row number within each group?",
      "options": [
        "ROW_NUMBER() OVER (PARTITION BY group_col ORDER BY sort_col)",
        "GROUP BY with COUNT",
        "RANK() without OVER",
        "Subquery with COUNT"
      ],
      "correctAnswer": 0,
      "explanation": "ROW_NUMBER() with PARTITION BY gives row number per group",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-1",
      "categorySlug": "sql-advanced-drills",
      "question": "Recursive CTE syntax starts with?",
      "options": [
        "WITH RECURSIVE cte_name AS (",
        "RECURSIVE WITH cte_name AS (",
        "WITH cte_name RECURSIVE AS (",
        "CREATE RECURSIVE cte_name AS"
      ],
      "correctAnswer": 0,
      "explanation": "WITH RECURSIVE starts recursive Common Table Expression",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-2",
      "categorySlug": "sql-advanced-drills",
      "question": "Running total calculation?",
      "options": [
        "SUM(amount) OVER (ORDER BY date)",
        "SUM(amount) GROUP BY date",
        "TOTAL(amount)",
        "Requires cursor"
      ],
      "correctAnswer": 0,
      "explanation": "SUM() OVER (ORDER BY date) creates running total window",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-3",
      "categorySlug": "sql-advanced-drills",
      "question": "Find gaps in sequence?",
      "options": [
        "Self LEFT JOIN with t1.id + 1 = t2.id WHERE t2.id IS NULL",
        "Use LAG() to compare with previous row",
        "Generate series and LEFT JOIN",
        "All approaches work"
      ],
      "correctAnswer": 3,
      "explanation": "Multiple methods: self-join, LAG/LEAD window functions, or generate_series",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-4",
      "categorySlug": "sql-advanced-drills",
      "question": "RANK() vs DENSE_RANK() difference?",
      "options": [
        "No difference",
        "RANK() leaves gaps after ties, DENSE_RANK() doesn't",
        "DENSE_RANK() is faster",
        "RANK() allows ties, DENSE_RANK() doesn't"
      ],
      "correctAnswer": 1,
      "explanation": "RANK: 1,2,2,4 (gap after tie), DENSE_RANK: 1,2,2,3 (no gap)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-5",
      "categorySlug": "sql-advanced-drills",
      "question": "Pivot rows to columns in PostgreSQL?",
      "options": [
        "PIVOT function",
        "crosstab() from tablefunc or conditional aggregation",
        "UNPIVOT",
        "Not possible"
      ],
      "correctAnswer": 1,
      "explanation": "PostgreSQL uses crosstab() extension or CASE with aggregation for pivot",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "sql-advanced-drills-6",
      "categorySlug": "sql-advanced-drills",
      "question": "Get second highest salary?",
      "options": [
        "SELECT MAX(salary) FROM emp WHERE salary < (SELECT MAX(salary) FROM emp)",
        "SELECT salary FROM emp ORDER BY salary DESC LIMIT 1 OFFSET 1",
        "Use DENSE_RANK() = 2",
        "All work correctly"
      ],
      "correctAnswer": 3,
      "explanation": "Multiple approaches: subquery with MAX, LIMIT/OFFSET, or window function",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-0",
      "categorySlug": "database-transactions-drills",
      "question": "Prevent dirty reads but allow non-repeatable reads?",
      "options": [
        "READ UNCOMMITTED",
        "READ COMMITTED",
        "REPEATABLE READ",
        "SERIALIZABLE"
      ],
      "correctAnswer": 1,
      "explanation": "READ COMMITTED prevents dirty reads but allows non-repeatable reads",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-1",
      "categorySlug": "database-transactions-drills",
      "question": "Deadlock detection - PostgreSQL approach?",
      "options": [
        "Waits forever",
        "Automatic detection and kills one transaction",
        "Manual intervention required",
        "Prevents all locks"
      ],
      "correctAnswer": 1,
      "explanation": "PostgreSQL automatically detects deadlocks and aborts one transaction",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-2",
      "categorySlug": "database-transactions-drills",
      "question": "Optimistic vs Pessimistic locking?",
      "options": [
        "Optimistic uses version/timestamp, Pessimistic uses locks",
        "Both use locks",
        "Optimistic is always better",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "Optimistic: version check on update, Pessimistic: SELECT FOR UPDATE locks",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-3",
      "categorySlug": "database-transactions-drills",
      "question": "Two-phase commit coordinator failure handling?",
      "options": [
        "Transaction automatically commits",
        "Transaction automatically rolls back",
        "Participants must wait or use heuristic decision",
        "Data is lost"
      ],
      "correctAnswer": 2,
      "explanation": "Participants in prepared state must wait for coordinator or make heuristic decision",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-4",
      "categorySlug": "database-transactions-drills",
      "question": "MVCC in PostgreSQL means?",
      "options": [
        "Multiple Version Concurrency Control - readers don't block writers",
        "Main Version Control Center",
        "Memory Virtual Cache Control",
        "Multi-Value Column Constraint"
      ],
      "correctAnswer": 0,
      "explanation": "MVCC allows concurrent access by maintaining multiple versions of rows",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-5",
      "categorySlug": "database-transactions-drills",
      "question": "SELECT FOR UPDATE SKIP LOCKED use case?",
      "options": [
        "Read-only queries",
        "Job queue processing - grab next available job",
        "Counting rows",
        "Creating indexes"
      ],
      "correctAnswer": 1,
      "explanation": "SKIP LOCKED ideal for queue processing - skip already locked rows",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-transactions-drills-6",
      "categorySlug": "database-transactions-drills",
      "question": "Phantom reads prevented at which isolation level?",
      "options": [
        "READ UNCOMMITTED",
        "READ COMMITTED",
        "REPEATABLE READ (in some databases)",
        "SERIALIZABLE"
      ],
      "correctAnswer": 3,
      "explanation": "SERIALIZABLE prevents phantom reads in all databases",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-0",
      "categorySlug": "nosql-patterns-drills",
      "question": "MongoDB: Denormalization reason?",
      "options": [
        "Save space",
        "Reduce joins/lookups for better read performance",
        "Enforce constraints",
        "Improve write performance"
      ],
      "correctAnswer": 1,
      "explanation": "Denormalization embeds related data to avoid joins/multiple queries",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-1",
      "categorySlug": "nosql-patterns-drills",
      "question": "Redis: Implement rate limiting pattern?",
      "options": [
        "String with counter",
        "Sorted set with timestamp scores and sliding window",
        "List with LPUSH/LTRIM",
        "Both B and C work"
      ],
      "correctAnswer": 3,
      "explanation": "Sorted set for sliding window or list with fixed window both work",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-2",
      "categorySlug": "nosql-patterns-drills",
      "question": "Cassandra: Primary key (partition_key, clustering_key) determines?",
      "options": [
        "Partition placement and row ordering within partition",
        "Only uniqueness",
        "Only partition placement",
        "Index creation"
      ],
      "correctAnswer": 0,
      "explanation": "Partition key determines node placement, clustering key orders within partition",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-3",
      "categorySlug": "nosql-patterns-drills",
      "question": "MongoDB: Ensure write to majority of replicas?",
      "options": [
        "writeConcern: { w: 'majority' }",
        "durability: true",
        "replicate: all",
        "safe: true"
      ],
      "correctAnswer": 0,
      "explanation": "writeConcern with w: 'majority' ensures majority acknowledgment",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-4",
      "categorySlug": "nosql-patterns-drills",
      "question": "Redis persistence: RDB vs AOF?",
      "options": [
        "RDB: snapshots, AOF: append-only log",
        "Both are snapshots",
        "RDB: log, AOF: snapshots",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "RDB creates point-in-time snapshots, AOF logs every write operation",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-5",
      "categorySlug": "nosql-patterns-drills",
      "question": "DynamoDB: Hot partition problem solution?",
      "options": [
        "Add more RAM",
        "Use composite keys or add random suffix to distribute load",
        "Increase read units only",
        "Not solvable"
      ],
      "correctAnswer": 1,
      "explanation": "Composite keys or random suffixes distribute load across partitions",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "nosql-patterns-drills-6",
      "categorySlug": "nosql-patterns-drills",
      "question": "MongoDB aggregation pipeline stage order for performance?",
      "options": [
        "$match early to reduce documents, $sort before $limit",
        "$sort first always",
        "$group first always",
        "Order doesn't matter"
      ],
      "correctAnswer": 0,
      "explanation": "$match early reduces data volume, $sort before $limit uses index",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-0",
      "categorySlug": "database-design-drills",
      "question": "Soft delete implementation pattern?",
      "options": [
        "DELETE FROM table",
        "Add deleted_at timestamp column, filter in queries",
        "Move to archive table",
        "B or C depending on requirements"
      ],
      "correctAnswer": 3,
      "explanation": "Soft delete via timestamp or archive table preserves data",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-1",
      "categorySlug": "database-design-drills",
      "question": "UUID vs auto-increment primary key?",
      "options": [
        "UUID: distributed generation, no conflicts. Auto-increment: smaller, sequential",
        "Always use UUID",
        "Always use auto-increment",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "UUID good for distributed, auto-increment better for size/locality",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-2",
      "categorySlug": "database-design-drills",
      "question": "Audit trail pattern?",
      "options": [
        "Triggers to audit table",
        "Application-level logging",
        "Event sourcing",
        "All are valid approaches"
      ],
      "correctAnswer": 3,
      "explanation": "Triggers, app logging, or event sourcing all provide audit trails",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-3",
      "categorySlug": "database-design-drills",
      "question": "Multi-tenant database isolation?",
      "options": [
        "Shared schema with tenant_id",
        "Schema per tenant",
        "Database per tenant",
        "All valid with different tradeoffs"
      ],
      "correctAnswer": 3,
      "explanation": "Shared cheapest, DB per tenant most isolated, schema in between",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-4",
      "categorySlug": "database-design-drills",
      "question": "Time-series data optimization?",
      "options": [
        "Regular table with timestamp index",
        "Partitioning by time range, compress old partitions",
        "NoSQL only",
        "In-memory database only"
      ],
      "correctAnswer": 1,
      "explanation": "Time-based partitioning with compression optimizes storage/queries",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-5",
      "categorySlug": "database-design-drills",
      "question": "Hierarchical data in SQL?",
      "options": [
        "Adjacency list (parent_id)",
        "Nested sets",
        "Materialized path",
        "All work with different tradeoffs"
      ],
      "correctAnswer": 3,
      "explanation": "Adjacency simple, nested sets fast reads, path good for queries",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-design-drills-6",
      "categorySlug": "database-design-drills",
      "question": "Database migration strategy?",
      "options": [
        "Direct ALTER TABLE in production",
        "Blue-green deployment with schema changes",
        "Expand-contract: add column, migrate data, drop old",
        "C for zero-downtime"
      ],
      "correctAnswer": 3,
      "explanation": "Expand-contract pattern enables zero-downtime migrations",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-0",
      "categorySlug": "database-performance-drills",
      "question": "PostgreSQL: Find slow queries?",
      "options": [
        "pg_stat_statements extension",
        "log_min_duration_statement setting",
        "pg_stat_activity view",
        "All are useful"
      ],
      "correctAnswer": 3,
      "explanation": "pg_stat_statements tracks all queries, log_min_duration logs slow, pg_stat_activity shows current",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-1",
      "categorySlug": "database-performance-drills",
      "question": "MySQL: Buffer pool hit ratio query?",
      "options": [
        "SHOW STATUS LIKE 'Innodb_buffer_pool_read%'",
        "SELECT buffer_pool_hit_rate",
        "SHOW PROCESSLIST",
        "Not available"
      ],
      "correctAnswer": 0,
      "explanation": "Calculate from Innodb_buffer_pool_reads vs read_requests",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-2",
      "categorySlug": "database-performance-drills",
      "question": "Connection pool exhaustion symptoms?",
      "options": [
        "Timeout errors, increased latency, connection wait spikes",
        "CPU 100%",
        "Disk full",
        "Memory leak"
      ],
      "correctAnswer": 0,
      "explanation": "Pool exhaustion shows as timeouts and connection wait time increase",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-3",
      "categorySlug": "database-performance-drills",
      "question": "Database cache warming?",
      "options": [
        "Preload frequently accessed data into cache after restart",
        "Increase temperature",
        "Disable cache",
        "Not necessary"
      ],
      "correctAnswer": 0,
      "explanation": "Cache warming preloads hot data to avoid cold start performance hit",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-4",
      "categorySlug": "database-performance-drills",
      "question": "Batch insert optimization?",
      "options": [
        "INSERT VALUES (),(),() in single statement",
        "Prepared statements with batch execution",
        "COPY/LOAD DATA INFILE for bulk loads",
        "All are optimizations"
      ],
      "correctAnswer": 3,
      "explanation": "Multi-value INSERT, batch prepared statements, or bulk load commands all help",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-performance-drills-5",
      "categorySlug": "database-performance-drills",
      "question": "Read replica lag monitoring?",
      "options": [
        "Compare timestamp/LSN between master and replica",
        "Ping time",
        "CPU usage",
        "Not measurable"
      ],
      "correctAnswer": 0,
      "explanation": "Replication lag measured by comparing positions/timestamps",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-0",
      "categorySlug": "database-backup-drills",
      "question": "Point-in-time recovery requires?",
      "options": [
        "Full backup only",
        "Full backup + incremental/WAL archives",
        "Snapshots only",
        "Not possible"
      ],
      "correctAnswer": 1,
      "explanation": "PITR needs base backup plus all transaction logs/WAL since backup",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-1",
      "categorySlug": "database-backup-drills",
      "question": "PostgreSQL: Online backup command?",
      "options": [
        "pg_dump for logical, pg_basebackup for physical",
        "BACKUP DATABASE",
        "rsync only",
        "Must stop database"
      ],
      "correctAnswer": 0,
      "explanation": "pg_dump creates logical backup, pg_basebackup creates physical backup",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-2",
      "categorySlug": "database-backup-drills",
      "question": "Test backup reliability?",
      "options": [
        "Check file exists",
        "Regularly restore to test environment and verify",
        "Trust the process",
        "Check size only"
      ],
      "correctAnswer": 1,
      "explanation": "Only way to ensure backup works is to actually restore and verify",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-3",
      "categorySlug": "database-backup-drills",
      "question": "RPO vs RTO in database context?",
      "options": [
        "RPO: max data loss tolerance, RTO: max downtime tolerance",
        "Both measure speed",
        "RPO: recovery time, RTO: data loss",
        "Same thing"
      ],
      "correctAnswer": 0,
      "explanation": "RPO: Recovery Point Objective (data loss), RTO: Recovery Time Objective (downtime)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-4",
      "categorySlug": "database-backup-drills",
      "question": "Backup strategy 3-2-1 rule?",
      "options": [
        "3 copies, 2 different media, 1 offsite",
        "Backup every 3 hours, 2 days, 1 week",
        "3 databases, 2 servers, 1 cloud",
        "3GB, 2GB, 1GB sizes"
      ],
      "correctAnswer": 0,
      "explanation": "3 total copies, on 2 different media types, with 1 offsite",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-backup-drills-5",
      "categorySlug": "database-backup-drills",
      "question": "MongoDB: Consistent backup of replica set?",
      "options": [
        "mongodump on any member",
        "Stop writes first",
        "mongodump --oplog on secondary",
        "Not possible"
      ],
      "correctAnswer": 2,
      "explanation": "mongodump --oplog on secondary captures point-in-time consistent backup",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-0",
      "categorySlug": "database-security-drills",
      "question": "Prevent SQL injection - best practice?",
      "options": [
        "Escape quotes",
        "Parameterized queries/prepared statements",
        "Validate input types",
        "Remove special characters"
      ],
      "correctAnswer": 1,
      "explanation": "Parameterized queries completely separate data from SQL code",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-1",
      "categorySlug": "database-security-drills",
      "question": "Database encryption at rest vs in transit?",
      "options": [
        "At rest: TDE/disk encryption, In transit: TLS/SSL",
        "Both use TLS",
        "Both use disk encryption",
        "Same thing"
      ],
      "correctAnswer": 0,
      "explanation": "At rest: Transparent Data Encryption, In transit: TLS connections",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-2",
      "categorySlug": "database-security-drills",
      "question": "Principle of least privilege implementation?",
      "options": [
        "Give admin to trusted users",
        "Create specific roles with minimum required permissions",
        "One account for all apps",
        "Grant all permissions then revoke"
      ],
      "correctAnswer": 1,
      "explanation": "Create roles with only necessary permissions for each use case",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-3",
      "categorySlug": "database-security-drills",
      "question": "Database audit logging should capture?",
      "options": [
        "SELECT queries only",
        "DDL changes only",
        "Who, what, when, where for sensitive operations",
        "Errors only"
      ],
      "correctAnswer": 2,
      "explanation": "Audit logs need user, action, timestamp, source for compliance",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-4",
      "categorySlug": "database-security-drills",
      "question": "PII data masking techniques?",
      "options": [
        "Partial masking (show last 4 digits)",
        "Tokenization",
        "Format-preserving encryption",
        "All are valid techniques"
      ],
      "correctAnswer": 3,
      "explanation": "Different masking techniques for different use cases and compliance needs",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "database-security-drills-5",
      "categorySlug": "database-security-drills",
      "question": "Database credential rotation strategy?",
      "options": [
        "Never change passwords",
        "Dual credentials: create new, update apps, remove old",
        "Change all at once",
        "Annual rotation"
      ],
      "correctAnswer": 1,
      "explanation": "Dual credential pattern allows zero-downtime rotation",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-0",
      "categorySlug": "aws-core-drills",
      "question": "S3 storage classes - cheapest for infrequent access?",
      "options": [
        "S3 Standard",
        "S3 Glacier Instant Retrieval",
        "S3 Intelligent-Tiering",
        "S3 Glacier Deep Archive"
      ],
      "correctAnswer": 3,
      "explanation": "Glacier Deep Archive is cheapest but has 12+ hour retrieval time",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-1",
      "categorySlug": "aws-core-drills",
      "question": "EC2 instance stopped vs terminated?",
      "options": [
        "Stopped: EBS persists, no compute charges. Terminated: everything deleted",
        "No difference",
        "Stopped deletes data",
        "Terminated keeps EBS"
      ],
      "correctAnswer": 0,
      "explanation": "Stopped preserves EBS, charges for storage only. Terminated deletes everything",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-2",
      "categorySlug": "aws-core-drills",
      "question": "RDS Multi-AZ vs Read Replica?",
      "options": [
        "Multi-AZ: sync replication for HA. Read Replica: async for scaling reads",
        "Both for scaling",
        "Both for high availability",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "Multi-AZ for failover (sync), Read Replicas for performance (async)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-3",
      "categorySlug": "aws-core-drills",
      "question": "Lambda cold start mitigation?",
      "options": [
        "Provisioned concurrency",
        "Increase memory",
        "Use smaller runtime",
        "All can help"
      ],
      "correctAnswer": 3,
      "explanation": "Provisioned concurrency keeps warm, more memory = faster CPU, smaller runtime boots faster",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-4",
      "categorySlug": "aws-core-drills",
      "question": "VPC subnet types?",
      "options": [
        "Public: has IGW route, Private: no IGW route",
        "Public: internet access, Private: no access",
        "Based on IP range",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "Public subnet has route to Internet Gateway, private doesn't (uses NAT for outbound)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-5",
      "categorySlug": "aws-core-drills",
      "question": "CloudWatch vs CloudTrail vs Config?",
      "options": [
        "Metrics/Logs vs API Audit vs Resource Compliance",
        "All do monitoring",
        "All do logging",
        "Interchangeable"
      ],
      "correctAnswer": 0,
      "explanation": "CloudWatch: metrics/logs, CloudTrail: API calls audit, Config: resource compliance",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-6",
      "categorySlug": "aws-core-drills",
      "question": "DynamoDB pricing model?",
      "options": [
        "Pay per request or provisioned capacity",
        "Only pay per request",
        "Only provisioned",
        "Pay per storage only"
      ],
      "correctAnswer": 0,
      "explanation": "On-demand (pay per request) or Provisioned (reserved RCU/WCU)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-core-drills-7",
      "categorySlug": "aws-core-drills",
      "question": "S3 bucket public access - most secure approach?",
      "options": [
        "Block all public access, use CloudFront with OAI/OAC",
        "Make bucket public",
        "Use bucket policy only",
        "IAM policies only"
      ],
      "correctAnswer": 0,
      "explanation": "Block public access + CloudFront Origin Access Identity/Control is most secure",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-0",
      "categorySlug": "aws-advanced-drills",
      "question": "SQS vs SNS vs EventBridge?",
      "options": [
        "Queue vs Pub/Sub vs Event Bus with rules",
        "All are queues",
        "All are pub/sub",
        "No difference"
      ],
      "correctAnswer": 0,
      "explanation": "SQS: queue, SNS: fan-out pub/sub, EventBridge: event routing with rules",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-1",
      "categorySlug": "aws-advanced-drills",
      "question": "Cross-region replication use case?",
      "options": [
        "Disaster recovery and global content delivery",
        "Cost savings",
        "Better performance in same region",
        "Required for all production"
      ],
      "correctAnswer": 0,
      "explanation": "CRR for DR, compliance, and reducing latency for global users",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-2",
      "categorySlug": "aws-advanced-drills",
      "question": "API Gateway throttling hierarchy?",
      "options": [
        "Account > API > Stage > Method",
        "Method > Stage > API > Account",
        "All same level",
        "Only API level"
      ],
      "correctAnswer": 0,
      "explanation": "Most specific (method) overrides less specific, up to account limit",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-3",
      "categorySlug": "aws-advanced-drills",
      "question": "ECS vs EKS vs Fargate?",
      "options": [
        "AWS containers vs Kubernetes vs Serverless containers",
        "All the same",
        "ECS runs on EKS",
        "Fargate replaces both"
      ],
      "correctAnswer": 0,
      "explanation": "ECS: AWS native, EKS: managed K8s, Fargate: serverless compute for both",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-4",
      "categorySlug": "aws-advanced-drills",
      "question": "Aurora vs RDS MySQL?",
      "options": [
        "Aurora: 5x performance, auto-scaling storage, 15 replicas",
        "No difference",
        "RDS is faster",
        "Aurora is just rebranded RDS"
      ],
      "correctAnswer": 0,
      "explanation": "Aurora has better performance, auto storage scaling, more replicas",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-5",
      "categorySlug": "aws-advanced-drills",
      "question": "Step Functions vs SWF vs SQS?",
      "options": [
        "Serverless orchestration vs Legacy workflow vs Queue",
        "All do orchestration",
        "All are queues",
        "Identical services"
      ],
      "correctAnswer": 0,
      "explanation": "Step Functions: modern serverless, SWF: legacy, SQS: simple queue",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "aws-advanced-drills-6",
      "categorySlug": "aws-advanced-drills",
      "question": "Kinesis Data Streams vs Firehose vs Analytics?",
      "options": [
        "Real-time streams vs Delivery service vs SQL on streams",
        "All process streams same way",
        "Firehose replaces Streams",
        "Analytics includes others"
      ],
      "correctAnswer": 0,
      "explanation": "Streams: real-time processing, Firehose: load to destinations, Analytics: SQL queries",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-0",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure Resource Manager (ARM) vs Classic deployment?",
      "options": [
        "ARM: Resource groups, RBAC, tags. Classic: deprecated",
        "Classic is newer",
        "No difference",
        "ARM is legacy"
      ],
      "correctAnswer": 0,
      "explanation": "ARM is current model with resource groups, RBAC, tags. Classic deprecated",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-1",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure Storage account types?",
      "options": [
        "Standard (HDD) vs Premium (SSD)",
        "StorageV2 includes Blob, File, Queue, Table",
        "BlobStorage for blob-only workloads",
        "All of the above"
      ],
      "correctAnswer": 3,
      "explanation": "Multiple types: General-purpose v2 (recommended), Premium, BlobStorage",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-2",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure App Service vs Functions vs Container Instances?",
      "options": [
        "Web apps vs Serverless functions vs Quick containers",
        "All serverless",
        "All require containers",
        "Functions replace App Service"
      ],
      "correctAnswer": 0,
      "explanation": "App Service: PaaS web apps, Functions: serverless compute, ACI: fast container deployment",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-3",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure availability zones vs sets?",
      "options": [
        "Zones: physical separation, Sets: logical grouping in datacenter",
        "Same thing",
        "Sets are better",
        "Zones are deprecated"
      ],
      "correctAnswer": 0,
      "explanation": "Zones protect from datacenter failure, Sets from rack/hardware failure",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-4",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure Cosmos DB consistency levels?",
      "options": [
        "Strong, Bounded Staleness, Session, Consistent Prefix, Eventual",
        "Only strong and eventual",
        "Same as SQL",
        "No consistency options"
      ],
      "correctAnswer": 0,
      "explanation": "5 levels from strong to eventual with different tradeoffs",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-5",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure Service Bus vs Event Hub vs Event Grid?",
      "options": [
        "Enterprise messaging vs Big data streaming vs Event routing",
        "All do messaging",
        "Event Hub replaces Service Bus",
        "Event Grid is newest, replaces others"
      ],
      "correctAnswer": 0,
      "explanation": "Service Bus: enterprise messaging, Event Hub: streaming, Event Grid: reactive events",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "azure-fundamentals-drills-6",
      "categorySlug": "azure-fundamentals-drills",
      "question": "Azure AD vs AD Domain Services?",
      "options": [
        "Cloud identity service vs Managed domain controllers",
        "Same service",
        "AD DS replaces Azure AD",
        "Both on-premises only"
      ],
      "correctAnswer": 0,
      "explanation": "Azure AD: cloud identity/SSO, AD DS: managed traditional AD in cloud",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-0",
      "categorySlug": "gcp-essentials-drills",
      "question": "GCP project vs folder vs organization?",
      "options": [
        "Organization > Folders > Projects > Resources",
        "All same level",
        "Project > Organization > Folder",
        "No hierarchy"
      ],
      "correctAnswer": 0,
      "explanation": "Hierarchical: Org at top, folders for grouping, projects contain resources",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-1",
      "categorySlug": "gcp-essentials-drills",
      "question": "Compute Engine vs App Engine vs Cloud Run?",
      "options": [
        "VMs vs PaaS vs Serverless containers",
        "All serverless",
        "All require containers",
        "App Engine is newest"
      ],
      "correctAnswer": 0,
      "explanation": "Compute Engine: IaaS VMs, App Engine: PaaS, Cloud Run: serverless containers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-2",
      "categorySlug": "gcp-essentials-drills",
      "question": "Cloud Storage classes?",
      "options": [
        "Standard, Nearline (30d), Coldline (90d), Archive (365d)",
        "Only Standard and Archive",
        "All same price",
        "Based on region only"
      ],
      "correctAnswer": 0,
      "explanation": "Classes based on access frequency: Standard, Nearline, Coldline, Archive",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-3",
      "categorySlug": "gcp-essentials-drills",
      "question": "BigQuery vs Bigtable vs Firestore?",
      "options": [
        "Analytics warehouse vs Wide-column NoSQL vs Document DB",
        "All SQL databases",
        "All NoSQL",
        "BigQuery replaces others"
      ],
      "correctAnswer": 0,
      "explanation": "BigQuery: analytics, Bigtable: wide-column for big data, Firestore: documents",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-4",
      "categorySlug": "gcp-essentials-drills",
      "question": "Cloud Pub/Sub vs Cloud Tasks?",
      "options": [
        "Pub/Sub: streaming, Tasks: async task execution",
        "Same service",
        "Tasks replaces Pub/Sub",
        "Both are queues"
      ],
      "correctAnswer": 0,
      "explanation": "Pub/Sub for event streaming, Cloud Tasks for controlled async execution",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-5",
      "categorySlug": "gcp-essentials-drills",
      "question": "GKE Autopilot vs Standard?",
      "options": [
        "Autopilot: Google manages nodes, Standard: you manage",
        "No difference",
        "Standard is serverless",
        "Autopilot deprecated"
      ],
      "correctAnswer": 0,
      "explanation": "Autopilot: fully managed nodes, Standard: more control but more management",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "gcp-essentials-drills-6",
      "categorySlug": "gcp-essentials-drills",
      "question": "Cloud Load Balancing types?",
      "options": [
        "Global (HTTP/S, TCP, UDP) vs Regional (TCP/UDP, Internal)",
        "Only HTTP/S",
        "Only regional",
        "No options"
      ],
      "correctAnswer": 0,
      "explanation": "Global LBs for multi-region, Regional for single region/internal",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-0",
      "categorySlug": "multi-cloud-drills",
      "question": "AWS S3 vs Azure Blob vs GCS naming?",
      "options": [
        "Bucket/Object vs Container/Blob vs Bucket/Object",
        "All use Bucket/Object",
        "All use Container/Blob",
        "All different"
      ],
      "correctAnswer": 0,
      "explanation": "AWS/GCP use Bucket/Object, Azure uses Container/Blob terminology",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-1",
      "categorySlug": "multi-cloud-drills",
      "question": "Lambda vs Azure Functions vs Cloud Functions limits?",
      "options": [
        "15min vs 10min(default) vs 9min",
        "All 5 minutes",
        "All 60 minutes",
        "No limits"
      ],
      "correctAnswer": 0,
      "explanation": "AWS Lambda: 15min, Azure Functions: 10min default, GCP: 9min",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-2",
      "categorySlug": "multi-cloud-drills",
      "question": "IAM comparison across clouds?",
      "options": [
        "AWS: Policies, Azure: RBAC, GCP: IAM with roles",
        "All use same system",
        "Only AWS has IAM",
        "Azure has no IAM"
      ],
      "correctAnswer": 0,
      "explanation": "All have IAM but different approaches: AWS policies, Azure RBAC, GCP roles",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-3",
      "categorySlug": "multi-cloud-drills",
      "question": "Kubernetes managed services?",
      "options": [
        "EKS (AWS), AKS (Azure), GKE (GCP)",
        "Only AWS has managed K8s",
        "All use same service name",
        "Kubernetes not available"
      ],
      "correctAnswer": 0,
      "explanation": "Each cloud has managed Kubernetes: EKS, AKS, GKE",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-4",
      "categorySlug": "multi-cloud-drills",
      "question": "CDN services comparison?",
      "options": [
        "CloudFront vs Azure CDN vs Cloud CDN",
        "All use CloudFront",
        "No CDN in GCP",
        "Azure doesn't have CDN"
      ],
      "correctAnswer": 0,
      "explanation": "CloudFront (AWS), Azure CDN/Front Door, Cloud CDN (GCP)",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "multi-cloud-drills-5",
      "categorySlug": "multi-cloud-drills",
      "question": "Regions and availability zones concept?",
      "options": [
        "All clouds have regions with multiple AZs/zones",
        "Only AWS has regions",
        "GCP doesn't have zones",
        "Azure uses different model"
      ],
      "correctAnswer": 0,
      "explanation": "All major clouds use regions with multiple availability zones",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-0",
      "categorySlug": "cloud-cost-drills",
      "question": "Biggest cost saving opportunity usually?",
      "options": [
        "Right-sizing oversized instances",
        "Switching clouds",
        "Negotiating prices",
        "Using latest instance types"
      ],
      "correctAnswer": 0,
      "explanation": "Right-sizing (matching resources to actual usage) typically saves most",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-1",
      "categorySlug": "cloud-cost-drills",
      "question": "Reserved vs Spot vs On-Demand pricing?",
      "options": [
        "1-3yr commitment vs Interruptible vs Full price",
        "All same price",
        "Spot most expensive",
        "Reserved has no commitment"
      ],
      "correctAnswer": 0,
      "explanation": "Reserved: commitment discount, Spot: cheapest but interruptible, On-Demand: flexible but expensive",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-2",
      "categorySlug": "cloud-cost-drills",
      "question": "Data transfer costs - what's free?",
      "options": [
        "Inbound usually free, same-AZ often free",
        "All transfers free",
        "All transfers charged",
        "Outbound free"
      ],
      "correctAnswer": 0,
      "explanation": "Inbound typically free, same-AZ often free, cross-region/outbound charged",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-3",
      "categorySlug": "cloud-cost-drills",
      "question": "Cost allocation tags best practice?",
      "options": [
        "Environment, Owner, Project, CostCenter",
        "No tags needed",
        "Only use Name tag",
        "Random tags"
      ],
      "correctAnswer": 0,
      "explanation": "Consistent tagging strategy enables cost tracking and chargeback",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-4",
      "categorySlug": "cloud-cost-drills",
      "question": "Orphaned resources to check?",
      "options": [
        "Unattached EBS/disks, unused IPs, old snapshots, idle LBs",
        "Only compute instances",
        "Resources never orphaned",
        "Can't detect orphans"
      ],
      "correctAnswer": 0,
      "explanation": "Common orphans: unattached storage, elastic IPs, snapshots, load balancers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-cost-drills-5",
      "categorySlug": "cloud-cost-drills",
      "question": "Dev/test cost optimization?",
      "options": [
        "Auto-shutdown nights/weekends",
        "Use production instances",
        "Keep running 24/7",
        "Use most expensive instances"
      ],
      "correctAnswer": 0,
      "explanation": "Schedule stop/start for non-production to save 65-75% on compute",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-0",
      "categorySlug": "cloud-security-drills",
      "question": "Shared responsibility model means?",
      "options": [
        "Cloud provider: OF the cloud, Customer: IN the cloud",
        "Provider responsible for everything",
        "Customer responsible for everything",
        "50/50 split always"
      ],
      "correctAnswer": 0,
      "explanation": "Provider secures infrastructure, customer secures data/apps/access",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-1",
      "categorySlug": "cloud-security-drills",
      "question": "MFA for cloud accounts - minimum?",
      "options": [
        "Root/admin accounts and all users with privileges",
        "Only root account",
        "Not necessary",
        "Only developers"
      ],
      "correctAnswer": 0,
      "explanation": "MFA essential for root and any privileged access",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-2",
      "categorySlug": "cloud-security-drills",
      "question": "Principle of least privilege implementation?",
      "options": [
        "Start with no access, add as needed",
        "Give admin to everyone",
        "Start with full access, remove later",
        "One shared account"
      ],
      "correctAnswer": 0,
      "explanation": "Default deny, grant minimum permissions needed for role",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-3",
      "categorySlug": "cloud-security-drills",
      "question": "Network security layers?",
      "options": [
        "Security Groups/Firewalls, NACLs, WAF, DDoS protection",
        "Only firewall needed",
        "Physical security only",
        "No network security in cloud"
      ],
      "correctAnswer": 0,
      "explanation": "Defense in depth: multiple layers of network security",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-4",
      "categorySlug": "cloud-security-drills",
      "question": "Encryption requirements?",
      "options": [
        "At rest and in transit for all sensitive data",
        "Only at rest",
        "Only in transit",
        "Encryption optional"
      ],
      "correctAnswer": 0,
      "explanation": "Both at-rest and in-transit encryption required for sensitive data",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-5",
      "categorySlug": "cloud-security-drills",
      "question": "Compliance shared responsibility?",
      "options": [
        "Both provider and customer have obligations",
        "Only provider responsible",
        "Only customer responsible",
        "Compliance not possible in cloud"
      ],
      "correctAnswer": 0,
      "explanation": "Provider: compliant infrastructure, Customer: compliant usage",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-security-drills-6",
      "categorySlug": "cloud-security-drills",
      "question": "Cloud access key rotation?",
      "options": [
        "Every 90 days or per policy",
        "Never rotate",
        "Only if compromised",
        "Annually"
      ],
      "correctAnswer": 0,
      "explanation": "Regular rotation (typically 90 days) reduces exposure window",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-0",
      "categorySlug": "cloud-migration-drills",
      "question": "The 6 R's of migration?",
      "options": [
        "Rehost, Replatform, Refactor, Repurchase, Retire, Retain",
        "Only Rehost and Refactor",
        "Run, Remove, Replace",
        "No standard approach"
      ],
      "correctAnswer": 0,
      "explanation": "6 R's framework for migration strategy decisions",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-1",
      "categorySlug": "cloud-migration-drills",
      "question": "Lift and shift means?",
      "options": [
        "Rehost - migrate as-is without changes",
        "Complete rewrite",
        "Partial refactoring",
        "Stay on-premises"
      ],
      "correctAnswer": 0,
      "explanation": "Lift and shift (rehost) migrates without modification for speed",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-2",
      "categorySlug": "cloud-migration-drills",
      "question": "Database migration - heterogeneous?",
      "options": [
        "Different database engines (Oracle to PostgreSQL)",
        "Same engine migration",
        "No database changes",
        "Only schema migration"
      ],
      "correctAnswer": 0,
      "explanation": "Heterogeneous migration changes database engines, requires schema conversion",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-3",
      "categorySlug": "cloud-migration-drills",
      "question": "Migration pilot/POC should be?",
      "options": [
        "Representative but non-critical workload",
        "Most critical system",
        "Simplest possible app",
        "All systems at once"
      ],
      "correctAnswer": 0,
      "explanation": "Pilot should be representative to learn but not critical to business",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-4",
      "categorySlug": "cloud-migration-drills",
      "question": "Hybrid cloud vs Multi-cloud?",
      "options": [
        "On-prem + cloud vs Multiple cloud providers",
        "Same thing",
        "Hybrid is multiple clouds",
        "Multi includes on-prem"
      ],
      "correctAnswer": 0,
      "explanation": "Hybrid: on-premises + cloud, Multi: multiple cloud providers",
      "difficulty": 3,
      "tags": []
    },
    {
      "id": "cloud-migration-drills-5",
      "categorySlug": "cloud-migration-drills",
      "question": "Cloud migration biggest challenges?",
      "options": [
        "Skills gap, security concerns, legacy dependencies",
        "Only cost",
        "No challenges",
        "Only technical"
      ],
      "correctAnswer": 0,
      "explanation": "People/skills, security/compliance, and legacy systems are top challenges",
      "difficulty": 3,
      "tags": []
    }
  ],
  "metadata": {
    "totalQuestions": 513,
    "totalCategories": 72,
    "extractedAt": "2025-08-25T13:25:39.074Z"
  }
}