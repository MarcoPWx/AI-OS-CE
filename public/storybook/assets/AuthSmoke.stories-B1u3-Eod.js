import{r as l,R as e}from"./index-R2V08a_e.js";function p(){const[t,n]=l.useState("logged-out"),[o,c]=l.useState(null),u=async()=>{n("authenticating"),await new Promise(d=>setTimeout(d,600)),c({id:"demo",email:"demo@quizmentor.app"}),n("authenticated")},m=()=>{c(null),n("logged-out")};return e.createElement("div",{style:{padding:16}},e.createElement("h3",null,"Auth Smoke (state machine)"),e.createElement("div",null,"State: ",e.createElement("strong",{"data-testid":"state"},t)),t==="logged-out"&&e.createElement("button",{onClick:u},"Login"),t==="authenticating"&&e.createElement("div",null,"Authenticating…"),t==="authenticated"&&e.createElement("div",null,e.createElement("div",null,"User: ",e.createElement("code",null,o==null?void 0:o.email)),e.createElement("button",{onClick:m},"Logout")))}const h={title:"Auth/Smoke",component:p,parameters:{helpDoc:"?path=/story/specs-security-security-privacy-extended-model--page",helpTitle:"Security & Privacy — Extended Model",docs:{description:{component:"Simple state-machine to smoke test auth UX transitions without real backend calls."}}}},a={};var s,r,i;a.parameters={...a.parameters,docs:{...(s=a.parameters)==null?void 0:s.docs,source:{originalSource:"{}",...(i=(r=a.parameters)==null?void 0:r.docs)==null?void 0:i.source}}};const E=["Default"];export{a as Default,E as __namedExportsOrder,h as default};
