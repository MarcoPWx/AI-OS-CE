import{r as n,R as a}from"./index-R2V08a_e.js";function K(){const[k,N]=n.useState("ws://localhost:4000"),[f,O]=n.useState("http://localhost:3002/api/sse-demo"),[S,l]=n.useState("none"),[i,H]=n.useState(!1),[g,J]=n.useState(""),[E,B]=n.useState(""),u=n.useRef(null),[z,R]=n.useState(!1),[L,C]=n.useState([]),o=n.useRef(null),y=n.useRef(null),m=n.useRef(null),s=(e,t)=>{C(r=>[{ts:Date.now(),source:e,data:t},...r].slice(0,100))},w=()=>{var e,t,r;(e=u.current)==null||e.abort(),u.current=null,R(!1),l("none");try{(t=o.current)==null||t.close()}catch{}try{(r=y.current)==null||r.close()}catch{}o.current=null,y.current=null,m.current&&(clearTimeout(m.current),m.current=null)},G=()=>{w(),C([]),R(!0);try{const e=new WebSocket(k);o.current=e,e.onopen=()=>{l("ws"),s("ws",{type:"open"})},e.onmessage=t=>{try{s("ws",JSON.parse(t.data))}catch{s("ws",t.data)}},e.onerror=()=>{S!=="ws"&&b()},e.onclose=()=>{s("ws",{type:"close"})},m.current=setTimeout(()=>{S!=="ws"&&b()},1500)}catch{b()}},b=()=>{var e;if(i)return X();try{(e=o.current)==null||e.close()}catch{}o.current=null;try{const t=new EventSource(f);y.current=t,t.onopen=()=>{l("sse"),s("sse",{type:"open"})},t.onmessage=r=>{try{s("sse",JSON.parse(r.data))}catch{s("sse",r.data)}},t.addEventListener("sse-demo",r=>{try{s("sse",JSON.parse(r.data))}catch{s("sse",r.data)}}),t.onerror=()=>{s("sse",{type:"error"})}}catch(t){s("sse",{type:"error",message:t==null?void 0:t.message})}};n.useEffect(()=>()=>w(),[]);const X=async()=>{var e;try{(e=u.current)==null||e.abort();const t=new AbortController;u.current=t,l("sse"),s("sse",{type:"open",note:"fetch-based SSE"});const r={Accept:"text/event-stream"};g.trim()&&(r.Authorization=g.trim()),E.trim()&&(r["X-Custom"]=E.trim());const p=await fetch(f,{method:"GET",headers:r,signal:t.signal});if(!p.ok||!p.body){s("sse",{type:"error",status:p.status});return}const _=p.body.getReader(),j=new TextDecoder;let c="";for(;;){const{done:I,value:V}=await _.read();if(I)break;c+=j.decode(V,{stream:!0});let v;for(;(v=c.indexOf(`

`))>=0;){const x=c.slice(0,v);if(c=c.slice(v+2),!x)continue;const q=x.split(`
`);let W="message";const A=[];for(const d of q)d.startsWith("event:")&&(W=d.slice(6).trim()),d.startsWith("data:")&&A.push(d.slice(5).trim());const T=A.join(`
`);try{s("sse",JSON.parse(T))}catch{s("sse",{event:W,data:T})}}}}catch(t){(t==null?void 0:t.name)!=="AbortError"&&s("sse",{type:"error",message:t==null?void 0:t.message})}};return a.createElement("div",{style:{padding:16}},a.createElement("h3",null,"Live WS → SSE Fallback (Real SSE)"),a.createElement("p",null,"Attempts WebSocket first; falls back to SSE if WS is unavailable or times out. Start the SSE demo server with: ",a.createElement("code",null,"npm run sse:demo")),a.createElement("div",{style:{display:"flex",gap:12,flexWrap:"wrap",marginBottom:12}},a.createElement("label",null,"WS URL:",a.createElement("input",{style:{width:360,marginLeft:8},value:k,onChange:e=>N(e.target.value)})),a.createElement("label",null,"SSE URL:",a.createElement("input",{style:{width:360,marginLeft:8},value:f,onChange:e=>O(e.target.value)})),a.createElement("label",null,a.createElement("input",{type:"checkbox",checked:i,onChange:e=>H(e.target.checked)})," ","Use fetch-based SSE (supports headers)"),i&&a.createElement(a.Fragment,null,a.createElement("label",null,"Authorization:",a.createElement("input",{style:{width:260,marginLeft:8},placeholder:"Bearer ...",value:g,onChange:e=>J(e.target.value)})),a.createElement("label",null,"X-Custom:",a.createElement("input",{style:{width:200,marginLeft:8},placeholder:"custom",value:E,onChange:e=>B(e.target.value)}))),z?a.createElement("button",{onClick:w},"Stop"):a.createElement("button",{onClick:G},"Start")),a.createElement("div",{style:{marginBottom:8}},"Active transport: ",a.createElement("strong",null,S.toUpperCase()),i?" (fetch mode)":""),a.createElement("div",{style:{fontFamily:"monospace",whiteSpace:"pre-wrap",background:"#101322",color:"#d7e0ff",padding:12,borderRadius:8,maxHeight:320,overflow:"auto"}},L.length===0?a.createElement("div",null,"No events yet…"):a.createElement("ul",null,L.map((e,t)=>a.createElement("li",{key:t},"[",new Date(e.ts).toLocaleTimeString(),"] ",e.source.toUpperCase()," →"," ",typeof e.data=="string"?e.data:JSON.stringify(e.data))))))}const P={title:"Live/WS SSE Fallback",component:K,parameters:{helpDoc:"?path=/story/specs-ai-ai-gateway-full-specification--page",helpTitle:"AI Gateway Spec (concept)",helpDocs:[{href:"?path=/story/overview-architecture--page#layered-view",title:"Architecture — Layered View"}],docs:{description:{component:"Live transport demo that attempts WebSocket first and falls back to SSE. Start the local SSE server: npm run sse:demo (http://localhost:3002/api/sse-demo)."}},layout:"padded"}},h={};var U,D,F;h.parameters={...h.parameters,docs:{...(U=h.parameters)==null?void 0:U.docs,source:{originalSource:"{}",...(F=(D=h.parameters)==null?void 0:D.docs)==null?void 0:F.source}}};const Q=["Default"];export{h as Default,Q as __namedExportsOrder,P as default};
